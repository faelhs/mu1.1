#include "StdAfx.h"

CMainInfo gMainInfo;

void CMainInfo::Load()
{
	this->Fixes();
	this->Connect();
}

void CMainInfo::Connect()
{
	gToolKit.WriteMemory((LPVOID)pMain_Serial, gProtect.m_Data.szSerial, sizeof(gProtect.m_Data.szSerial));

	gToolKit.WriteMemory((LPVOID)pMain_Version, gProtect.m_Data.szVersion, sizeof(gProtect.m_Data.szVersion));

	gToolKit.WriteMemory((LPVOID)pMain_IP, gProtect.m_Data.szIP, sizeof(gProtect.m_Data.szIP));
}

void CMainInfo::Fixes()
{
	//==================================================================
	// - [] [Fix] mu.exe
	//==================================================================
	*(BYTE*)(0x4B4305) = 0xEB;

	//==================================================================
	// - [] [Fix] config.ini read error
	//==================================================================
	*(BYTE*)(0x4B47FE) = 0x75;

	//==================================================================
	// - [] [Fix] GG Init Error
	//==================================================================
	*(BYTE*)(0x4B4856) = 0xE9;
	*(BYTE*)(0x4B4857) = 0xA6;
	*(BYTE*)(0x4B4858) = 0x00;
	*(BYTE*)(0x4B485B) = 0x90;

	//==================================================================
	// - [] [Fix] Resource Guard
	//==================================================================
	*(BYTE*)(0x4BEA9F) = 0xEB;

	//==================================================================
	// - [] [Fix] CRC Error
	//==================================================================
	*(BYTE*)(0x40ABE3) = 0xEB;
	*(BYTE*)(0x40ADD6) = 0xEB;
	*(BYTE*)(0x53E994) = 0xEB;
	*(BYTE*)(0x53ECD4) = 0xEB;
	*(BYTE*)(0x53F8B3) = 0xEB;
	*(BYTE*)(0x540593) = 0xEB;

	//==================================================================
	// - [] [Fix] ServerList
	//==================================================================
    *(DWORD*)(0x61F3DA) = 0xFF;
    *(DWORD*)(0x61F3E0) = 0xFF;
    *(DWORD*)(0x61F431) = 0x120;
    *(BYTE*)(0x61F463) = 0x4C;
    *(DWORD*)(0x61F7E0) = 0xFC;
    *(DWORD*)(0x61F814) = 0x16D;
    *(DWORD*)(0x61F81F) = 0x1F3;
    *(DWORD*)(0x61FE1D) = 0xFF;
    *(DWORD*)(0x61FE24) = 0xFF;
    *(DWORD*)(0x61FE8F) = 0x118;
    *(DWORD*)(0x61FE9E) = 0x127;
    *(DWORD*)(0x61FEC7) = 0x127;
    *(DWORD*)(0x61FE8F) = 0x11D;
    *(DWORD*)(0x61FF12) = 0x3F700000;
    *(DWORD*)(0x6201B7) = 0x3F700000;
    *(DWORD*)(0x6201D6) = 0x43B68000;
    *(DWORD*)(0x620251) = 0x1B0;
    *(float*)(0x6A9788) = 383.0f;

	//==================================================================
	// - [] [Fix] Modo Janela
	//==================================================================
	*(DWORD*)(0x4B36EB) = (DWORD)(&WndProc);

	//==================================================================
	// - [] [Fix] Acent
	//==================================================================
	*(BYTE*)(0x6B6654) = 0xA0;

	//==================================================================
	// - [] [Fix] GameGuard Folder
	//==================================================================
	*(BYTE*)(0x00675D6F) = 0xEB;

	//==================================================================
	// - [] [Fix] Main Anti Hack
	//==================================================================
	gToolKit.SetRange((LPVOID)0x0044AE85, 5, ASM::NOP);
	gToolKit.SetRange((LPVOID)0x0044AEAE, 5, ASM::NOP);
	gToolKit.SetRange((LPVOID)0x0044B81D, 5, ASM::NOP);
	gToolKit.SetRange((LPVOID)0x0044B859, 5, ASM::NOP);
	gToolKit.SetRange((LPVOID)0x0044B8AC, 5, ASM::NOP);
	gToolKit.SetRange((LPVOID)0x0044B8FF, 5, ASM::NOP);
	gToolKit.SetRange((LPVOID)0x004A784A, 5, ASM::NOP);

	//==================================================================
	// - [] [Fix] Mover Cursor (Quando abre o NPC)
	//==================================================================
	*(BYTE*)(0x004CBC47) = 0x90;
	// ---
	for(DWORD i = 0x004CBC65; i < 0x004CBC6C; i++)
	{
		*(BYTE*)(i) = 0x90;
	}

	//==================================================================
	// - [] [Fix] Recuo
	//==================================================================
	*(BYTE*)(0x004ECA80) = 0xC3;

	//==========================================================================
	// - [] [Fix] Allow Items + 15
	//==========================================================================
	*(BYTE*)(0x00506FAD+1) = 0x8C;
	*(BYTE*)(0x005F9CC2+2) = 0x10;

	//==========================================================================
	// - [] [Fix] Screen Folder
	//==========================================================================
	const char SCREEN_FOLDER[] = { "ScreenShot/Screen_(%02d_%02d-%02d_%02d)-%04d.jpg"};
	// ---
	memcpy((int*)0x006C4958, SCREEN_FOLDER, sizeof(SCREEN_FOLDER));

	//==========================================================================
	// - [] [Fix] Text Screen Select Char
	//==========================================================================
	*(DWORD*)(0x62590A) = (DWORD)(&""); // 1
    *(DWORD*)(0x625918) = (DWORD)(&""); // 1
    *(DWORD*)(0x62593C) = (DWORD)(&""); // 1
    *(DWORD*)(0x625957) = (DWORD)(&""); // 2
    *(DWORD*)(0x625964) = (DWORD)(&""); // 2
    *(DWORD*)(0x625988) = (DWORD)(&""); // 2
    *(DWORD*)(0x6259A3) = (DWORD)(&""); // 3
    *(DWORD*)(0x6259B0) = (DWORD)(&""); // 3
    *(DWORD*)(0x6259D4) = (DWORD)(&""); // 3
}
