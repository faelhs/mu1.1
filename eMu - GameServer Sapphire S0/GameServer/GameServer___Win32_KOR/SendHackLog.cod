; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\SendHackLog.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CSendHackLog@@6B@				; CSendHackLog::`vftable'
PUBLIC	??0CSendHackLog@@QAE@XZ				; CSendHackLog::CSendHackLog
PUBLIC	??_R4CSendHackLog@@6B@				; CSendHackLog::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSendHackLog@@@8			; CSendHackLog `RTTI Type Descriptor'
PUBLIC	??_R3CSendHackLog@@8				; CSendHackLog::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSendHackLog@@8				; CSendHackLog::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSendHackLog@@8			; CSendHackLog::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??0WzUdp@@QAE@XZ:PROC				; WzUdp::WzUdp
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECSendHackLog@@UAEPAXI@Z:PROC		; CSendHackLog::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CSendHackLog@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\sendhacklog.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CSendHackLog@@8 DD FLAT:??_R0?AVCSendHackLog@@@8 ; CSendHackLog::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSendHackLog@@8
rdata$r	ENDS
;	COMDAT ??_R2CSendHackLog@@8
rdata$r	SEGMENT
??_R2CSendHackLog@@8 DD FLAT:??_R1A@?0A@EA@CSendHackLog@@8 ; CSendHackLog::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSendHackLog@@8
rdata$r	SEGMENT
??_R3CSendHackLog@@8 DD 00H				; CSendHackLog::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSendHackLog@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSendHackLog@@@8
_DATA	SEGMENT
??_R0?AVCSendHackLog@@@8 DD FLAT:??_7type_info@@6B@	; CSendHackLog `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSendHackLog@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CSendHackLog@@6B@
rdata$r	SEGMENT
??_R4CSendHackLog@@6B@ DD 00H				; CSendHackLog::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSendHackLog@@@8
	DD	FLAT:??_R3CSendHackLog@@8
rdata$r	ENDS
;	COMDAT ??_7CSendHackLog@@6B@
CONST	SEGMENT
??_7CSendHackLog@@6B@ DD FLAT:??_R4CSendHackLog@@6B@	; CSendHackLog::`vftable'
	DD	FLAT:??_ECSendHackLog@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CSendHackLog@@QAE@XZ
_TEXT	SEGMENT
??0CSendHackLog@@QAE@XZ PROC				; CSendHackLog::CSendHackLog, COMDAT
; _this$ = ecx

; 20   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CSendHackLog@@6B@
  0000c	e8 00 00 00 00	 call	 ??0WzUdp@@QAE@XZ	; WzUdp::WzUdp

; 21   : 	return;
; 22   : }

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c3		 ret	 0
??0CSendHackLog@@QAE@XZ ENDP				; CSendHackLog::CSendHackLog
_TEXT	ENDS
PUBLIC	??1CSendHackLog@@UAE@XZ				; CSendHackLog::~CSendHackLog
EXTRN	??1WzUdp@@UAE@XZ:PROC				; WzUdp::~WzUdp
; Function compile flags: /Ogtp
;	COMDAT ??1CSendHackLog@@UAE@XZ
_TEXT	SEGMENT
??1CSendHackLog@@UAE@XZ PROC				; CSendHackLog::~CSendHackLog, COMDAT
; _this$ = ecx

; 26   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSendHackLog@@6B@

; 27   : 	return;
; 28   : }

  00006	83 c1 04	 add	 ecx, 4
  00009	e9 00 00 00 00	 jmp	 ??1WzUdp@@UAE@XZ	; WzUdp::~WzUdp
??1CSendHackLog@@UAE@XZ ENDP				; CSendHackLog::~CSendHackLog
_TEXT	ENDS
PUBLIC	?SendSet@CSendHackLog@@QAEXPADH@Z		; CSendHackLog::SendSet
EXTRN	?SendSet@WzUdp@@QAEHPADH@Z:PROC			; WzUdp::SendSet
EXTRN	?CreateSocket@WzUdp@@QAEHXZ:PROC		; WzUdp::CreateSocket
; Function compile flags: /Ogtp
;	COMDAT ?SendSet@CSendHackLog@@QAEXPADH@Z
_TEXT	SEGMENT
_ip$ = 8						; size = 4
_port$ = 12						; size = 4
?SendSet@CSendHackLog@@QAEXPADH@Z PROC			; CSendHackLog::SendSet, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 33   : 	this->m_UdpSocCHackLog.CreateSocket();

  00004	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?CreateSocket@WzUdp@@QAEHXZ ; WzUdp::CreateSocket

; 34   : 	this->m_UdpSocCHackLog.SendSet(ip, port);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _port$[ebp]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ip$[ebp]
  00014	50		 push	 eax
  00015	51		 push	 ecx
  00016	8b ce		 mov	 ecx, esi
  00018	e8 00 00 00 00	 call	 ?SendSet@WzUdp@@QAEHPADH@Z ; WzUdp::SendSet
  0001d	5e		 pop	 esi

; 35   : }

  0001e	5d		 pop	 ebp
  0001f	c2 08 00	 ret	 8
?SendSet@CSendHackLog@@QAEXPADH@Z ENDP			; CSendHackLog::SendSet
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Send@CSendHackLog@@QAEXHEPAD@Z			; CSendHackLog::Send
EXTRN	?SendData@WzUdp@@QAEHPAEK@Z:PROC		; WzUdp::SendData
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Send@CSendHackLog@@QAEXHEPAD@Z
_TEXT	SEGMENT
_Msg$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_type$ = 12						; size = 1
_Context$ = 16						; size = 4
?Send@CSendHackLog@@QAEXHEPAD@Z PROC			; CSendHackLog::Send, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 10	 mov	 esi, DWORD PTR _Context$[ebp]
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 53   : 	PMSG_HACK_LOG Msg;
; 54   : 	
; 55   : 	PHeadSetB((LPBYTE)&Msg, 0x01, sizeof(Msg) );

  00019	6a 50		 push	 80			; 00000050H
  0001b	8d 45 ac	 lea	 eax, DWORD PTR _Msg$[ebp]
  0001e	6a 01		 push	 1
  00020	50		 push	 eax
  00021	8b d9		 mov	 ebx, ecx
  00023	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 56   : 	Msg.wServer = gGameServerCode;

  00028	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode

; 57   : 	memcpy(Msg.AccountID, gObj[aIndex].AccountID , MAX_ACCOUNT_LEN );

  0002f	8b c7		 mov	 eax, edi
  00031	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00037	8b 90 64 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  0003d	66 89 4d b0	 mov	 WORD PTR _Msg$[ebp+4], cx
  00041	8b 88 68 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+104]
  00047	89 55 b2	 mov	 DWORD PTR _Msg$[ebp+6], edx
  0004a	66 8b 90 6c 00
	00 00		 mov	 dx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+108]
  00051	89 4d b6	 mov	 DWORD PTR _Msg$[ebp+10], ecx

; 58   : 	memcpy(Msg.Name, gObj[aIndex].Name, MAX_ACCOUNT_LEN );

  00054	8b 88 6f 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  0005a	66 89 55 ba	 mov	 WORD PTR _Msg$[ebp+14], dx
  0005e	8b 90 73 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+115]
  00064	66 8b 80 77 00
	00 00		 mov	 ax, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+119]
  0006b	89 4d bd	 mov	 DWORD PTR _Msg$[ebp+17], ecx

; 59   : 	Msg.AccountID[MAX_ACCOUNT_LEN] = 0;
; 60   : 	Msg.Name[MAX_ACCOUNT_LEN] = 0;
; 61   : 	Msg.btType = type;

  0006e	8a 4d 0c	 mov	 cl, BYTE PTR _type$[ebp]
  00071	66 89 45 c5	 mov	 WORD PTR _Msg$[ebp+25], ax
  00075	88 4d c8	 mov	 BYTE PTR _Msg$[ebp+28], cl
  00078	32 c0		 xor	 al, al
  0007a	89 55 c1	 mov	 DWORD PTR _Msg$[ebp+21], edx
  0007d	88 45 bc	 mov	 BYTE PTR _Msg$[ebp+16], al
  00080	88 45 c7	 mov	 BYTE PTR _Msg$[ebp+27], al

; 62   : 	memcpy(Msg.szPacketContext, Context, sizeof(Msg.szPacketContext) );

  00083	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00088	8d 7d c9	 lea	 edi, DWORD PTR _Msg$[ebp+29]
  0008b	f3 a5		 rep movsd
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   : 
; 64   : 	this->m_UdpSocCHackLog.SendData((LPBYTE)&Msg, sizeof(Msg) );

  00090	6a 50		 push	 80			; 00000050H
  00092	8d 55 ac	 lea	 edx, DWORD PTR _Msg$[ebp]
  00095	52		 push	 edx
  00096	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00099	66 a5		 movsw
  0009b	e8 00 00 00 00	 call	 ?SendData@WzUdp@@QAEHPAEK@Z ; WzUdp::SendData

; 65   : }

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	33 cd		 xor	 ecx, ebp
  000a7	5b		 pop	 ebx
  000a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 0c 00	 ret	 12			; 0000000cH
?Send@CSendHackLog@@QAEXHEPAD@Z ENDP			; CSendHackLog::Send
_TEXT	ENDS
PUBLIC	?SendData@CSendHackLog@@QAEHPAEK@Z		; CSendHackLog::SendData
; Function compile flags: /Ogtp
;	COMDAT ?SendData@CSendHackLog@@QAEHPAEK@Z
_TEXT	SEGMENT
_SendData$ = 8						; size = 4
_nSendDataLen$ = 12					; size = 4
?SendData@CSendHackLog@@QAEHPAEK@Z PROC			; CSendHackLog::SendData, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 70   : 	return this->m_UdpSocCHackLog.SendData(SendData, nSendDataLen);

  00003	83 c1 04	 add	 ecx, 4

; 71   : }

  00006	5d		 pop	 ebp

; 70   : 	return this->m_UdpSocCHackLog.SendData(SendData, nSendDataLen);

  00007	e9 00 00 00 00	 jmp	 ?SendData@WzUdp@@QAEHPAEK@Z ; WzUdp::SendData
?SendData@CSendHackLog@@QAEHPAEK@Z ENDP			; CSendHackLog::SendData
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCSendHackLog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSendHackLog@@UAEPAXI@Z PROC			; CSendHackLog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSendHackLog@@UAE@XZ	; CSendHackLog::~CSendHackLog
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCSendHackLog@@UAEPAXI@Z ENDP			; CSendHackLog::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__EgSendHackLog@@YAXXZ
text$yc	SEGMENT
??__EgSendHackLog@@YAXXZ PROC				; `dynamic initializer for 'gSendHackLog'', COMDAT

; 16   : CSendHackLog gSendHackLog;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gSendHackLog@@3VCSendHackLog@@A ; gSendHackLog
  00005	e8 00 00 00 00	 call	 ??0CSendHackLog@@QAE@XZ	; CSendHackLog::CSendHackLog
  0000a	68 00 00 00 00	 push	 OFFSET ??__FgSendHackLog@@YAXXZ ; `dynamic atexit destructor for 'gSendHackLog''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EgSendHackLog@@YAXXZ ENDP				; `dynamic initializer for 'gSendHackLog''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__FgSendHackLog@@YAXXZ
text$yd	SEGMENT
??__FgSendHackLog@@YAXXZ PROC				; `dynamic atexit destructor for 'gSendHackLog'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gSendHackLog@@3VCSendHackLog@@A ; gSendHackLog
  00005	e9 00 00 00 00	 jmp	 ??1CSendHackLog@@UAE@XZ	; CSendHackLog::~CSendHackLog
??__FgSendHackLog@@YAXXZ ENDP				; `dynamic atexit destructor for 'gSendHackLog''
text$yd	ENDS
PUBLIC	?gSendHackLog@@3VCSendHackLog@@A		; gSendHackLog
_BSS	SEGMENT
?gSendHackLog@@3VCSendHackLog@@A DB 0864H DUP (?)	; gSendHackLog
_BSS	ENDS
CRT$XCU	SEGMENT
_gSendHackLog$initializer$ DD FLAT:??__EgSendHackLog@@YAXXZ
CRT$XCU	ENDS
END
