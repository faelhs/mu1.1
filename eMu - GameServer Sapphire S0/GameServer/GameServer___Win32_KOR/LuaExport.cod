; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\LuaExport.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_g_sttDEVILSQUARE_LEVEL DD 0fH
	DD	082H
	DD	0aH
	DD	06eH
	DD	03aH
	DD	083H
	DD	0b4H
	DD	06fH
	DD	0a0H
	DD	03bH
	DD	0b5H
	DD	0e6H
	DD	0a1H
	DD	0d2H
	DD	03cH
	DD	0e7H
	DD	0118H
	DD	0d3H
	DD	0104H
	DD	03dH
	DD	0119H
	DD	014aH
	DD	0105H
	DD	0136H
	DD	06fH
	DD	014bH
	DD	0190H
	DD	0137H
	DD	0190H
	DD	070H
_DATA	ENDS
PUBLIC	??_7LuaExport@@6B@				; LuaExport::`vftable'
PUBLIC	??0LuaExport@@QAE@XZ				; LuaExport::LuaExport
PUBLIC	??_R4LuaExport@@6B@				; LuaExport::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVLuaExport@@@8				; LuaExport `RTTI Type Descriptor'
PUBLIC	??_R3LuaExport@@8				; LuaExport::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2LuaExport@@8				; LuaExport::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@LuaExport@@8			; LuaExport::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ELuaExport@@UAEPAXI@Z:PROC			; LuaExport::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@LuaExport@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\luaexport.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@LuaExport@@8 DD FLAT:??_R0?AVLuaExport@@@8 ; LuaExport::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3LuaExport@@8
rdata$r	ENDS
;	COMDAT ??_R2LuaExport@@8
rdata$r	SEGMENT
??_R2LuaExport@@8 DD FLAT:??_R1A@?0A@EA@LuaExport@@8	; LuaExport::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3LuaExport@@8
rdata$r	SEGMENT
??_R3LuaExport@@8 DD 00H				; LuaExport::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2LuaExport@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVLuaExport@@@8
_DATA	SEGMENT
??_R0?AVLuaExport@@@8 DD FLAT:??_7type_info@@6B@	; LuaExport `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVLuaExport@@', 00H
_DATA	ENDS
;	COMDAT ??_R4LuaExport@@6B@
rdata$r	SEGMENT
??_R4LuaExport@@6B@ DD 00H				; LuaExport::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVLuaExport@@@8
	DD	FLAT:??_R3LuaExport@@8
rdata$r	ENDS
;	COMDAT ??_7LuaExport@@6B@
CONST	SEGMENT
??_7LuaExport@@6B@ DD FLAT:??_R4LuaExport@@6B@		; LuaExport::`vftable'
	DD	FLAT:??_ELuaExport@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0LuaExport@@QAE@XZ
_TEXT	SEGMENT
??0LuaExport@@QAE@XZ PROC				; LuaExport::LuaExport, COMDAT
; _this$ = ecx

; 7    : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7LuaExport@@6B@

; 8    : 
; 9    : }

  00008	c3		 ret	 0
??0LuaExport@@QAE@XZ ENDP				; LuaExport::LuaExport
_TEXT	ENDS
PUBLIC	??1LuaExport@@UAE@XZ				; LuaExport::~LuaExport
; Function compile flags: /Ogtp
;	COMDAT ??1LuaExport@@UAE@XZ
_TEXT	SEGMENT
??1LuaExport@@UAE@XZ PROC				; LuaExport::~LuaExport, COMDAT
; _this$ = ecx

; 13   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7LuaExport@@6B@

; 14   : 
; 15   : }

  00006	c3		 ret	 0
??1LuaExport@@UAE@XZ ENDP				; LuaExport::~LuaExport
_TEXT	ENDS
PUBLIC	??_C@_0BE@MBONBCHO@gEnableEventNPCTalk?$AA@	; `string'
PUBLIC	??_C@_0BG@DNDODBDN@gEnableServerDivision?$AA@	; `string'
PUBLIC	?AddGlobal@LuaExport@@QAEXPAUlua_State@@@Z	; LuaExport::AddGlobal
EXTRN	?gEnableEventNPCTalk@@3HA:DWORD			; gEnableEventNPCTalk
EXTRN	_lua_setglobal:PROC
EXTRN	_lua_pushinteger:PROC
EXTRN	?gEnableServerDivision@@3HA:DWORD		; gEnableServerDivision
;	COMDAT ??_C@_0BE@MBONBCHO@gEnableEventNPCTalk?$AA@
CONST	SEGMENT
??_C@_0BE@MBONBCHO@gEnableEventNPCTalk?$AA@ DB 'gEnableEventNPCTalk', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DNDODBDN@gEnableServerDivision?$AA@
CONST	SEGMENT
??_C@_0BG@DNDODBDN@gEnableServerDivision?$AA@ DB 'gEnableServerDivision', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?AddGlobal@LuaExport@@QAEXPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?AddGlobal@LuaExport@@QAEXPAUlua_State@@@Z PROC		; LuaExport::AddGlobal, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 44   : 	lua_pushinteger(Lua, gEnableServerDivision);

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gEnableServerDivision@@3HA ; gEnableServerDivision
  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  0000c	50		 push	 eax
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _lua_pushinteger

; 45   : 	lua_setglobal(Lua, "gEnableServerDivision");

  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DNDODBDN@gEnableServerDivision?$AA@
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 _lua_setglobal

; 46   : 
; 47   : 	lua_pushinteger(Lua, gEnableEventNPCTalk);

  0001e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gEnableEventNPCTalk@@3HA ; gEnableEventNPCTalk
  00024	51		 push	 ecx
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _lua_pushinteger

; 48   : 	lua_setglobal(Lua, "gEnableEventNPCTalk");

  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MBONBCHO@gEnableEventNPCTalk?$AA@
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 _lua_setglobal
  00036	83 c4 20	 add	 esp, 32			; 00000020H
  00039	5e		 pop	 esi

; 49   : }

  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
?AddGlobal@LuaExport@@QAEXPAUlua_State@@@Z ENDP		; LuaExport::AddGlobal
_TEXT	ENDS
PUBLIC	??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@ ; `string'
PUBLIC	?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ		; CQeustNpcTeleport::TalkRefAdd
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	__imp__EnterCriticalSection@4:PROC
;	COMDAT ??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\gobjmonster.h
CONST	SEGMENT
??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@ DB 'QeustNpc'
	DB	' RefCount Inc = %d', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ
_TEXT	SEGMENT
?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ PROC		; CQeustNpcTeleport::TalkRefAdd, COMDAT
; _this$ = ecx

; 61   : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f1		 mov	 esi, ecx

; 62   : 		EnterCriticalSection(&this->CsRef);

  00004	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00007	57		 push	 edi
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 63   : 		this->RefCount++;

  0000e	ff 06		 inc	 DWORD PTR [esi]
  00010	8b 36		 mov	 esi, DWORD PTR [esi]

; 64   : 		LogAdd(LOG_BLACK, "QeustNpc RefCount Inc = %d", this->RefCount);

  00012	56		 push	 esi
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@
  00018	6a 00		 push	 0
  0001a	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 65   : 		LeaveCriticalSection(&this->CsRef);

  00022	57		 push	 edi
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi

; 66   : 		
; 67   : 	};	// line : 123

  0002b	c3		 ret	 0
?TalkRefAdd@CQeustNpcTeleport@@QAEXXZ ENDP		; CQeustNpcTeleport::TalkRefAdd
_TEXT	ENDS
PUBLIC	?LuaChatTargetSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaChatTargetSend
EXTRN	?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z:PROC ; ChatTargetSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
EXTRN	_lua_tolstring:PROC
EXTRN	_lua_tointegerx:PROC
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\luaexport.h
;	COMDAT ?LuaChatTargetSend@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaChatTargetSend@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaChatTargetSend, COMDAT

; 20   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 21   : 		ChatTargetSend(&gObj[lua_tointeger(Lua, 2)], (char*)lua_tostring(Lua, 1), lua_tointeger(Lua, 3));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 03		 push	 3
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	6a 01		 push	 1
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_tolstring
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	6a 02		 push	 2
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tointegerx
  0002d	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00033	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?ChatTargetSend@@YAXPAUOBJECTSTRUCT@@PADH@Z ; ChatTargetSend
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH

; 22   : 		return true;

  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	5e		 pop	 esi

; 23   : 	};

  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?LuaChatTargetSend@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaChatTargetSend
_TEXT	ENDS
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	?LuaLogAdd@LuaExport@@SAHPAUlua_State@@@Z	; LuaExport::LuaLogAdd
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LuaLogAdd@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaLogAdd@LuaExport@@SAHPAUlua_State@@@Z PROC		; LuaExport::LuaLogAdd, COMDAT

; 26   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 27   : 		LogAdd(LOG_BLACK, "%s", (char*)lua_tostring(Lua, 1));

  00003	8b 45 08	 mov	 eax, DWORD PTR _Lua$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 _lua_tolstring
  00010	50		 push	 eax
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  00016	6a 00		 push	 0
  00018	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0001d	83 c4 18	 add	 esp, 24			; 00000018H

; 28   : 		return true;

  00020	b8 01 00 00 00	 mov	 eax, 1

; 29   : 	};

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?LuaLogAdd@LuaExport@@SAHPAUlua_State@@@Z ENDP		; LuaExport::LuaLogAdd
_TEXT	ENDS
PUBLIC	?LuagObjTeleport@LuaExport@@SAHPAUlua_State@@@Z	; LuaExport::LuagObjTeleport
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
; Function compile flags: /Ogtp
;	COMDAT ?LuagObjTeleport@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuagObjTeleport@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuagObjTeleport, COMDAT

; 32   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 33   : 		gObjTeleport(lua_tointeger(Lua, 1), lua_tointeger(Lua, 2), lua_tointeger(Lua, 3), lua_tointeger(Lua, 4));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 04		 push	 4
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	6a 03		 push	 3
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_tointegerx
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	6a 02		 push	 2
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tointegerx
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	50		 push	 eax
  00031	6a 00		 push	 0
  00033	6a 01		 push	 1
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _lua_tointegerx
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 34   : 		return true;

  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	5e		 pop	 esi

; 35   : 	};

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?LuagObjTeleport@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuagObjTeleport
_TEXT	ENDS
PUBLIC	?LuaGCServerMsgStringSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGCServerMsgStringSend
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
; Function compile flags: /Ogtp
;	COMDAT ?LuaGCServerMsgStringSend@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaGCServerMsgStringSend@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuaGCServerMsgStringSend, COMDAT

; 38   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 39   : 		GCServerMsgStringSend((char*)lua_tostring(Lua, 1), lua_tointeger(Lua, 2), lua_tointeger(Lua, 3));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 03		 push	 3
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	6a 02		 push	 2
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_tointegerx
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	6a 01		 push	 1
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tolstring
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 40   : 		return true;

  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	5e		 pop	 esi

; 41   : 	};

  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?LuaGCServerMsgStringSend@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuaGCServerMsgStringSend
_TEXT	ENDS
PUBLIC	?LuaFireCrackerOpen@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaFireCrackerOpen
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z:PROC	; MsgSendV2
EXTRN	?PHeadSubSetB@@YAXPAEEEH@Z:PROC			; PHeadSubSetB
; Function compile flags: /Ogtp
;	COMDAT ?LuaFireCrackerOpen@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ServerCmd$ = -8					; size = 7
_Lua$ = 8						; size = 4
?LuaFireCrackerOpen@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaFireCrackerOpen, COMDAT

; 44   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 45   : 		PMSG_SERVERCMD ServerCmd;
; 46   : 
; 47   : 		PHeadSubSetB((LPBYTE)&ServerCmd, 0xF3, 0x40, sizeof(ServerCmd));

  00007	6a 07		 push	 7
  00009	6a 40		 push	 64			; 00000040H
  0000b	8d 45 f8	 lea	 eax, DWORD PTR _ServerCmd$[ebp]
  0000e	68 f3 00 00 00	 push	 243			; 000000f3H
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?PHeadSubSetB@@YAXPAEEEH@Z ; PHeadSubSetB

; 48   : 		ServerCmd.CmdType = 0;
; 49   : 		ServerCmd.X = gObj[lua_tointeger(Lua, 1)].X;

  00019	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  0001c	6a 00		 push	 0
  0001e	6a 01		 push	 1
  00020	56		 push	 esi
  00021	c6 45 fc 00	 mov	 BYTE PTR _ServerCmd$[ebp+4], 0
  00025	e8 00 00 00 00	 call	 _lua_tointegerx
  0002a	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00030	8a 88 04 01 00
	00		 mov	 cl, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+260]

; 50   : 		ServerCmd.Y = gObj[lua_tointeger(Lua, 1)].Y;

  00036	6a 00		 push	 0
  00038	6a 01		 push	 1
  0003a	56		 push	 esi
  0003b	88 4d fd	 mov	 BYTE PTR _ServerCmd$[ebp+5], cl
  0003e	e8 00 00 00 00	 call	 _lua_tointegerx
  00043	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00049	8a 90 06 01 00
	00		 mov	 dl, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+262]
  0004f	83 c4 28	 add	 esp, 40			; 00000028H

; 51   : 
; 52   : 		MsgSendV2(&gObj[lua_tointeger(Lua, 1)], (LPBYTE)&ServerCmd, sizeof(ServerCmd));

  00052	6a 07		 push	 7
  00054	8d 45 f8	 lea	 eax, DWORD PTR _ServerCmd$[ebp]
  00057	50		 push	 eax
  00058	6a 00		 push	 0
  0005a	6a 01		 push	 1
  0005c	56		 push	 esi
  0005d	88 55 fe	 mov	 BYTE PTR _ServerCmd$[ebp+6], dl
  00060	e8 00 00 00 00	 call	 _lua_tointegerx
  00065	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  0006b	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?MsgSendV2@@YAXPAUOBJECTSTRUCT@@PAEH@Z ; MsgSendV2
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH

; 53   : 		DataSend(lua_tointeger(Lua, 1), (LPBYTE)&ServerCmd, sizeof(ServerCmd));

  0007c	6a 07		 push	 7
  0007e	8d 4d f8	 lea	 ecx, DWORD PTR _ServerCmd$[ebp]
  00081	51		 push	 ecx
  00082	6a 00		 push	 0
  00084	6a 01		 push	 1
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 _lua_tointegerx
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  00095	83 c4 0c	 add	 esp, 12			; 0000000cH

; 54   : 
; 55   : 		return true;

  00098	b8 01 00 00 00	 mov	 eax, 1
  0009d	5e		 pop	 esi

; 56   : 	};

  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
?LuaFireCrackerOpen@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaFireCrackerOpen
_TEXT	ENDS
PUBLIC	?LuagObjCalDistance@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjCalDistance
EXTRN	_lua_pushnumber:PROC
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?LuagObjCalDistance@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Result$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuagObjCalDistance@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuagObjCalDistance, COMDAT

; 59   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 60   : 		BOOL Result = gObjCalDistance(&gObj[lua_tointeger(Lua, 1)], &gObj[lua_tointeger(Lua, 2)]);

  00005	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 02		 push	 2
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00021	50		 push	 eax
  00022	6a 00		 push	 0
  00024	6a 01		 push	 1
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_tointegerx
  0002c	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00032	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  00040	8b f8		 mov	 edi, eax
  00042	89 7d fc	 mov	 DWORD PTR _Result$[ebp], edi

; 61   : 		lua_pushnumber(Lua, Result);

  00045	db 45 fc	 fild	 DWORD PTR _Result$[ebp]
  00048	dd 1c 24	 fstp	 QWORD PTR [esp]
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 _lua_pushnumber
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH

; 62   : 		return Result;

  00054	8b c7		 mov	 eax, edi
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi

; 63   : 	};

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?LuagObjCalDistance@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuagObjCalDistance
_TEXT	ENDS
PUBLIC	?LuaGCServerCmd@LuaExport@@SAHPAUlua_State@@@Z	; LuaExport::LuaGCServerCmd
EXTRN	?GCServerCmd@@YAXHEEE@Z:PROC			; GCServerCmd
; Function compile flags: /Ogtp
;	COMDAT ?LuaGCServerCmd@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaGCServerCmd@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaGCServerCmd, COMDAT

; 66   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 67   : 		GCServerCmd(lua_tointeger(Lua, 1), lua_tointeger(Lua, 2), lua_tointeger(Lua, 3), lua_tointeger(Lua, 4));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 04		 push	 4
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	6a 03		 push	 3
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_tointegerx
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	6a 02		 push	 2
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tointegerx
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	50		 push	 eax
  00031	6a 00		 push	 0
  00033	6a 01		 push	 1
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _lua_tointegerx
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GCServerCmd@@YAXHEEE@Z	; GCServerCmd
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 68   : 		return true;

  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	5e		 pop	 esi

; 69   : 	};

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?LuaGCServerCmd@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaGCServerCmd
_TEXT	ENDS
PUBLIC	?LuagUserFindDevilSquareKeyEyes@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagUserFindDevilSquareKeyEyes
EXTRN	?gUserFindDevilSquareKeyEyes@@YAHH@Z:PROC	; gUserFindDevilSquareKeyEyes
; Function compile flags: /Ogtp
;	COMDAT ?LuagUserFindDevilSquareKeyEyes@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Result$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuagUserFindDevilSquareKeyEyes@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuagUserFindDevilSquareKeyEyes, COMDAT

; 72   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 73   : 		BOOL Result = gUserFindDevilSquareKeyEyes(lua_tointeger(Lua, 1));

  00005	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?gUserFindDevilSquareKeyEyes@@YAHH@Z ; gUserFindDevilSquareKeyEyes
  00019	8b f8		 mov	 edi, eax
  0001b	89 7d fc	 mov	 DWORD PTR _Result$[ebp], edi

; 74   : 		lua_pushnumber(Lua, Result);

  0001e	db 45 fc	 fild	 DWORD PTR _Result$[ebp]
  00021	83 c4 08	 add	 esp, 8
  00024	dd 1c 24	 fstp	 QWORD PTR [esp]
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_pushnumber
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 75   : 		return Result;

  00030	8b c7		 mov	 eax, edi
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi

; 76   : 	};

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?LuagUserFindDevilSquareKeyEyes@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuagUserFindDevilSquareKeyEyes
_TEXT	ENDS
PUBLIC	?LuaGCReFillSend@LuaExport@@SAHPAUlua_State@@@Z	; LuaExport::LuaGCReFillSend
EXTRN	?GCReFillSend@@YAXHHEE@Z:PROC			; GCReFillSend
; Function compile flags: /Ogtp
;	COMDAT ?LuaGCReFillSend@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaGCReFillSend@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaGCReFillSend, COMDAT

; 79   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 80   : 		GCReFillSend(lua_tointeger(Lua, 1), lua_tointeger(Lua, 2), lua_tointeger(Lua, 3), lua_tointeger(Lua, 4));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 04		 push	 4
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	6a 03		 push	 3
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_tointegerx
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	6a 02		 push	 2
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tointegerx
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	50		 push	 eax
  00031	6a 00		 push	 0
  00033	6a 01		 push	 1
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _lua_tointegerx
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?GCReFillSend@@YAXHHEE@Z ; GCReFillSend
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 81   : 		return true;

  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	5e		 pop	 esi

; 82   : 	};

  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?LuaGCReFillSend@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaGCReFillSend
_TEXT	ENDS
PUBLIC	?LuaGCManaSend@LuaExport@@SAHPAUlua_State@@@Z	; LuaExport::LuaGCManaSend
EXTRN	?GCManaSend@@YAXHHEEH@Z:PROC			; GCManaSend
; Function compile flags: /Ogtp
;	COMDAT ?LuaGCManaSend@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaGCManaSend@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaGCManaSend, COMDAT

; 85   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 86   : 		GCManaSend(lua_tointeger(Lua, 1), lua_tointeger(Lua, 2), lua_tointeger(Lua, 3), lua_tointeger(Lua, 4), lua_tointeger(Lua, 5));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 05		 push	 5
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	83 c4 0c	 add	 esp, 12			; 0000000cH
  00014	50		 push	 eax
  00015	6a 00		 push	 0
  00017	6a 04		 push	 4
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_tointegerx
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	6a 03		 push	 3
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tointegerx
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00030	50		 push	 eax
  00031	6a 00		 push	 0
  00033	6a 02		 push	 2
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _lua_tointegerx
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	50		 push	 eax
  0003f	6a 00		 push	 0
  00041	6a 01		 push	 1
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _lua_tointegerx
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?GCManaSend@@YAXHHEEH@Z	; GCManaSend
  00052	83 c4 14	 add	 esp, 20			; 00000014H

; 87   : 		return true;

  00055	b8 01 00 00 00	 mov	 eax, 1
  0005a	5e		 pop	 esi

; 88   : 	};

  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?LuaGCManaSend@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaGCManaSend
_TEXT	ENDS
PUBLIC	?LuagQeustNpcTeleport_TalkRefAdd@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagQeustNpcTeleport_TalkRefAdd
EXTRN	?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A:BYTE	; gQeustNpcTeleport
; Function compile flags: /Ogtp
;	COMDAT ?LuagQeustNpcTeleport_TalkRefAdd@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuagQeustNpcTeleport_TalkRefAdd@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuagQeustNpcTeleport_TalkRefAdd, COMDAT

; 92   : 		gQeustNpcTeleport.TalkRefAdd();

  00000	68 04 00 00 00	 push	 OFFSET ?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A+4
  00005	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A
  00010	40		 inc	 eax
  00011	50		 push	 eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@FMJKLKBP@QeustNpc?5RefCount?5Inc?5?$DN?5?$CFd?$AA@
  00017	6a 00		 push	 0
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A, eax
  0001e	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH
  00026	68 04 00 00 00	 push	 OFFSET ?gQeustNpcTeleport@@3VCQeustNpcTeleport@@A+4
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 93   : 		return true;

  00031	b8 01 00 00 00	 mov	 eax, 1

; 94   : 	};

  00036	c3		 ret	 0
?LuagQeustNpcTeleport_TalkRefAdd@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuagQeustNpcTeleport_TalkRefAdd
_TEXT	ENDS
PUBLIC	?LuagObjIsConnected@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjIsConnected
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
; Function compile flags: /Ogtp
;	COMDAT ?LuagObjIsConnected@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Result$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuagObjIsConnected@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuagObjIsConnected, COMDAT

; 97   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 98   : 		BOOL Result = gObjIsConnected(lua_tointeger(Lua, 1));

  00005	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00019	8b f8		 mov	 edi, eax
  0001b	89 7d fc	 mov	 DWORD PTR _Result$[ebp], edi

; 99   : 		lua_pushnumber(Lua, Result);

  0001e	db 45 fc	 fild	 DWORD PTR _Result$[ebp]
  00021	83 c4 08	 add	 esp, 8
  00024	dd 1c 24	 fstp	 QWORD PTR [esp]
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_pushnumber
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 100  : 		return Result;

  00030	8b c7		 mov	 eax, edi
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi

; 101  : 	};

  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
?LuagObjIsConnected@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuagObjIsConnected
_TEXT	ENDS
PUBLIC	?LuagObjGuildMasterCapacityTest@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjGuildMasterCapacityTest
EXTRN	?gObjGuildMasterCapacityTest@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjGuildMasterCapacityTest
; Function compile flags: /Ogtp
;	COMDAT ?LuagObjGuildMasterCapacityTest@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Result$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuagObjGuildMasterCapacityTest@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuagObjGuildMasterCapacityTest, COMDAT

; 104  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 105  : 		BOOL Result = gObjGuildMasterCapacityTest(&gObj[lua_tointeger(Lua, 1)]);

  00005	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00019	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?gObjGuildMasterCapacityTest@@YAHPAUOBJECTSTRUCT@@@Z ; gObjGuildMasterCapacityTest
  00024	8b f8		 mov	 edi, eax
  00026	89 7d fc	 mov	 DWORD PTR _Result$[ebp], edi

; 106  : 		lua_pushnumber(Lua, Result);

  00029	83 c4 08	 add	 esp, 8
  0002c	db 45 fc	 fild	 DWORD PTR _Result$[ebp]
  0002f	dd 1c 24	 fstp	 QWORD PTR [esp]
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 _lua_pushnumber
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH

; 107  : 		return Result;

  0003b	8b c7		 mov	 eax, edi
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi

; 108  : 	};

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?LuagObjGuildMasterCapacityTest@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuagObjGuildMasterCapacityTest
_TEXT	ENDS
PUBLIC	?LuagObjMonsterTopHitDamageUser@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjMonsterTopHitDamageUser
EXTRN	?gObjMonsterTopHitDamageUser@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjMonsterTopHitDamageUser
; Function compile flags: /Ogtp
;	COMDAT ?LuagObjMonsterTopHitDamageUser@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Result$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuagObjMonsterTopHitDamageUser@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuagObjMonsterTopHitDamageUser, COMDAT

; 111  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 112  : 		BOOL Result = gObjMonsterTopHitDamageUser(&gObj[lua_tointeger(Lua, 1)]);

  00005	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00019	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ?gObjMonsterTopHitDamageUser@@YAHPAUOBJECTSTRUCT@@@Z ; gObjMonsterTopHitDamageUser
  00024	8b f8		 mov	 edi, eax
  00026	89 7d fc	 mov	 DWORD PTR _Result$[ebp], edi

; 113  : 		lua_pushnumber(Lua, Result);

  00029	83 c4 08	 add	 esp, 8
  0002c	db 45 fc	 fild	 DWORD PTR _Result$[ebp]
  0002f	dd 1c 24	 fstp	 QWORD PTR [esp]
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 _lua_pushnumber
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH

; 114  : 		return Result;

  0003b	8b c7		 mov	 eax, edi
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi

; 115  : 	};

  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?LuagObjMonsterTopHitDamageUser@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuagObjMonsterTopHitDamageUser
_TEXT	ENDS
PUBLIC	?LuaItemSerialCreateSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaItemSerialCreateSend
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
; Function compile flags: /Ogtp
;	COMDAT ?LuaItemSerialCreateSend@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaItemSerialCreateSend@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuaItemSerialCreateSend, COMDAT

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 119  : 		int iItemID = lua_tointeger(Lua, 5);

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	6a 05		 push	 5
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _lua_tointegerx

; 120  : 
; 121  : 		ItemSerialCreateSend(
; 122  : 			lua_tointeger(Lua, 1), lua_tointeger(Lua, 2),
; 123  : 			lua_tointeger(Lua, 3), lua_tointeger(Lua, 4),
; 124  : 			iItemID, lua_tointeger(Lua, 6),
; 125  : 			lua_tointeger(Lua, 7), lua_tointeger(Lua, 8),
; 126  : 			lua_tointeger(Lua, 9), lua_tointeger(Lua, 10),
; 127  : 			lua_tointeger(Lua, 11), lua_tointeger(Lua, 12),
; 128  : 			lua_tointeger(Lua, 13));

  00012	6a 00		 push	 0
  00014	6a 0d		 push	 13			; 0000000dH
  00016	56		 push	 esi
  00017	8b f8		 mov	 edi, eax
  00019	e8 00 00 00 00	 call	 _lua_tointegerx
  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	50		 push	 eax
  00022	6a 00		 push	 0
  00024	6a 0c		 push	 12			; 0000000cH
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_tointegerx
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	50		 push	 eax
  00030	6a 00		 push	 0
  00032	6a 0b		 push	 11			; 0000000bH
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _lua_tointegerx
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	50		 push	 eax
  0003e	6a 00		 push	 0
  00040	6a 0a		 push	 10			; 0000000aH
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _lua_tointegerx
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	50		 push	 eax
  0004c	6a 00		 push	 0
  0004e	6a 09		 push	 9
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 _lua_tointegerx
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH
  00059	50		 push	 eax
  0005a	6a 00		 push	 0
  0005c	6a 08		 push	 8
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 _lua_tointegerx
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	50		 push	 eax
  00068	6a 00		 push	 0
  0006a	6a 07		 push	 7
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _lua_tointegerx
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	50		 push	 eax
  00076	6a 00		 push	 0
  00078	6a 06		 push	 6
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 _lua_tointegerx
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
  00083	50		 push	 eax
  00084	57		 push	 edi
  00085	6a 00		 push	 0
  00087	6a 04		 push	 4
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 _lua_tointegerx
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00092	50		 push	 eax
  00093	6a 00		 push	 0
  00095	6a 03		 push	 3
  00097	56		 push	 esi
  00098	e8 00 00 00 00	 call	 _lua_tointegerx
  0009d	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a0	50		 push	 eax
  000a1	6a 00		 push	 0
  000a3	6a 02		 push	 2
  000a5	56		 push	 esi
  000a6	e8 00 00 00 00	 call	 _lua_tointegerx
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	50		 push	 eax
  000af	6a 00		 push	 0
  000b1	6a 01		 push	 1
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 _lua_tointegerx
  000b9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend
  000c2	83 c4 34	 add	 esp, 52			; 00000034H
  000c5	5f		 pop	 edi

; 129  : 		return true;

  000c6	b8 01 00 00 00	 mov	 eax, 1
  000cb	5e		 pop	 esi

; 130  : 	};

  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
?LuaItemSerialCreateSend@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuaItemSerialCreateSend
_TEXT	ENDS
PUBLIC	?LuaMakeRandomSetItem@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaMakeRandomSetItem
EXTRN	?MakeRandomSetItem@@YAXH@Z:PROC			; MakeRandomSetItem
; Function compile flags: /Ogtp
;	COMDAT ?LuaMakeRandomSetItem@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaMakeRandomSetItem@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuaMakeRandomSetItem, COMDAT

; 133  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 134  : 		MakeRandomSetItem(lua_tointeger(Lua, 1));

  00003	8b 45 08	 mov	 eax, DWORD PTR _Lua$[ebp]
  00006	6a 00		 push	 0
  00008	6a 01		 push	 1
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 _lua_tointegerx
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ?MakeRandomSetItem@@YAXH@Z ; MakeRandomSetItem
  00016	83 c4 10	 add	 esp, 16			; 00000010H

; 135  : 		return true;

  00019	b8 01 00 00 00	 mov	 eax, 1

; 136  : 	};

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?LuaMakeRandomSetItem@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuaMakeRandomSetItem
_TEXT	ENDS
PUBLIC	?LuaIsItem@LuaExport@@SAHPAUlua_State@@@Z	; LuaExport::LuaIsItem
EXTRN	_lua_pushboolean:PROC
EXTRN	?IsItem@@YAHH@Z:PROC				; IsItem
; Function compile flags: /Ogtp
;	COMDAT ?LuaIsItem@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?LuaIsItem@LuaExport@@SAHPAUlua_State@@@Z PROC		; LuaExport::LuaIsItem, COMDAT

; 139  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 140  : 		bool isItem = IsItem(lua_tointeger(Lua, 1));

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_tointegerx
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?IsItem@@YAHH@Z		; IsItem
  00017	85 c0		 test	 eax, eax
  00019	0f 95 c0	 setne	 al

; 141  : 		lua_pushboolean(Lua, isItem);

  0001c	0f b6 c0	 movzx	 eax, al
  0001f	50		 push	 eax
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 _lua_pushboolean
  00026	83 c4 18	 add	 esp, 24			; 00000018H

; 142  : 		return true;

  00029	b8 01 00 00 00	 mov	 eax, 1
  0002e	5e		 pop	 esi

; 143  : 	}

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?LuaIsItem@LuaExport@@SAHPAUlua_State@@@Z ENDP		; LuaExport::LuaIsItem
_TEXT	ENDS
PUBLIC	?LuaNewOptionRand@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaNewOptionRand
EXTRN	?NewOptionRand@@YAEH@Z:PROC			; NewOptionRand
; Function compile flags: /Ogtp
;	COMDAT ?LuaNewOptionRand@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Exc$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuaNewOptionRand@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaNewOptionRand, COMDAT

; 146  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 147  : 		int Exc = NewOptionRand(0);

  00004	6a 00		 push	 0
  00006	e8 00 00 00 00	 call	 ?NewOptionRand@@YAEH@Z	; NewOptionRand
  0000b	0f b6 c0	 movzx	 eax, al
  0000e	89 45 fc	 mov	 DWORD PTR _Exc$[ebp], eax

; 148  : 		lua_pushnumber(Lua, Exc);

  00011	51		 push	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR _Lua$[ebp]
  00015	db 45 fc	 fild	 DWORD PTR _Exc$[ebp]
  00018	dd 1c 24	 fstp	 QWORD PTR [esp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 _lua_pushnumber
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 149  : 		return true;

  00024	b8 01 00 00 00	 mov	 eax, 1

; 150  : 	}

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?LuaNewOptionRand@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaNewOptionRand
_TEXT	ENDS
PUBLIC	?LuaGetSetItemOption@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGetSetItemOption
EXTRN	?GenSetOption@CSetItemOption@@QAEHH@Z:PROC	; CSetItemOption::GenSetOption
EXTRN	?gSetItemOption@@3VCSetItemOption@@A:BYTE	; gSetItemOption
; Function compile flags: /Ogtp
;	COMDAT ?LuaGetSetItemOption@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_SetOption$ = -4					; size = 4
_Lua$ = 8						; size = 4
?LuaGetSetItemOption@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuaGetSetItemOption, COMDAT

; 153  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 154  : 		int SetOption = gSetItemOption.GenSetOption(lua_tointeger(Lua, 1));

  00005	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00008	6a 00		 push	 0
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _lua_tointegerx
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	50		 push	 eax
  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?gSetItemOption@@3VCSetItemOption@@A ; gSetItemOption
  0001b	e8 00 00 00 00	 call	 ?GenSetOption@CSetItemOption@@QAEHH@Z ; CSetItemOption::GenSetOption
  00020	89 45 fc	 mov	 DWORD PTR _SetOption$[ebp], eax

; 155  : 		lua_pushnumber(Lua, SetOption);

  00023	db 45 fc	 fild	 DWORD PTR _SetOption$[ebp]
  00026	83 ec 08	 sub	 esp, 8
  00029	dd 1c 24	 fstp	 QWORD PTR [esp]
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 _lua_pushnumber
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 156  : 		return true;

  00035	b8 01 00 00 00	 mov	 eax, 1
  0003a	5e		 pop	 esi

; 157  : 	}

  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?LuaGetSetItemOption@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuaGetSetItemOption
_TEXT	ENDS
PUBLIC	??_C@_0CN@MIGDDDNO@?$FLLUA?$FN?5ERROR?5?9?5LuaGetRandomValue?5@ ; `string'
PUBLIC	?LuaGetRandomValue@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGetRandomValue
EXTRN	_rand:PROC
;	COMDAT ??_C@_0CN@MIGDDDNO@?$FLLUA?$FN?5ERROR?5?9?5LuaGetRandomValue?5@
CONST	SEGMENT
??_C@_0CN@MIGDDDNO@?$FLLUA?$FN?5ERROR?5?9?5LuaGetRandomValue?5@ DB '[LUA]'
	DB	' ERROR - LuaGetRandomValue Divider == 0', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LuaGetRandomValue@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Val$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuaGetRandomValue@LuaExport@@SAHPAUlua_State@@@Z PROC	; LuaExport::LuaGetRandomValue, COMDAT

; 160  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 161  : 		int Div = lua_tointeger(Lua, 1);

  00006	8b 7d 08	 mov	 edi, DWORD PTR _Lua$[ebp]
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	57		 push	 edi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	8b f0		 mov	 esi, eax
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 162  : 
; 163  : 		if (Div == 0)

  00018	85 f6		 test	 esi, esi
  0001a	75 17		 jne	 SHORT $LN1@LuaGetRand

; 164  : 		{
; 165  : 			LogAdd(LOG_RED, "[LUA] ERROR - LuaGetRandomValue Divider == 0");

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@MIGDDDNO@?$FLLUA?$FN?5ERROR?5?9?5LuaGetRandomValue?5@
  00021	6a 01		 push	 1
  00023	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00028	83 c4 08	 add	 esp, 8
  0002b	5f		 pop	 edi

; 166  : 			return false;

  0002c	33 c0		 xor	 eax, eax
  0002e	5e		 pop	 esi

; 172  : 	}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
$LN1@LuaGetRand:

; 167  : 		}
; 168  : 
; 169  : 		int Val = rand() % Div;

  00033	e8 00 00 00 00	 call	 _rand
  00038	99		 cdq
  00039	f7 fe		 idiv	 esi

; 170  : 		lua_pushnumber(Lua, Val);

  0003b	83 ec 08	 sub	 esp, 8
  0003e	89 55 fc	 mov	 DWORD PTR _Val$[ebp], edx
  00041	db 45 fc	 fild	 DWORD PTR _Val$[ebp]
  00044	dd 1c 24	 fstp	 QWORD PTR [esp]
  00047	57		 push	 edi
  00048	e8 00 00 00 00	 call	 _lua_pushnumber
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	5f		 pop	 edi

; 171  : 		return true;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5e		 pop	 esi

; 172  : 	}

  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?LuaGetRandomValue@LuaExport@@SAHPAUlua_State@@@Z ENDP	; LuaExport::LuaGetRandomValue
_TEXT	ENDS
PUBLIC	??_C@_0DC@KFJNLHKI@?$FLLUA?$FN?5ERROR?5?9?5LuaGetLargeRandomV@ ; `string'
PUBLIC	?LuaGetLargeRandomValue@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGetLargeRandomValue
EXTRN	?GetLargeRand@@YAKXZ:PROC			; GetLargeRand
;	COMDAT ??_C@_0DC@KFJNLHKI@?$FLLUA?$FN?5ERROR?5?9?5LuaGetLargeRandomV@
CONST	SEGMENT
??_C@_0DC@KFJNLHKI@?$FLLUA?$FN?5ERROR?5?9?5LuaGetLargeRandomV@ DB '[LUA] '
	DB	'ERROR - LuaGetLargeRandomValue Divider == 0', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?LuaGetLargeRandomValue@LuaExport@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_Val$ = -4						; size = 4
_Lua$ = 8						; size = 4
?LuaGetLargeRandomValue@LuaExport@@SAHPAUlua_State@@@Z PROC ; LuaExport::LuaGetLargeRandomValue, COMDAT

; 175  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 176  : 		int Div = lua_tointeger(Lua, 1);

  00006	8b 7d 08	 mov	 edi, DWORD PTR _Lua$[ebp]
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	57		 push	 edi
  0000e	e8 00 00 00 00	 call	 _lua_tointegerx
  00013	8b f0		 mov	 esi, eax
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 177  : 
; 178  : 		if (Div == 0)

  00018	85 f6		 test	 esi, esi
  0001a	75 17		 jne	 SHORT $LN1@LuaGetLarg

; 179  : 		{
; 180  : 			LogAdd(LOG_RED, "[LUA] ERROR - LuaGetLargeRandomValue Divider == 0");

  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@KFJNLHKI@?$FLLUA?$FN?5ERROR?5?9?5LuaGetLargeRandomV@
  00021	6a 01		 push	 1
  00023	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00028	83 c4 08	 add	 esp, 8
  0002b	5f		 pop	 edi

; 181  : 			return false;

  0002c	33 c0		 xor	 eax, eax
  0002e	5e		 pop	 esi

; 187  : 	}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
$LN1@LuaGetLarg:

; 182  : 		}
; 183  : 
; 184  : 		int Val = GetLargeRand() % Div;

  00033	e8 00 00 00 00	 call	 ?GetLargeRand@@YAKXZ	; GetLargeRand
  00038	33 d2		 xor	 edx, edx
  0003a	f7 f6		 div	 esi

; 185  : 		lua_pushnumber(Lua, Val);

  0003c	83 ec 08	 sub	 esp, 8
  0003f	89 55 fc	 mov	 DWORD PTR _Val$[ebp], edx
  00042	db 45 fc	 fild	 DWORD PTR _Val$[ebp]
  00045	dd 1c 24	 fstp	 QWORD PTR [esp]
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 _lua_pushnumber
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	5f		 pop	 edi

; 186  : 		return true;

  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	5e		 pop	 esi

; 187  : 	}

  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?LuaGetLargeRandomValue@LuaExport@@SAHPAUlua_State@@@Z ENDP ; LuaExport::LuaGetLargeRandomValue
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GLuaExport@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GLuaExport@@UAEPAXI@Z PROC				; LuaExport::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1LuaExport@@UAE@XZ	; LuaExport::~LuaExport
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GLuaExport@@UAEPAXI@Z ENDP				; LuaExport::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0BE@JBOFDONC@GetLargeRandomValue?$AA@	; `string'
PUBLIC	??_C@_0P@CCDBEBOO@GetRandomValue?$AA@		; `string'
PUBLIC	??_C@_0O@HHPFCLHM@GetAncientOpt?$AA@		; `string'
PUBLIC	??_C@_0BA@DIEBIHEG@GetExcellentOpt?$AA@		; `string'
PUBLIC	??_C@_06BBEHHOJG@IsItem?$AA@			; `string'
PUBLIC	??_C@_0BC@DDGJOIAN@MakeRandomSetItem?$AA@	; `string'
PUBLIC	??_C@_0L@EMDEHLJF@CreateItem?$AA@		; `string'
PUBLIC	??_C@_0BM@KFNONMPP@gObjMonsterTopHitDamageUser?$AA@ ; `string'
PUBLIC	??_C@_0BM@CNFNGOHK@gObjGuildMasterCapacityTest?$AA@ ; `string'
PUBLIC	??_C@_0BA@BPFOEDOH@gObjIsConnected?$AA@		; `string'
PUBLIC	??_C@_0BN@ENMBKGMH@gQeustNpcTeleport_TalkRefAdd?$AA@ ; `string'
PUBLIC	??_C@_0L@FKIKLEN@GCManaSend?$AA@		; `string'
PUBLIC	??_C@_0N@BALDCFB@GCReFillSend?$AA@		; `string'
PUBLIC	??_C@_0BM@BCBBAOB@gUserFindDevilSquareKeyEyes?$AA@ ; `string'
PUBLIC	??_C@_0M@LJHFLOBI@GCServerCmd?$AA@		; `string'
PUBLIC	??_C@_0BA@CBLFBOOO@gObjCalDistance?$AA@		; `string'
PUBLIC	??_C@_0BA@OOFJGIAD@FireCrackerOpen?$AA@		; `string'
PUBLIC	??_C@_0BG@OGICFOHD@GCServerMsgStringSend?$AA@	; `string'
PUBLIC	??_C@_0N@CKKKPHDB@gObjTeleport?$AA@		; `string'
PUBLIC	??_C@_06FOGPNLFJ@LogAdd?$AA@			; `string'
PUBLIC	??_C@_0P@DDJAJAHM@ChatTargetSend?$AA@		; `string'
PUBLIC	?AddTable@LuaExport@@QAEXPAUlua_State@@@Z	; LuaExport::AddTable
EXTRN	_lua_pushcclosure:PROC
;	COMDAT ??_C@_0BE@JBOFDONC@GetLargeRandomValue?$AA@
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\luaexport.cpp
CONST	SEGMENT
??_C@_0BE@JBOFDONC@GetLargeRandomValue?$AA@ DB 'GetLargeRandomValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CCDBEBOO@GetRandomValue?$AA@
CONST	SEGMENT
??_C@_0P@CCDBEBOO@GetRandomValue?$AA@ DB 'GetRandomValue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HHPFCLHM@GetAncientOpt?$AA@
CONST	SEGMENT
??_C@_0O@HHPFCLHM@GetAncientOpt?$AA@ DB 'GetAncientOpt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DIEBIHEG@GetExcellentOpt?$AA@
CONST	SEGMENT
??_C@_0BA@DIEBIHEG@GetExcellentOpt?$AA@ DB 'GetExcellentOpt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BBEHHOJG@IsItem?$AA@
CONST	SEGMENT
??_C@_06BBEHHOJG@IsItem?$AA@ DB 'IsItem', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DDGJOIAN@MakeRandomSetItem?$AA@
CONST	SEGMENT
??_C@_0BC@DDGJOIAN@MakeRandomSetItem?$AA@ DB 'MakeRandomSetItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMDEHLJF@CreateItem?$AA@
CONST	SEGMENT
??_C@_0L@EMDEHLJF@CreateItem?$AA@ DB 'CreateItem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KFNONMPP@gObjMonsterTopHitDamageUser?$AA@
CONST	SEGMENT
??_C@_0BM@KFNONMPP@gObjMonsterTopHitDamageUser?$AA@ DB 'gObjMonsterTopHit'
	DB	'DamageUser', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CNFNGOHK@gObjGuildMasterCapacityTest?$AA@
CONST	SEGMENT
??_C@_0BM@CNFNGOHK@gObjGuildMasterCapacityTest?$AA@ DB 'gObjGuildMasterCa'
	DB	'pacityTest', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BPFOEDOH@gObjIsConnected?$AA@
CONST	SEGMENT
??_C@_0BA@BPFOEDOH@gObjIsConnected?$AA@ DB 'gObjIsConnected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@ENMBKGMH@gQeustNpcTeleport_TalkRefAdd?$AA@
CONST	SEGMENT
??_C@_0BN@ENMBKGMH@gQeustNpcTeleport_TalkRefAdd?$AA@ DB 'gQeustNpcTelepor'
	DB	't_TalkRefAdd', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKIKLEN@GCManaSend?$AA@
CONST	SEGMENT
??_C@_0L@FKIKLEN@GCManaSend?$AA@ DB 'GCManaSend', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BALDCFB@GCReFillSend?$AA@
CONST	SEGMENT
??_C@_0N@BALDCFB@GCReFillSend?$AA@ DB 'GCReFillSend', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BCBBAOB@gUserFindDevilSquareKeyEyes?$AA@
CONST	SEGMENT
??_C@_0BM@BCBBAOB@gUserFindDevilSquareKeyEyes?$AA@ DB 'gUserFindDevilSqua'
	DB	'reKeyEyes', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LJHFLOBI@GCServerCmd?$AA@
CONST	SEGMENT
??_C@_0M@LJHFLOBI@GCServerCmd?$AA@ DB 'GCServerCmd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CBLFBOOO@gObjCalDistance?$AA@
CONST	SEGMENT
??_C@_0BA@CBLFBOOO@gObjCalDistance?$AA@ DB 'gObjCalDistance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OOFJGIAD@FireCrackerOpen?$AA@
CONST	SEGMENT
??_C@_0BA@OOFJGIAD@FireCrackerOpen?$AA@ DB 'FireCrackerOpen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OGICFOHD@GCServerMsgStringSend?$AA@
CONST	SEGMENT
??_C@_0BG@OGICFOHD@GCServerMsgStringSend?$AA@ DB 'GCServerMsgStringSend', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKKKPHDB@gObjTeleport?$AA@
CONST	SEGMENT
??_C@_0N@CKKKPHDB@gObjTeleport?$AA@ DB 'gObjTeleport', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOGPNLFJ@LogAdd?$AA@
CONST	SEGMENT
??_C@_06FOGPNLFJ@LogAdd?$AA@ DB 'LogAdd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DDJAJAHM@ChatTargetSend?$AA@
CONST	SEGMENT
??_C@_0P@DDJAJAHM@ChatTargetSend?$AA@ DB 'ChatTargetSend', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?AddTable@LuaExport@@QAEXPAUlua_State@@@Z
_TEXT	SEGMENT
_Lua$ = 8						; size = 4
?AddTable@LuaExport@@QAEXPAUlua_State@@@Z PROC		; LuaExport::AddTable, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 19   : 	lua_register(Lua, "ChatTargetSend", this->LuaChatTargetSend);

  00004	8b 75 08	 mov	 esi, DWORD PTR _Lua$[ebp]
  00007	6a 00		 push	 0
  00009	68 00 00 00 00	 push	 OFFSET ?LuaChatTargetSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaChatTargetSend
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _lua_pushcclosure
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DDJAJAHM@ChatTargetSend?$AA@
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _lua_setglobal

; 20   : 	lua_register(Lua, "LogAdd", this->LuaLogAdd);

  0001f	6a 00		 push	 0
  00021	68 00 00 00 00	 push	 OFFSET ?LuaLogAdd@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaLogAdd
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_pushcclosure
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_06FOGPNLFJ@LogAdd?$AA@
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _lua_setglobal

; 21   : 	lua_register(Lua, "gObjTeleport", this->LuagObjTeleport);

  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ?LuagObjTeleport@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjTeleport
  0003e	56		 push	 esi
  0003f	e8 00 00 00 00	 call	 _lua_pushcclosure
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CKKKPHDB@gObjTeleport?$AA@
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _lua_setglobal

; 22   : 	lua_register(Lua, "GCServerMsgStringSend", this->LuaGCServerMsgStringSend);

  0004f	6a 00		 push	 0
  00051	68 00 00 00 00	 push	 OFFSET ?LuaGCServerMsgStringSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGCServerMsgStringSend
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 _lua_pushcclosure
  0005c	83 c4 48	 add	 esp, 72			; 00000048H
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OGICFOHD@GCServerMsgStringSend?$AA@
  00064	56		 push	 esi
  00065	e8 00 00 00 00	 call	 _lua_setglobal

; 23   : 	lua_register(Lua, "FireCrackerOpen", this->LuaFireCrackerOpen);

  0006a	6a 00		 push	 0
  0006c	68 00 00 00 00	 push	 OFFSET ?LuaFireCrackerOpen@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaFireCrackerOpen
  00071	56		 push	 esi
  00072	e8 00 00 00 00	 call	 _lua_pushcclosure
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OOFJGIAD@FireCrackerOpen?$AA@
  0007c	56		 push	 esi
  0007d	e8 00 00 00 00	 call	 _lua_setglobal

; 24   : 	lua_register(Lua, "gObjCalDistance", this->LuagObjCalDistance);

  00082	6a 00		 push	 0
  00084	68 00 00 00 00	 push	 OFFSET ?LuagObjCalDistance@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjCalDistance
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 _lua_pushcclosure
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CBLFBOOO@gObjCalDistance?$AA@
  00094	56		 push	 esi
  00095	e8 00 00 00 00	 call	 _lua_setglobal

; 25   : 	lua_register(Lua, "GCServerCmd", this->LuaGCServerCmd);

  0009a	6a 00		 push	 0
  0009c	68 00 00 00 00	 push	 OFFSET ?LuaGCServerCmd@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGCServerCmd
  000a1	56		 push	 esi
  000a2	e8 00 00 00 00	 call	 _lua_pushcclosure
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LJHFLOBI@GCServerCmd?$AA@
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 _lua_setglobal
  000b2	83 c4 44	 add	 esp, 68			; 00000044H

; 26   : 	lua_register(Lua, "gUserFindDevilSquareKeyEyes", this->LuagUserFindDevilSquareKeyEyes);

  000b5	6a 00		 push	 0
  000b7	68 00 00 00 00	 push	 OFFSET ?LuagUserFindDevilSquareKeyEyes@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagUserFindDevilSquareKeyEyes
  000bc	56		 push	 esi
  000bd	e8 00 00 00 00	 call	 _lua_pushcclosure
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BCBBAOB@gUserFindDevilSquareKeyEyes?$AA@
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 _lua_setglobal

; 27   : 	lua_register(Lua, "GCReFillSend", this->LuaGCReFillSend);

  000cd	6a 00		 push	 0
  000cf	68 00 00 00 00	 push	 OFFSET ?LuaGCReFillSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGCReFillSend
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 _lua_pushcclosure
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BALDCFB@GCReFillSend?$AA@
  000df	56		 push	 esi
  000e0	e8 00 00 00 00	 call	 _lua_setglobal

; 28   : 	lua_register(Lua, "GCManaSend", this->LuaGCManaSend);

  000e5	6a 00		 push	 0
  000e7	68 00 00 00 00	 push	 OFFSET ?LuaGCManaSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGCManaSend
  000ec	56		 push	 esi
  000ed	e8 00 00 00 00	 call	 _lua_pushcclosure
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FKIKLEN@GCManaSend?$AA@
  000f7	56		 push	 esi
  000f8	e8 00 00 00 00	 call	 _lua_setglobal

; 29   : 	lua_register(Lua, "gQeustNpcTeleport_TalkRefAdd", this->LuagQeustNpcTeleport_TalkRefAdd);

  000fd	6a 00		 push	 0
  000ff	68 00 00 00 00	 push	 OFFSET ?LuagQeustNpcTeleport_TalkRefAdd@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagQeustNpcTeleport_TalkRefAdd
  00104	56		 push	 esi
  00105	e8 00 00 00 00	 call	 _lua_pushcclosure
  0010a	83 c4 48	 add	 esp, 72			; 00000048H
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@ENMBKGMH@gQeustNpcTeleport_TalkRefAdd?$AA@
  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 _lua_setglobal

; 30   : 	lua_register(Lua, "gObjIsConnected", this->LuagObjIsConnected);

  00118	6a 00		 push	 0
  0011a	68 00 00 00 00	 push	 OFFSET ?LuagObjIsConnected@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjIsConnected
  0011f	56		 push	 esi
  00120	e8 00 00 00 00	 call	 _lua_pushcclosure
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BPFOEDOH@gObjIsConnected?$AA@
  0012a	56		 push	 esi
  0012b	e8 00 00 00 00	 call	 _lua_setglobal

; 31   : 	lua_register(Lua, "gObjGuildMasterCapacityTest", this->LuagObjGuildMasterCapacityTest);

  00130	6a 00		 push	 0
  00132	68 00 00 00 00	 push	 OFFSET ?LuagObjGuildMasterCapacityTest@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjGuildMasterCapacityTest
  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 _lua_pushcclosure
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@CNFNGOHK@gObjGuildMasterCapacityTest?$AA@
  00142	56		 push	 esi
  00143	e8 00 00 00 00	 call	 _lua_setglobal

; 32   : 	lua_register(Lua, "gObjMonsterTopHitDamageUser", this->LuagObjMonsterTopHitDamageUser);

  00148	6a 00		 push	 0
  0014a	68 00 00 00 00	 push	 OFFSET ?LuagObjMonsterTopHitDamageUser@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuagObjMonsterTopHitDamageUser
  0014f	56		 push	 esi
  00150	e8 00 00 00 00	 call	 _lua_pushcclosure
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KFNONMPP@gObjMonsterTopHitDamageUser?$AA@
  0015a	56		 push	 esi
  0015b	e8 00 00 00 00	 call	 _lua_setglobal
  00160	83 c4 44	 add	 esp, 68			; 00000044H

; 33   : 	lua_register(Lua, "CreateItem", this->LuaItemSerialCreateSend);

  00163	6a 00		 push	 0
  00165	68 00 00 00 00	 push	 OFFSET ?LuaItemSerialCreateSend@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaItemSerialCreateSend
  0016a	56		 push	 esi
  0016b	e8 00 00 00 00	 call	 _lua_pushcclosure
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMDEHLJF@CreateItem?$AA@
  00175	56		 push	 esi
  00176	e8 00 00 00 00	 call	 _lua_setglobal

; 34   : 	lua_register(Lua, "MakeRandomSetItem", this->LuaMakeRandomSetItem);

  0017b	6a 00		 push	 0
  0017d	68 00 00 00 00	 push	 OFFSET ?LuaMakeRandomSetItem@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaMakeRandomSetItem
  00182	56		 push	 esi
  00183	e8 00 00 00 00	 call	 _lua_pushcclosure
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DDGJOIAN@MakeRandomSetItem?$AA@
  0018d	56		 push	 esi
  0018e	e8 00 00 00 00	 call	 _lua_setglobal

; 35   : 	lua_register(Lua, "IsItem", this->LuaIsItem);

  00193	6a 00		 push	 0
  00195	68 00 00 00 00	 push	 OFFSET ?LuaIsItem@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaIsItem
  0019a	56		 push	 esi
  0019b	e8 00 00 00 00	 call	 _lua_pushcclosure
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_06BBEHHOJG@IsItem?$AA@
  001a5	56		 push	 esi
  001a6	e8 00 00 00 00	 call	 _lua_setglobal

; 36   : 	lua_register(Lua, "GetExcellentOpt", this->LuaNewOptionRand);

  001ab	6a 00		 push	 0
  001ad	68 00 00 00 00	 push	 OFFSET ?LuaNewOptionRand@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaNewOptionRand
  001b2	56		 push	 esi
  001b3	e8 00 00 00 00	 call	 _lua_pushcclosure
  001b8	83 c4 48	 add	 esp, 72			; 00000048H
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DIEBIHEG@GetExcellentOpt?$AA@
  001c0	56		 push	 esi
  001c1	e8 00 00 00 00	 call	 _lua_setglobal

; 37   : 	lua_register(Lua, "GetAncientOpt", this->LuaGetSetItemOption);

  001c6	6a 00		 push	 0
  001c8	68 00 00 00 00	 push	 OFFSET ?LuaGetSetItemOption@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGetSetItemOption
  001cd	56		 push	 esi
  001ce	e8 00 00 00 00	 call	 _lua_pushcclosure
  001d3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HHPFCLHM@GetAncientOpt?$AA@
  001d8	56		 push	 esi
  001d9	e8 00 00 00 00	 call	 _lua_setglobal

; 38   : 	lua_register(Lua, "GetRandomValue", this->LuaGetRandomValue);

  001de	6a 00		 push	 0
  001e0	68 00 00 00 00	 push	 OFFSET ?LuaGetRandomValue@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGetRandomValue
  001e5	56		 push	 esi
  001e6	e8 00 00 00 00	 call	 _lua_pushcclosure
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CCDBEBOO@GetRandomValue?$AA@
  001f0	56		 push	 esi
  001f1	e8 00 00 00 00	 call	 _lua_setglobal

; 39   : 	lua_register(Lua, "GetLargeRandomValue", this->LuaGetLargeRandomValue);

  001f6	6a 00		 push	 0
  001f8	68 00 00 00 00	 push	 OFFSET ?LuaGetLargeRandomValue@LuaExport@@SAHPAUlua_State@@@Z ; LuaExport::LuaGetLargeRandomValue
  001fd	56		 push	 esi
  001fe	e8 00 00 00 00	 call	 _lua_pushcclosure
  00203	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JBOFDONC@GetLargeRandomValue?$AA@
  00208	56		 push	 esi
  00209	e8 00 00 00 00	 call	 _lua_setglobal
  0020e	83 c4 44	 add	 esp, 68			; 00000044H
  00211	5e		 pop	 esi

; 40   : }

  00212	5d		 pop	 ebp
  00213	c2 04 00	 ret	 4
?AddTable@LuaExport@@QAEXPAUlua_State@@@Z ENDP		; LuaExport::AddTable
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__EgLuaExport@@YAXXZ
text$yc	SEGMENT
??__EgLuaExport@@YAXXZ PROC				; `dynamic initializer for 'gLuaExport'', COMDAT

; 4    : LuaExport gLuaExport;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gLuaExport@@3VLuaExport@@A ; gLuaExport
  00005	e8 00 00 00 00	 call	 ??0LuaExport@@QAE@XZ	; LuaExport::LuaExport
  0000a	68 00 00 00 00	 push	 OFFSET ??__FgLuaExport@@YAXXZ ; `dynamic atexit destructor for 'gLuaExport''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__EgLuaExport@@YAXXZ ENDP				; `dynamic initializer for 'gLuaExport''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__FgLuaExport@@YAXXZ
text$yd	SEGMENT
??__FgLuaExport@@YAXXZ PROC				; `dynamic atexit destructor for 'gLuaExport'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gLuaExport@@3VLuaExport@@A ; gLuaExport
  00005	e9 00 00 00 00	 jmp	 ??1LuaExport@@UAE@XZ	; LuaExport::~LuaExport
??__FgLuaExport@@YAXXZ ENDP				; `dynamic atexit destructor for 'gLuaExport''
text$yd	ENDS
PUBLIC	?gLuaExport@@3VLuaExport@@A			; gLuaExport
_BSS	SEGMENT
?gLuaExport@@3VLuaExport@@A DD 01H DUP (?)		; gLuaExport
_BSS	ENDS
CRT$XCU	SEGMENT
_gLuaExport$initializer$ DD FLAT:??__EgLuaExport@@YAXXZ
CRT$XCU	ENDS
END
