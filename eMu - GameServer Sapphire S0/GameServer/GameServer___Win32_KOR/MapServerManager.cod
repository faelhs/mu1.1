; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\MapServerManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
EXTRN	_isalnum:PROC
EXTRN	_isalpha:PROC
EXTRN	_atof:PROC
EXTRN	_isdigit:PROC
EXTRN	_getc:PROC
EXTRN	_ungetc:PROC
EXTRN	_isspace:PROC
EXTRN	_fgetc:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
_BSS	SEGMENT
_CurrentToken DD 01H DUP (?)
_TokenNumber DD	01H DUP (?)
_SMDFile DD	01H DUP (?)
_TokenString DB	064H DUP (?)
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\include\readscript.h
_BSS	ENDS
;	COMDAT ?GetToken@@YA?AW4SMDToken@@XZ
_TEXT	SEGMENT
_TempString$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
?GetToken@@YA?AW4SMDToken@@XZ PROC			; GetToken, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 25   : 	char ch;
; 26   : 	char* p;
; 27   : 	char TempString[100];
; 28   : 
; 29   : 	TokenString[0]=0;

  00010	c6 05 00 00 00
	00 00		 mov	 BYTE PTR _TokenString, 0
  00017	53		 push	 ebx
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL31@GetToken:

; 30   : 
; 31   : 	do
; 32   : 	{
; 33   : 		if ((ch=fgetc(SMDFile)) == -1)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _fgetc
  0002b	8a d8		 mov	 bl, al
  0002d	83 c4 04	 add	 esp, 4
  00030	80 fb ff	 cmp	 bl, -1
  00033	74 64		 je	 SHORT $LN39@GetToken

; 36   : 		}
; 37   : 		else
; 38   : 		{	
; 39   : 			if (ch=='/')		// this is /

  00035	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  00038	75 31		 jne	 SHORT $LN30@GetToken

; 40   : 			{
; 41   : 				if((ch=fgetc(SMDFile)) == '/')

  0003a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 _fgetc
  00046	8a d8		 mov	 bl, al
  00048	83 c4 04	 add	 esp, 4
  0004b	80 fb 2f	 cmp	 bl, 47			; 0000002fH
  0004e	75 1b		 jne	 SHORT $LN30@GetToken
$LL24@GetToken:

; 42   : 				{
; 43   : 					while ((ch != '\n') && (ch != -1))	// End of Line (EOL)

  00050	80 fb ff	 cmp	 bl, -1
  00053	74 44		 je	 SHORT $LN39@GetToken

; 44   : 					{
; 45   : 						ch=fgetc(SMDFile);

  00055	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  0005b	52		 push	 edx
  0005c	e8 00 00 00 00	 call	 _fgetc
  00061	8a d8		 mov	 bl, al
  00063	83 c4 04	 add	 esp, 4
  00066	80 fb 0a	 cmp	 bl, 10			; 0000000aH
  00069	75 e5		 jne	 SHORT $LL24@GetToken
$LN30@GetToken:

; 46   : 					}
; 47   : 	
; 48   : 					if (ch == -1)
; 49   : 					{
; 50   : 						return END;	// End of FILE
; 51   : 					}
; 52   : 				}
; 53   : 			}
; 54   : 		}
; 55   : 	}
; 56   : 	while (isspace(ch) != 0);

  0006b	0f be c3	 movsx	 eax, bl
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _isspace
  00074	83 c4 04	 add	 esp, 4
  00077	85 c0		 test	 eax, eax
  00079	75 a5		 jne	 SHORT $LL31@GetToken

; 57   : 
; 58   : 	
; 59   : 	switch(ch)

  0007b	0f be c3	 movsx	 eax, bl
  0007e	8d 48 de	 lea	 ecx, DWORD PTR [eax-34]
  00081	56		 push	 esi
  00082	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  00085	0f 87 2b 01 00
	00		 ja	 $LN6@GetToken
  0008b	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN46@GetToken[ecx]
  00092	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN50@GetToken[ecx*4]
$LN39@GetToken:

; 34   : 		{
; 35   : 			return END;	// End of FILE (EOF)

  00099	b8 02 00 00 00	 mov	 eax, 2
  0009e	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0009f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a2	33 cd		 xor	 ecx, ebp
  000a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN19@GetToken:

; 60   : 	{
; 61   : 
; 62   : 	case 0x23:	// #
; 63   : 		return CurrentToken=COMMAND;

  000ad	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  000b2	e9 99 01 00 00	 jmp	 $LN48@GetToken
$LN18@GetToken:

; 64   : 		break;
; 65   : 	
; 66   : 	case 0x3B:	// ;
; 67   : 		return CurrentToken=SEMICOLON;

  000b7	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  000bc	e9 8f 01 00 00	 jmp	 $LN48@GetToken
$LN17@GetToken:

; 68   : 		break;
; 69   : 	
; 70   : 	case 0x2C:	// ,
; 71   : 
; 72   : 		return CurrentToken=COMMA;

  000c1	b8 2c 00 00 00	 mov	 eax, 44			; 0000002cH
  000c6	e9 85 01 00 00	 jmp	 $LN48@GetToken
$LN16@GetToken:

; 73   : 		break;
; 74   : 	
; 75   : 	case 0x7B:	// {
; 76   : 		return CurrentToken = LP;

  000cb	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  000d0	e9 7b 01 00 00	 jmp	 $LN48@GetToken
$LN15@GetToken:

; 77   : 		break;
; 78   : 
; 79   : 	case 0x7D:	// }
; 80   : 		return CurrentToken = RP;

  000d5	b8 7d 00 00 00	 mov	 eax, 125		; 0000007dH
  000da	e9 71 01 00 00	 jmp	 $LN48@GetToken
$LN14@GetToken:

; 81   : 		break;
; 82   : 	// Nice Index Table :)	by Deathway
; 83   : 	// Numbers Case
; 84   : 	case 0x2D:	//-
; 85   : 	case 0x2E:	//.
; 86   : 	case '0':	//0
; 87   : 	case '1':	//1
; 88   : 	case '2':	//2
; 89   : 	case '3':	//3
; 90   : 	case '4':	//4		
; 91   : 	case '5':	//5
; 92   : 	case '6':	//6
; 93   : 	case '7':	//7
; 94   : 	case '8':	//8
; 95   : 	case '9':	//9
; 96   : 		ungetc(ch, SMDFile);

  000df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 _ungetc

; 97   : 		p = TempString;
; 98   : 		
; 99   : 		while (((ch=getc(SMDFile)) != -1) && ((ch == 0x2E) || (isdigit(ch) != 0) || (ch == 0x2D)))  // 2e '.'  2D '-'

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  000f1	50		 push	 eax
  000f2	8d 75 98	 lea	 esi, DWORD PTR _TempString$[ebp]
  000f5	e8 00 00 00 00	 call	 _getc
  000fa	8a d8		 mov	 bl, al
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	80 fb ff	 cmp	 bl, -1
  00102	74 33		 je	 SHORT $LN12@GetToken
$LL13@GetToken:
  00104	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  00107	74 15		 je	 SHORT $LN11@GetToken
  00109	0f be cb	 movsx	 ecx, bl
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 _isdigit
  00112	83 c4 04	 add	 esp, 4
  00115	85 c0		 test	 eax, eax
  00117	75 05		 jne	 SHORT $LN11@GetToken
  00119	80 fb 2d	 cmp	 bl, 45			; 0000002dH
  0011c	75 19		 jne	 SHORT $LN12@GetToken
$LN11@GetToken:
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 100  : 		{
; 101  : 			*p = ch;	// Construct a String

  00124	88 1e		 mov	 BYTE PTR [esi], bl
  00126	52		 push	 edx

; 102  : 			p++;

  00127	46		 inc	 esi
  00128	e8 00 00 00 00	 call	 _getc
  0012d	8a d8		 mov	 bl, al
  0012f	83 c4 04	 add	 esp, 4
  00132	80 fb ff	 cmp	 bl, -1
  00135	75 cd		 jne	 SHORT $LL13@GetToken
$LN12@GetToken:

; 103  : 		}		
; 104  : 		*p = 0;
; 105  : 		TokenNumber = atof( TempString);	// Select the first Byte as Main ID

  00137	8d 45 98	 lea	 eax, DWORD PTR _TempString$[ebp]
  0013a	50		 push	 eax
  0013b	c6 06 00	 mov	 BYTE PTR [esi], 0
  0013e	e8 00 00 00 00	 call	 _atof
  00143	d9 1d 00 00 00
	00		 fstp	 DWORD PTR _TokenNumber
  00149	83 c4 04	 add	 esp, 4
  0014c	5e		 pop	 esi

; 106  : 		return CurrentToken  = NUMBER ;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _CurrentToken, 1
  00157	b8 01 00 00 00	 mov	 eax, 1
  0015c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0015d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00160	33 cd		 xor	 ecx, ebp
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@GetToken:

; 107  : 		break;
; 108  : 
; 109  : 	case '\"':	// "	String Case
; 110  : 		p=&TokenString[0];
; 111  : 		
; 112  : 		while (((ch=getc(SMDFile)) != -1 ) && (ch != 0x22))	// nice

  0016b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  00171	51		 push	 ecx
  00172	be 00 00 00 00	 mov	 esi, OFFSET _TokenString
  00177	e8 00 00 00 00	 call	 _getc
  0017c	83 c4 04	 add	 esp, 4
  0017f	3c ff		 cmp	 al, -1
  00181	74 1e		 je	 SHORT $LN8@GetToken
$LL9@GetToken:
  00183	3c 22		 cmp	 al, 34			; 00000022H
  00185	0f 84 a1 00 00
	00		 je	 $LN7@GetToken
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 113  : 		{
; 114  : 			*p = ch;

  00191	88 06		 mov	 BYTE PTR [esi], al
  00193	52		 push	 edx

; 115  : 			p++;

  00194	46		 inc	 esi
  00195	e8 00 00 00 00	 call	 _getc
  0019a	83 c4 04	 add	 esp, 4
  0019d	3c ff		 cmp	 al, -1
  0019f	75 e2		 jne	 SHORT $LL9@GetToken
$LN8@GetToken:

; 116  : 		}
; 117  : 		if (ch != 0x22 )

  001a1	3c 22		 cmp	 al, 34			; 00000022H
  001a3	0f 84 83 00 00
	00		 je	 $LN7@GetToken

; 118  : 		{
; 119  : 			ungetc(ch, SMDFile);

  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _SMDFile
  001af	0f be d0	 movsx	 edx, al
  001b2	51		 push	 ecx
  001b3	52		 push	 edx

; 120  : 		}
; 121  : 		*p = 0;
; 122  : 		return CurrentToken = NAME;

  001b4	eb 6e		 jmp	 SHORT $LN49@GetToken
$LN6@GetToken:

; 123  : 		break;
; 124  : 
; 125  : 	default:	// Others
; 126  : 		if (isalpha(ch))

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 _isalpha
  001bc	83 c4 04	 add	 esp, 4
  001bf	85 c0		 test	 eax, eax
  001c1	0f 84 84 00 00
	00		 je	 $LN5@GetToken

; 127  : 		{
; 128  : 			p=&TokenString[0];
; 129  : 			*p=ch;
; 130  : 			p++;
; 131  : 
; 132  : 			while ( ((ch=getc(SMDFile)) != -1) && ( (ch == 0x2E) || (ch == 0x5F) || (isalnum(ch) != 0) ) )

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  001cc	50		 push	 eax
  001cd	88 1d 00 00 00
	00		 mov	 BYTE PTR _TokenString, bl
  001d3	be 01 00 00 00	 mov	 esi, OFFSET _TokenString+1
  001d8	e8 00 00 00 00	 call	 _getc
  001dd	8a d8		 mov	 bl, al
  001df	83 c4 04	 add	 esp, 4
  001e2	80 fb ff	 cmp	 bl, -1
  001e5	74 33		 je	 SHORT $LN3@GetToken
$LL4@GetToken:
  001e7	80 fb 2e	 cmp	 bl, 46			; 0000002eH
  001ea	74 15		 je	 SHORT $LN2@GetToken
  001ec	80 fb 5f	 cmp	 bl, 95			; 0000005fH
  001ef	74 10		 je	 SHORT $LN2@GetToken
  001f1	0f be cb	 movsx	 ecx, bl
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 _isalnum
  001fa	83 c4 04	 add	 esp, 4
  001fd	85 c0		 test	 eax, eax
  001ff	74 19		 je	 SHORT $LN3@GetToken
$LN2@GetToken:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile

; 133  : 			{
; 134  : 				*p=ch;

  00207	88 1e		 mov	 BYTE PTR [esi], bl
  00209	52		 push	 edx

; 135  : 				p++;

  0020a	46		 inc	 esi
  0020b	e8 00 00 00 00	 call	 _getc
  00210	8a d8		 mov	 bl, al
  00212	83 c4 04	 add	 esp, 4
  00215	80 fb ff	 cmp	 bl, -1
  00218	75 cd		 jne	 SHORT $LL4@GetToken
$LN3@GetToken:

; 136  : 				
; 137  : 			}
; 138  : 
; 139  : 			ungetc(ch, SMDFile);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR _SMDFile
  0021f	0f be cb	 movsx	 ecx, bl
  00222	50		 push	 eax
  00223	51		 push	 ecx
$LN49@GetToken:
  00224	e8 00 00 00 00	 call	 _ungetc
  00229	83 c4 08	 add	 esp, 8
$LN7@GetToken:

; 140  : 			*p=0;

  0022c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0022f	5e		 pop	 esi

; 141  : 			CurrentToken=NAME;

  00230	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _CurrentToken, 0

; 142  : 			return CurrentToken;

  0023a	33 c0		 xor	 eax, eax
  0023c	5b		 pop	 ebx

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  0023d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00240	33 cd		 xor	 ecx, ebp
  00242	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN5@GetToken:

; 143  : 		}
; 144  : 		else
; 145  : 		{
; 146  : 			return CurrentToken = SMD_ERROR; // '<'

  0024b	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
$LN48@GetToken:

; 147  : 		}
; 148  : 		break;
; 149  : 
; 150  : 	}
; 151  : 
; 152  : 	return NAME;
; 153  : }

  00250	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00253	5e		 pop	 esi
  00254	33 cd		 xor	 ecx, ebp
  00256	a3 00 00 00 00	 mov	 DWORD PTR _CurrentToken, eax
  0025b	5b		 pop	 ebx
  0025c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00261	8b e5		 mov	 esp, ebp
  00263	5d		 pop	 ebp
  00264	c3		 ret	 0
  00265	8d 49 00	 npad	 3
$LN50@GetToken:
  00268	00 00 00 00	 DD	 $LN10@GetToken
  0026c	00 00 00 00	 DD	 $LN19@GetToken
  00270	00 00 00 00	 DD	 $LN17@GetToken
  00274	00 00 00 00	 DD	 $LN14@GetToken
  00278	00 00 00 00	 DD	 $LN18@GetToken
  0027c	00 00 00 00	 DD	 $LN16@GetToken
  00280	00 00 00 00	 DD	 $LN15@GetToken
  00284	00 00 00 00	 DD	 $LN6@GetToken
$LN46@GetToken:
  00288	00		 DB	 0
  00289	01		 DB	 1
  0028a	07		 DB	 7
  0028b	07		 DB	 7
  0028c	07		 DB	 7
  0028d	07		 DB	 7
  0028e	07		 DB	 7
  0028f	07		 DB	 7
  00290	07		 DB	 7
  00291	07		 DB	 7
  00292	02		 DB	 2
  00293	03		 DB	 3
  00294	03		 DB	 3
  00295	07		 DB	 7
  00296	03		 DB	 3
  00297	03		 DB	 3
  00298	03		 DB	 3
  00299	03		 DB	 3
  0029a	03		 DB	 3
  0029b	03		 DB	 3
  0029c	03		 DB	 3
  0029d	03		 DB	 3
  0029e	03		 DB	 3
  0029f	03		 DB	 3
  002a0	07		 DB	 7
  002a1	04		 DB	 4
  002a2	07		 DB	 7
  002a3	07		 DB	 7
  002a4	07		 DB	 7
  002a5	07		 DB	 7
  002a6	07		 DB	 7
  002a7	07		 DB	 7
  002a8	07		 DB	 7
  002a9	07		 DB	 7
  002aa	07		 DB	 7
  002ab	07		 DB	 7
  002ac	07		 DB	 7
  002ad	07		 DB	 7
  002ae	07		 DB	 7
  002af	07		 DB	 7
  002b0	07		 DB	 7
  002b1	07		 DB	 7
  002b2	07		 DB	 7
  002b3	07		 DB	 7
  002b4	07		 DB	 7
  002b5	07		 DB	 7
  002b6	07		 DB	 7
  002b7	07		 DB	 7
  002b8	07		 DB	 7
  002b9	07		 DB	 7
  002ba	07		 DB	 7
  002bb	07		 DB	 7
  002bc	07		 DB	 7
  002bd	07		 DB	 7
  002be	07		 DB	 7
  002bf	07		 DB	 7
  002c0	07		 DB	 7
  002c1	07		 DB	 7
  002c2	07		 DB	 7
  002c3	07		 DB	 7
  002c4	07		 DB	 7
  002c5	07		 DB	 7
  002c6	07		 DB	 7
  002c7	07		 DB	 7
  002c8	07		 DB	 7
  002c9	07		 DB	 7
  002ca	07		 DB	 7
  002cb	07		 DB	 7
  002cc	07		 DB	 7
  002cd	07		 DB	 7
  002ce	07		 DB	 7
  002cf	07		 DB	 7
  002d0	07		 DB	 7
  002d1	07		 DB	 7
  002d2	07		 DB	 7
  002d3	07		 DB	 7
  002d4	07		 DB	 7
  002d5	07		 DB	 7
  002d6	07		 DB	 7
  002d7	07		 DB	 7
  002d8	07		 DB	 7
  002d9	07		 DB	 7
  002da	07		 DB	 7
  002db	07		 DB	 7
  002dc	07		 DB	 7
  002dd	07		 DB	 7
  002de	07		 DB	 7
  002df	07		 DB	 7
  002e0	07		 DB	 7
  002e1	05		 DB	 5
  002e2	07		 DB	 7
  002e3	06		 DB	 6
?GetToken@@YA?AW4SMDToken@@XZ ENDP			; GetToken
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 81   :         {return (_Where); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 83   :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??_7_MAPSVR_DATA@@6B@				; _MAPSVR_DATA::`vftable'
PUBLIC	??1_MAPSVR_DATA@@UAE@XZ				; _MAPSVR_DATA::~_MAPSVR_DATA
PUBLIC	??_R4_MAPSVR_DATA@@6B@				; _MAPSVR_DATA::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU_MAPSVR_DATA@@@8			; _MAPSVR_DATA `RTTI Type Descriptor'
PUBLIC	??_R3_MAPSVR_DATA@@8				; _MAPSVR_DATA::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_MAPSVR_DATA@@8				; _MAPSVR_DATA::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_MAPSVR_DATA@@8			; _MAPSVR_DATA::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E_MAPSVR_DATA@@UAEPAXI@Z:PROC		; _MAPSVR_DATA::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@_MAPSVR_DATA@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@_MAPSVR_DATA@@8 DD FLAT:??_R0?AU_MAPSVR_DATA@@@8 ; _MAPSVR_DATA::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_MAPSVR_DATA@@8
rdata$r	ENDS
;	COMDAT ??_R2_MAPSVR_DATA@@8
rdata$r	SEGMENT
??_R2_MAPSVR_DATA@@8 DD FLAT:??_R1A@?0A@EA@_MAPSVR_DATA@@8 ; _MAPSVR_DATA::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3_MAPSVR_DATA@@8
rdata$r	SEGMENT
??_R3_MAPSVR_DATA@@8 DD 00H				; _MAPSVR_DATA::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2_MAPSVR_DATA@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU_MAPSVR_DATA@@@8
_DATA	SEGMENT
??_R0?AU_MAPSVR_DATA@@@8 DD FLAT:??_7type_info@@6B@	; _MAPSVR_DATA `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU_MAPSVR_DATA@@', 00H
_DATA	ENDS
;	COMDAT ??_R4_MAPSVR_DATA@@6B@
rdata$r	SEGMENT
??_R4_MAPSVR_DATA@@6B@ DD 00H				; _MAPSVR_DATA::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU_MAPSVR_DATA@@@8
	DD	FLAT:??_R3_MAPSVR_DATA@@8
rdata$r	ENDS
;	COMDAT ??_7_MAPSVR_DATA@@6B@
CONST	SEGMENT
??_7_MAPSVR_DATA@@6B@ DD FLAT:??_R4_MAPSVR_DATA@@6B@	; _MAPSVR_DATA::`vftable'
	DD	FLAT:??_E_MAPSVR_DATA@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1_MAPSVR_DATA@@UAE@XZ
_TEXT	SEGMENT
??1_MAPSVR_DATA@@UAE@XZ PROC				; _MAPSVR_DATA::~_MAPSVR_DATA, COMDAT
; _this$ = ecx

; 19   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7_MAPSVR_DATA@@6B@

; 20   : 	return;
; 21   : }

  00006	c3		 ret	 0
??1_MAPSVR_DATA@@UAE@XZ ENDP				; _MAPSVR_DATA::~_MAPSVR_DATA
_TEXT	ENDS
PUBLIC	?Clear@_MAPSVR_DATA@@QAEXH@Z			; _MAPSVR_DATA::Clear
; Function compile flags: /Ogtp
;	COMDAT ?Clear@_MAPSVR_DATA@@QAEXH@Z
_TEXT	SEGMENT
_iInitSetVal$ = 8					; size = 4
?Clear@_MAPSVR_DATA@@QAEXH@Z PROC			; _MAPSVR_DATA::Clear, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 25   : 	this->m_bIN_USE = FALSE;
; 26   : 	this->m_btMAPSVR_GROUP = -1;
; 27   : 	this->m_sSVR_CODE = -1;

  00003	83 c8 ff	 or	 eax, -1
  00006	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax

; 28   : 	memset(this->m_cIPADDR, 0, sizeof(this->m_cIPADDR));

  0000a	33 c0		 xor	 eax, eax
  0000c	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00013	c6 41 08 ff	 mov	 BYTE PTR [ecx+8], 255	; 000000ffH
  00017	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0001a	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0001d	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 29   : 	this->m_wPORT = 0;

  00020	33 d2		 xor	 edx, edx
  00022	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00025	66 89 51 1c	 mov	 WORD PTR [ecx+28], dx
  00029	8d 41 1e	 lea	 eax, DWORD PTR [ecx+30]
  0002c	8d 4a 28	 lea	 ecx, DWORD PTR [edx+40]
  0002f	8b 55 08	 mov	 edx, DWORD PTR _iInitSetVal$[ebp]
  00032	56		 push	 esi
$LL8@Clear:

; 30   : 
; 31   : 	for ( int iMAP_COUNT =0;iMAP_COUNT<MAX_NUMBER_MAP;iMAP_COUNT++)
; 32   : 	{
; 33   : 		switch ( iInitSetVal )

  00033	83 fa ff	 cmp	 edx, -1
  00036	74 10		 je	 SHORT $LN3@Clear
  00038	85 d2		 test	 edx, edx
  0003a	74 07		 je	 SHORT $LN2@Clear

; 41   : 			default:
; 42   : 				this->m_sMAP_MOVE[iMAP_COUNT] = -3;

  0003c	be fd ff ff ff	 mov	 esi, -3			; fffffffdH
  00041	eb 0a		 jmp	 SHORT $LN13@Clear
$LN2@Clear:

; 37   : 				break;
; 38   : 			case 0:
; 39   : 				this->m_sMAP_MOVE[iMAP_COUNT] = -1;

  00043	83 ce ff	 or	 esi, -1

; 40   : 				break;

  00046	eb 05		 jmp	 SHORT $LN13@Clear
$LN3@Clear:

; 34   : 		{
; 35   : 			case -1:
; 36   : 				this->m_sMAP_MOVE[iMAP_COUNT] = -2;

  00048	be fe ff ff ff	 mov	 esi, -2			; fffffffeH
$LN13@Clear:
  0004d	66 89 30	 mov	 WORD PTR [eax], si
  00050	83 c0 02	 add	 eax, 2
  00053	49		 dec	 ecx
  00054	75 dd		 jne	 SHORT $LL8@Clear
  00056	5e		 pop	 esi

; 43   : 		}
; 44   : 	}
; 45   : }

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?Clear@_MAPSVR_DATA@@QAEXH@Z ENDP			; _MAPSVR_DATA::Clear
_TEXT	ENDS
PUBLIC	?CheckMapCanMove@CMapServerManager@@QAEHH@Z	; CMapServerManager::CheckMapCanMove
EXTRN	?MapNumberCheck@@YAHH@Z:PROC			; MapNumberCheck
; Function compile flags: /Ogtp
;	COMDAT ?CheckMapCanMove@CMapServerManager@@QAEHH@Z
_TEXT	SEGMENT
_iMAP_NUM$ = 8						; size = 4
?CheckMapCanMove@CMapServerManager@@QAEHH@Z PROC	; CMapServerManager::CheckMapCanMove, COMDAT
; _this$ = ecx

; 345  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 346  : 	if ( MapNumberCheck(iMAP_NUM) == 0 )

  00005	8b 7d 08	 mov	 edi, DWORD PTR _iMAP_NUM$[ebp]
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?MapNumberCheck@@YAHH@Z	; MapNumberCheck
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 08		 jne	 SHORT $LN4@CheckMapCa
$LN7@CheckMapCa:
  00017	5f		 pop	 edi

; 347  : 	{
; 348  : 		return FALSE;

  00018	33 c0		 xor	 eax, eax
  0001a	5e		 pop	 esi

; 366  : 	{
; 367  : 		return FALSE;
; 368  : 	}
; 369  : 
; 370  : 	return TRUE;
; 371  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN4@CheckMapCa:

; 349  : 	}
; 350  : 
; 351  : 	_MAPSVR_DATA * lpMapSvrData = this->m_lpThisMapSvrData;

  0001f	8b 86 80 af 00
	00		 mov	 eax, DWORD PTR [esi+44928]

; 352  : 
; 353  : 	if ( lpMapSvrData == NULL )

  00025	85 c0		 test	 eax, eax

; 354  : 	{
; 355  : 		return FALSE;

  00027	74 ee		 je	 SHORT $LN7@CheckMapCa

; 356  : 	}
; 357  : 
; 358  : 	if ( lpMapSvrData->m_bIN_USE == FALSE )

  00029	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0

; 359  : 	{
; 360  : 		return FALSE;

  0002d	74 e8		 je	 SHORT $LN7@CheckMapCa

; 361  : 	}
; 362  : 
; 363  : 	short sMAP_MOVE_INFO = lpMapSvrData->m_sMAP_MOVE[iMAP_NUM];
; 364  : 
; 365  : 	if ( sMAP_MOVE_INFO != -3 )

  0002f	33 c9		 xor	 ecx, ecx
  00031	66 83 7c 78 1e
	fd		 cmp	 WORD PTR [eax+edi*2+30], -3 ; fffffffdH
  00037	5f		 pop	 edi
  00038	0f 94 c1	 sete	 cl
  0003b	5e		 pop	 esi
  0003c	8b c1		 mov	 eax, ecx

; 366  : 	{
; 367  : 		return FALSE;
; 368  : 	}
; 369  : 
; 370  : 	return TRUE;
; 371  : }

  0003e	5d		 pop	 ebp
  0003f	c2 04 00	 ret	 4
?CheckMapCanMove@CMapServerManager@@QAEHH@Z ENDP	; CMapServerManager::CheckMapCanMove
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 94 c0	 sete	 al

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size, COMDAT
; _this$ = ecx

; 879  : 		return (this->_Mylast - this->_Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 880  : 		}

  00008	c3		 ret	 0
?size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::size
_TEXT	ENDS
PUBLIC	?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty
; Function compile flags: /Ogtp
;	COMDAT ?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty, COMDAT
; _this$ = ecx

; 889  : 		return (this->_Myfirst == this->_Mylast);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	33 d2		 xor	 edx, edx
  00004	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00007	0f 94 c0	 sete	 al

; 890  : 		}

  0000a	c3		 ret	 0
?empty@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBE_NXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::empty
_TEXT	ENDS
PUBLIC	??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[], COMDAT
; _this$ = ecx

; 928  : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 929  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 930  : 		if (size() <= _Pos)
; 931  : 			{	// report error
; 932  : 			_DEBUG_ERROR("vector subscript out of range");
; 933  : 			_SCL_SECURE_OUT_OF_RANGE;
; 934  : 			}
; 935  : 
; 936  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 937  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 938  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 939  : 
; 940  : 		return (*(this->_Myfirst + _Pos));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00008	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 941  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
??A?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEAAPAU_MAPSVR_DATA@@I@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::operator[]
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000b	33 c0		 xor	 eax, eax
  0000d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000f	0f 9c c0	 setl	 al

; 126  : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside, COMDAT
; _this$ = ecx

; 1285 : 		{	// test if _Ptr points inside vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00009	73 0d		 jae	 SHORT $LN3@Inside
  0000b	39 01		 cmp	 DWORD PTR [ecx], eax
  0000d	77 09		 ja	 SHORT $LN3@Inside
  0000f	b8 01 00 00 00	 mov	 eax, 1

; 1287 : 		}

  00014	5d		 pop	 ebp
  00015	c2 04 00	 ret	 4
$LN3@Inside:

; 1286 : 		return (_Ptr < this->_Mylast && this->_Myfirst <= _Ptr);

  00018	33 c0		 xor	 eax, eax

; 1287 : 		}

  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?_Inside@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBE_NPBQAU_MAPSVR_DATA@@@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Inside
_TEXT	ENDS
PUBLIC	?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range
; Function compile flags: /Ogtp
;	COMDAT ?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1454 : 		}

  00000	c2 08 00	 ret	 8
?_Orphan_range@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXPAPAU_MAPSVR_DATA@@0@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Orphan_range
_TEXT	ENDS
PUBLIC	??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 434  : 		}

  00000	c3		 ret	 0
??1?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ PROC	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@XZ ENDP	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
_TEXT	ENDS
EXTRN	__time64:PROC
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
;	COMDAT _time
_TEXT	SEGMENT
_time	PROC						; COMDAT
; __Time$ = eax

; 133  :     return _time64(_Time);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 __time64
  00006	83 c4 04	 add	 esp, 4

; 134  : }

  00009	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 15	 add	 eax, 21			; 00000015H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
; Function compile flags: /Ogtp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
; Function compile flags: /Ogtp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
; Function compile flags: /Ogtp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
; Function compile flags: /Ogtp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::allocator<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity, COMDAT
; _this$ = ecx

; 777  : 		return (this->_Myend - this->_Myfirst);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	2b 01		 sub	 eax, DWORD PTR [ecx]
  00005	c1 f8 02	 sar	 eax, 2

; 778  : 		}

  00008	c3		 ret	 0
?capacity@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::capacity
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen, COMDAT
; _this$ = ecx

; 1427 : 		_Xlength_error("vector<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN4@Xlen:
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEXXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Xlen
_TEXT	ENDS
PUBLIC	??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z ; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z PROC	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@PAU_MAPSVR_DATA@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<_MAPSVR_DATA *>::allocator<_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::deallocate
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z PROC ; std::allocator<_MAPSVR_DATA *>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@I@Z ENDP ; std::allocator<_MAPSVR_DATA *>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ ; std::allocator<_MAPSVR_DATA *>::max_size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ PROC ; std::allocator<_MAPSVR_DATA *>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@PAU_MAPSVR_DATA@@@std@@QBEIXZ ENDP ; std::allocator<_MAPSVR_DATA *>::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00009	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000d	75 0c		 jne	 SHORT $LN1@Max
  0000f	90		 npad	 1
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00019	74 f5		 je	 SHORT $LL2@Max
$LN1@Max:

; 644  : 		return (_Pnode);
; 645  : 		}

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
; Function compile flags: /Ogtp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000c	75 0c		 jne	 SHORT $LN1@Min
  0000e	8b ff		 npad	 2
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00018	74 f6		 je	 SHORT $LL2@Min
$LN1@Min:

; 651  : 		return (_Pnode);
; 652  : 		}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>
_TEXT	ENDS
PUBLIC	??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::addressof<_MAPSVR_DATA * const>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z PROC ; std::addressof<_MAPSVR_DATA * const>, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@QAU_MAPSVR_DATA@@@std@@YAPBQAU_MAPSVR_DATA@@ABQAU1@@Z ENDP ; std::addressof<_MAPSVR_DATA * const>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBHPAU_MAPSVR_DATA@@@?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0>::_Kfn<int const ,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node><std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00008	74 06		 je	 SHORT $LN8@operator

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  0000f	c3		 ret	 0
$LN8@operator:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00016	75 17		 jne	 SHORT $LN40@operator

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  00018	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0001b	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0001f	75 30		 jne	 SHORT $LN21@operator
$LL22@operator:
  00021	8b d1		 mov	 edx, ecx
  00023	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00026	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0002a	74 f5		 je	 SHORT $LL22@operator

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  0002e	c3		 ret	 0
$LN40@operator:

; 89   : 		else
; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00036	75 11		 jne	 SHORT $LN3@operator
$LL4@operator:
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0003c	75 0b		 jne	 SHORT $LN3@operator

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  0003e	89 10		 mov	 DWORD PTR [eax], edx
  00040	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00043	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00047	74 ef		 je	 SHORT $LL4@operator
$LN3@operator:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0004f	75 02		 jne	 SHORT $LN1@operator

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LN21@operator:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00051	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator:

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00053	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??$forward@AAF@std@@YAAAFAAF@Z			; std::forward<short &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAF@std@@YAAAFAAF@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAF@std@@YAAAFAAF@Z PROC			; std::forward<short &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAF@std@@YAAAFAAF@Z ENDP			; std::forward<short &>
_TEXT	ENDS
PUBLIC	??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA * &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z PROC ; std::forward<_MAPSVR_DATA * &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAU_MAPSVR_DATA@@@std@@YAAAPAU_MAPSVR_DATA@@AAPAU1@@Z ENDP ; std::forward<_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z PROC ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	0f bf 11	 movsx	 edx, WORD PTR [ecx]
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 164  : 		}

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
??$?0AAFAAPAU_MAPSVR_DATA@@@?$_Pair_base@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ENDP ; std::_Pair_base<int,_MAPSVR_DATA *>::_Pair_base<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ; std::forward<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z PROC ; std::forward<std::pair<int,_MAPSVR_DATA *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@HPAU_MAPSVR_DATA@@@std@@@std@@YA$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z PROC ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
$LN3@construct:

; 209  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
??$construct@AAPAU_MAPSVR_DATA@@@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@AAPAU2@@Z ENDP ; std::allocator<_MAPSVR_DATA *>::construct<_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z ; std::forward<_MAPSVR_DATA * const &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z PROC ; std::forward<_MAPSVR_DATA * const &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@ABQAU_MAPSVR_DATA@@@std@@YAABQAU_MAPSVR_DATA@@ABQAU1@@Z ENDP ; std::forward<_MAPSVR_DATA * const &>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z PROC ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>, COMDAT

; 516  : 	{	// return pointer category from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 517  : 	typename _Ptr_cat_helper<_Elem1, _Elem2>::_Type _Cat;
; 518  : 	return (_Cat);

  00004	8a 45 ff	 mov	 al, BYTE PTR __Cat$[ebp]

; 519  : 	}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??$_Ptr_cat@PAU_MAPSVR_DATA@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAU_MAPSVR_DATA@@0@Z ENDP ; std::_Ptr_cat<_MAPSVR_DATA *,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >, COMDAT

; 105  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z PROC ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>, COMDAT

; 46   : 	{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 47   : 	void _FARQ *_Vptr = _Ptr;
; 48   : 	::new (_Vptr) _Ty1(_STD forward<_Ty2>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN3@Construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
$LN3@Construct:

; 49   : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Construct@PAU_MAPSVR_DATA@@ABQAU1@@std@@YAXPAPAU_MAPSVR_DATA@@ABQAU1@@Z ENDP ; std::_Construct<_MAPSVR_DATA *,_MAPSVR_DATA * const &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z ; std::_Val_type<_MAPSVR_DATA * *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z PROC ; std::_Val_type<_MAPSVR_DATA * *>, COMDAT

; 790  : 	return (0);

  00000	33 c0		 xor	 eax, eax

; 791  : 	}

  00002	c3		 ret	 0
??$_Val_type@PAPAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@@Z ENDP ; std::_Val_type<_MAPSVR_DATA * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>
EXTRN	_memmove:PROC
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>, COMDAT

; 456  : 	{	// move [_First, _Last) to raw _Dest, scalar type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 457  : 	_DEBUG_RANGE(_First, _Last);
; 458  : 	_DEBUG_POINTER(_Dest);
; 459  : 	size_t _Count = (size_t)(_Last - _First);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00009	2b c1		 sub	 eax, ecx
  0000b	56		 push	 esi
  0000c	c1 f8 02	 sar	 eax, 2

; 460  : 	return ((_Ty2 *)_CSTD memmove(&*_Dest, &*_First,
; 461  : 		_Count * sizeof (*_First)) + _Count);	// NB: non-overlapping move

  0000f	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00016	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 462  : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Uninit_move@PAU_MAPSVR_DATA@@PAU1@PAU1@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<_MAPSVR_DATA *,_MAPSVR_DATA *,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
PUBLIC	??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z ; std::forward<_MAPSVR_DATA *>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z PROC ; std::forward<_MAPSVR_DATA *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAU_MAPSVR_DATA@@@std@@YA$$QAPAU_MAPSVR_DATA@@AAPAU1@@Z ENDP ; std::forward<_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z PROC ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0HPAU_MAPSVR_DATA@@@?$_Pair_base@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAH$$QAPAU_MAPSVR_DATA@@@Z ENDP ; std::_Pair_base<int const ,_MAPSVR_DATA *>::_Pair_base<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 09		 je	 SHORT $LN6@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	83 c4 04	 add	 esp, 4
$LN6@scalar:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 38   : 		}

  00000	c3		 ret	 0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	??0_MAPSVR_DATA@@QAE@XZ				; _MAPSVR_DATA::_MAPSVR_DATA
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
;	COMDAT ??0_MAPSVR_DATA@@QAE@XZ
_TEXT	SEGMENT
??0_MAPSVR_DATA@@QAE@XZ PROC				; _MAPSVR_DATA::_MAPSVR_DATA, COMDAT
; _this$ = ecx

; 14   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 15   : 	this->Clear(1);

  00003	6a 01		 push	 1
  00005	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7_MAPSVR_DATA@@6B@
  0000b	e8 00 00 00 00	 call	 ?Clear@_MAPSVR_DATA@@QAEXH@Z ; _MAPSVR_DATA::Clear

; 16   : }

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi
  00013	c3		 ret	 0
??0_MAPSVR_DATA@@QAE@XZ ENDP				; _MAPSVR_DATA::_MAPSVR_DATA
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G_MAPSVR_DATA@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G_MAPSVR_DATA@@UAEPAXI@Z PROC			; _MAPSVR_DATA::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1_MAPSVR_DATA@@UAE@XZ	; _MAPSVR_DATA::~_MAPSVR_DATA
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar@2
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar@2:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_G_MAPSVR_DATA@@UAEPAXI@Z ENDP			; _MAPSVR_DATA::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
; Function compile flags: /Ogtp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
; Function compile flags: /Ogtp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx

; 556  : 		}

  0000a	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
; Function compile flags: /Ogtp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 426  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 427  : 		_Myfirst = 0;

  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx

; 428  : 		_Mylast = 0;

  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 429  : 		_Myend = 0;

  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 430  : 		}

  0000c	c2 04 00	 ret	 4
??0?$_Vector_val@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@V?$allocator@PAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Vector_val<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	7d 05		 jge	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size, COMDAT
; _this$ = ecx

; 884  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 885  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QBEIXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::max_size
_TEXT	ENDS
PUBLIC	?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to
; Function compile flags: /Ogtp
;	COMDAT ?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to, COMDAT
; _this$ = ecx

; 1274 : 		{	// grow by 50% or at least to _Count

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1275 : 		size_type _Capacity = capacity();

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]

; 1276 : 
; 1277 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity
; 1278 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  00008	ba ff ff ff 3f	 mov	 edx, 1073741823		; 3fffffffH
  0000d	c1 f8 02	 sar	 eax, 2
  00010	8b c8		 mov	 ecx, eax
  00012	d1 e9		 shr	 ecx, 1
  00014	2b d1		 sub	 edx, ecx
  00016	3b d0		 cmp	 edx, eax
  00018	73 04		 jae	 SHORT $LN4@Grow_to
  0001a	33 c0		 xor	 eax, eax
  0001c	eb 02		 jmp	 SHORT $LN5@Grow_to
$LN4@Grow_to:
  0001e	03 c1		 add	 eax, ecx
$LN5@Grow_to:

; 1279 : 		if (_Capacity < _Count)

  00020	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	73 02		 jae	 SHORT $LN1@Grow_to

; 1280 : 			_Capacity = _Count;
; 1281 : 		return (_Capacity);

  00027	8b c1		 mov	 eax, ecx
$LN1@Grow_to:

; 1282 : 		}

  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
?_Grow_to@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IBEII@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Grow_to
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 10		 mov	 edx, DWORD PTR [eax]
  00004	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00008	75 40		 jne	 SHORT $LN3@operator@2

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0000d	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00011	75 1a		 jne	 SHORT $LN34@operator@2

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00019	75 0f		 jne	 SHORT $LN17@operator@2
  0001b	eb 03 8d 49 00	 npad	 5
$LL18@operator@2:
  00020	8b ca		 mov	 ecx, edx
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00028	74 f6		 je	 SHORT $LL18@operator@2
$LN17@operator@2:
  0002a	89 08		 mov	 DWORD PTR [eax], ecx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0002c	c3		 ret	 0
$LN34@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  0002d	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00030	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00034	75 12		 jne	 SHORT $LN1@operator@2
$LL2@operator@2:
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0003b	75 0b		 jne	 SHORT $LN1@operator@2

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0003d	89 10		 mov	 DWORD PTR [eax], edx
  0003f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00042	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00046	74 ee		 je	 SHORT $LL2@operator@2
$LN1@operator@2:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00048	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@2:

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0004a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 0c		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0b		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003e	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN2@Lrotate:

; 1775 : 		else
; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00047	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0004c	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 0d		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0d		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00041	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00044	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN2@Rrotate:

; 1805 : 		else
; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0004d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00050	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z PROC ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	0f bf 11	 movsx	 edx, WORD PTR [ecx]
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 248  : 		}

  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
??$?0AAFAAPAU_MAPSVR_DATA@@@?$pair@HPAU_MAPSVR_DATA@@@std@@QAE@AAFAAPAU_MAPSVR_DATA@@@Z ENDP ; std::pair<int,_MAPSVR_DATA *>::pair<int,_MAPSVR_DATA *><short &,_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z PROC ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
$LN7@Cons_val:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z ENDP ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >, COMDAT

; 88   : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 89   : 	}

  00000	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAXPAPAU_MAPSVR_DATA@@0AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T157491 = -12						; size = 12
$T157496 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 46		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  00015	77 16		 ja	 SHORT $LN1@Allocate
  00017	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0001a	03 c0		 add	 eax, eax
  0001c	03 c0		 add	 eax, eax
  0001e	03 c0		 add	 eax, eax
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	83 c4 04	 add	 esp, 4
  00029	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  0002b	75 28		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  0002d	8d 4d 08	 lea	 ecx, DWORD PTR $T157496[ebp]
  00030	51		 push	 ecx
  00031	8d 4d f4	 lea	 ecx, DWORD PTR $T157491[ebp]
  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157496[ebp], 0
  0003b	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00040	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00045	8d 55 f4	 lea	 edx, DWORD PTR $T157491[ebp]
  00048	52		 push	 edx
  00049	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157491[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00050	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	56		 push	 esi
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z ; std::_Allocate<_MAPSVR_DATA *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z
_TEXT	SEGMENT
$T157504 = -12						; size = 12
$T157508 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z PROC ; std::_Allocate<_MAPSVR_DATA *>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 44		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 14		 ja	 SHORT $LN1@Allocate@2
  00017	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00024	83 c4 04	 add	 esp, 4
  00027	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00029	75 28		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  0002b	8d 4d 08	 lea	 ecx, DWORD PTR $T157508[ebp]
  0002e	51		 push	 ecx
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T157504[ebp]
  00032	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157508[ebp], 0
  00039	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00043	8d 55 f4	 lea	 edx, DWORD PTR $T157504[ebp]
  00046	52		 push	 edx
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157504[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@PAU_MAPSVR_DATA@@@std@@YAPAPAU_MAPSVR_DATA@@IPAPAU1@@Z ENDP ; std::_Allocate<_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@Z ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z ; std::allocator<_MAPSVR_DATA *>::construct
; Function compile flags: /Ogtp
;	COMDAT ?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z PROC ; std::allocator<_MAPSVR_DATA *>::construct, COMDAT
; _this$ = ecx

; 196  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 197  : 		_Construct(_Ptr, _Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN5@construct@2
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
$LN5@construct@2:

; 198  : 		}

  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?construct@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEXPAPAU_MAPSVR_DATA@@ABQAU3@@Z ENDP ; std::allocator<_MAPSVR_DATA *>::construct
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\memory
;	COMDAT ??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >, COMDAT

; 469  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 470  : 	return (_Uninit_move(_First, _Last, _Dest, _Al,
; 471  : 		_Val_type(_First), _Ptr_cat(_First, _Dest)));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00009	2b c1		 sub	 eax, ecx
  0000b	56		 push	 esi
  0000c	c1 f8 02	 sar	 eax, 2
  0000f	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00016	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 472  : 	}

  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
??$_Uninitialized_move@PAPAU_MAPSVR_DATA@@PAPAU1@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@YAPAPAU_MAPSVR_DATA@@PAPAU1@00AAV?$allocator@PAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Uninitialized_move<_MAPSVR_DATA * *,_MAPSVR_DATA * *,std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
; Function compile flags: /Ogtp
;	COMDAT ??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	89 10		 mov	 DWORD PTR [eax], edx
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 256  : 		}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??$?0HPAU_MAPSVR_DATA@@@?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@QAE@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::pair<int const ,_MAPSVR_DATA *>::pair<int const ,_MAPSVR_DATA *><int,_MAPSVR_DATA *>
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogtp
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ
_TEXT	SEGMENT
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->, COMDAT
; _this$ = ecx

; 401  : 		return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 402  : 		}

  00005	c3		 ret	 0
??C?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QBEPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator->
_TEXT	ENDS
PUBLIC	??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 507  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx
  00002	33 c9		 xor	 ecx, ecx
  00004	89 08		 mov	 DWORD PTR [eax], ecx
  00006	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00009	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 508  : 		}

  0000c	c3		 ret	 0
??0?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy, COMDAT
; _this$ = ecx

; 1270 : 		_Destroy_range(_First, _Last, this->_Alval);
; 1271 : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXPAPAU_MAPSVR_DATA@@0@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Destroy
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
$T157683 = -12						; size = 12
$T157675 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 46		 je	 SHORT $LN1@allocate
  0000f	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  00015	77 16		 ja	 SHORT $LN3@allocate
  00017	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0001a	03 c0		 add	 eax, eax
  0001c	03 c0		 add	 eax, eax
  0001e	03 c0		 add	 eax, eax
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	83 c4 04	 add	 esp, 4
  00029	85 c0		 test	 eax, eax
  0002b	75 28		 jne	 SHORT $LN1@allocate
$LN3@allocate:
  0002d	8d 4d 08	 lea	 ecx, DWORD PTR $T157675[ebp]
  00030	51		 push	 ecx
  00031	8d 4d f4	 lea	 ecx, DWORD PTR $T157683[ebp]
  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157675[ebp], 0
  0003b	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00040	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00045	8d 55 f4	 lea	 edx, DWORD PTR $T157683[ebp]
  00048	52		 push	 edx
  00049	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157683[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00050	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate:
$LN1@allocate:

; 188  : 		}

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
$LN12@allocate:
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::allocate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z
_TEXT	SEGMENT
$T157705 = -12						; size = 12
$T157703 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z PROC ; std::allocator<_MAPSVR_DATA *>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 44		 je	 SHORT $LN1@allocate@2
  0000f	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  00015	77 14		 ja	 SHORT $LN3@allocate@2
  00017	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00024	83 c4 04	 add	 esp, 4
  00027	85 c0		 test	 eax, eax
  00029	75 28		 jne	 SHORT $LN1@allocate@2
$LN3@allocate@2:
  0002b	8d 4d 08	 lea	 ecx, DWORD PTR $T157703[ebp]
  0002e	51		 push	 ecx
  0002f	8d 4d f4	 lea	 ecx, DWORD PTR $T157705[ebp]
  00032	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157703[ebp], 0
  00039	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00043	8d 55 f4	 lea	 edx, DWORD PTR $T157705[ebp]
  00046	52		 push	 edx
  00047	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157705[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:

; 188  : 		}

  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
$LN12@allocate@2:
?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z ENDP ; std::allocator<_MAPSVR_DATA *>::allocate
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>
; Function compile flags: /Ogtp
;	COMDAT ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z PROC ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 07		 je	 SHORT $LN9@Cons_val@2
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
$LN9@Cons_val@2:

; 281  : 	}

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z ENDP ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>, COMDAT
; _this$ = ecx

; 1322 : 		pointer _Umove(_Iter _First, _Iter _Last, pointer _Ptr)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1323 : 		{	// move initializing [_First, _Last), using allocator
; 1324 : 		return (_Uninitialized_move(_First, _Last,
; 1325 : 			_Ptr, this->_Alval));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00009	2b c1		 sub	 eax, ecx
  0000b	56		 push	 esi
  0000c	c1 f8 02	 sar	 eax, 2
  0000f	8d 34 85 00 00
	00 00		 lea	 esi, DWORD PTR [eax*4]
  00016	8b 45 10	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00019	56		 push	 esi
  0001a	51		 push	 ecx
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 _memmove
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
  00024	03 c6		 add	 eax, esi
  00026	5e		 pop	 esi

; 1326 : 		}

  00027	5d		 pop	 ebp
  00028	c2 0c 00	 ret	 12			; 0000000cH
??$_Umove@PAPAU_MAPSVR_DATA@@@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEPAPAU_MAPSVR_DATA@@PAPAU2@00@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Umove<_MAPSVR_DATA * *>
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T157862 = -16						; size = 12
$T157845 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 18		 push	 24			; 00000018H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	33 c9		 xor	 ecx, ecx
  00012	83 c4 04	 add	 esp, 4
  00015	3b c1		 cmp	 eax, ecx
  00017	74 1a		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00019	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001c	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00024	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00027	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  0002a	66 89 48 14	 mov	 WORD PTR [eax+20], cx
  0002e	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  00033	8d 45 fc	 lea	 eax, DWORD PTR $T157845[ebp]
  00036	89 4d fc	 mov	 DWORD PTR $T157845[ebp], ecx
  00039	50		 push	 eax
  0003a	8d 4d f0	 lea	 ecx, DWORD PTR $T157862[ebp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00042	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T157862[ebp]
  0004a	51		 push	 ecx
  0004b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T157862[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00052	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00057	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 206  : 		void construct(pointer _Ptr, _Other&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 207  : 		{	// construct object at _Ptr with value _Val
; 208  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Other>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct@3
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct@3:

; 209  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
??$construct@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_MAPSVR_DATA@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::allocator<std::pair<int const ,_MAPSVR_DATA *> >::construct<std::pair<int,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1e		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00016	50		 push	 eax
  00017	8b cb		 mov	 ecx, ebx
  00019	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001e	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  00020	57		 push	 edi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00026	83 c4 04	 add	 esp, 4
  00029	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e2		 je	 SHORT $LL3@Erase
$LN1@Erase:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 405  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 406  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++

; 407  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 408  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy, COMDAT
; _this$ = ecx

; 1301 : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1302 : 		if (this->_Myfirst != 0)

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN6@Tidy

; 1303 : 			{	// something to free, destroy and deallocate it
; 1304 : 			this->_Orphan_all();
; 1305 : 			_Destroy(this->_Myfirst, this->_Mylast);
; 1306 : 			this->_Alval.deallocate(this->_Myfirst,
; 1307 : 				this->_Myend - this->_Myfirst);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN6@Tidy:

; 1308 : 			}
; 1309 : 		this->_Myfirst = 0;

  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 1310 : 		this->_Mylast = 0;

  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1311 : 		this->_Myend = 0;

  0001f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00026	5e		 pop	 esi

; 1312 : 		}

  00027	c3		 ret	 0
?_Tidy@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXXZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
$T158040 = -16						; size = 12
$T158023 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  00009	6a 18		 push	 24			; 00000018H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 28		 je	 SHORT $LN15@Tree_val
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00021	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 14	 mov	 BYTE PTR [ecx+20], al

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 15	 mov	 BYTE PTR [edx+21], al

; 551  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  00046	8d 45 fc	 lea	 eax, DWORD PTR $T158023[ebp]
  00049	50		 push	 eax
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR $T158040[ebp]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T158023[ebp], 0
  00054	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T158040[ebp]
  00061	51		 push	 ecx
  00062	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T158040[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  0006e	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve, COMDAT
; _this$ = ecx

; 746  : 		{	// determine new minimum length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 747  : 		if (max_size() < _Count)

  00003	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0000e	76 0a		 jbe	 SHORT $LN5@reserve

; 748  : 			_Xlen();	// result too long

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00015	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN43@reserve:
$LN5@reserve:

; 749  : 		else if (capacity() < _Count)

  0001a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0001d	2b 0e		 sub	 ecx, DWORD PTR [esi]
  0001f	c1 f9 02	 sar	 ecx, 2
  00022	3b c8		 cmp	 ecx, eax
  00024	73 50		 jae	 SHORT $LN3@reserve

; 750  : 			{	// not enough room, reallocate
; 751  : 			pointer _Ptr = this->_Alval.allocate(_Count);

  00026	53		 push	 ebx
  00027	57		 push	 edi
  00028	50		 push	 eax
  00029	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002c	e8 00 00 00 00	 call	 ?allocate@?$allocator@PAU_MAPSVR_DATA@@@std@@QAEPAPAU_MAPSVR_DATA@@I@Z ; std::allocator<_MAPSVR_DATA *>::allocate

; 752  : 
; 753  : 			_TRY_BEGIN
; 754  : 			_Umove(this->_Myfirst, this->_Mylast, _Ptr);

  00031	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00034	8b d8		 mov	 ebx, eax
  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	2b d0		 sub	 edx, eax
  0003a	c1 fa 02	 sar	 edx, 2
  0003d	03 d2		 add	 edx, edx
  0003f	03 d2		 add	 edx, edx
  00041	52		 push	 edx
  00042	50		 push	 eax
  00043	53		 push	 ebx
  00044	e8 00 00 00 00	 call	 _memmove

; 755  : 			_CATCH_ALL
; 756  : 			this->_Alval.deallocate(_Ptr, _Count);
; 757  : 			_RERAISE;
; 758  : 			_CATCH_END
; 759  : 
; 760  : 			size_type _Size = size();

  00049	8b 06		 mov	 eax, DWORD PTR [esi]
  0004b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004e	2b f8		 sub	 edi, eax
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
  00053	c1 ff 02	 sar	 edi, 2

; 761  : 			if (this->_Myfirst != 0)

  00056	85 c0		 test	 eax, eax
  00058	74 09		 je	 SHORT $LN37@reserve

; 762  : 				{	// destroy and deallocate old array
; 763  : 				_Destroy(this->_Myfirst, this->_Mylast);
; 764  : 				this->_Alval.deallocate(this->_Myfirst,
; 765  : 					this->_Myend - this->_Myfirst);

  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00060	83 c4 04	 add	 esp, 4
$LN37@reserve:

; 766  : 				}
; 767  : 
; 768  : 			this->_Orphan_all();
; 769  : 			this->_Myend = _Ptr + _Count;

  00063	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]

; 770  : 			this->_Mylast = _Ptr + _Size;

  00066	8d 14 bb	 lea	 edx, DWORD PTR [ebx+edi*4]
  00069	8d 0c 83	 lea	 ecx, DWORD PTR [ebx+eax*4]
  0006c	5f		 pop	 edi

; 771  : 			this->_Myfirst = _Ptr;

  0006d	89 1e		 mov	 DWORD PTR [esi], ebx
  0006f	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00072	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00075	5b		 pop	 ebx
$LN3@reserve:
  00076	5e		 pop	 esi

; 772  : 			}
; 773  : 		}

  00077	5d		 pop	 ebp
  00078	c2 04 00	 ret	 4
$LN42@reserve:
?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv795 = -12						; size = 4
__Erasednode$ = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  0000a	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00013	74 0a		 je	 SHORT $LN40@erase

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  0001a	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN295@erase:
$LN40@erase:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001f	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00022	89 5d f8	 mov	 DWORD PTR __Erasednode$[ebp], ebx
  00025	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  0002a	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0002c	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00030	74 05		 je	 SHORT $LN39@erase

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00032	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00035	eb 17		 jmp	 SHORT $LN291@erase
$LN39@erase:
  00037	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0003a	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003e	74 04		 je	 SHORT $LN37@erase

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00040	8b f9		 mov	 edi, ecx

; 1218 : 		else

  00042	eb 0a		 jmp	 SHORT $LN291@erase
$LN37@erase:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00044	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00047	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  0004a	3b c3		 cmp	 eax, ebx
  0004c	75 72		 jne	 SHORT $LN35@erase
$LN291@erase:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004e	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  00052	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00055	75 03		 jne	 SHORT $LN34@erase

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00057	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00060	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  00063	75 05		 jne	 SHORT $LN33@erase

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00065	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00068	eb 0b		 jmp	 SHORT $LN30@erase
$LN33@erase:
  0006a	39 1e		 cmp	 DWORD PTR [esi], ebx
  0006c	75 04		 jne	 SHORT $LN31@erase

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006e	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  00070	eb 03		 jmp	 SHORT $LN30@erase
$LN31@erase:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  00072	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00075	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00078	39 18		 cmp	 DWORD PTR [eax], ebx
  0007a	75 1b		 jne	 SHORT $LN29@erase

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  0007c	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  00080	74 04		 je	 SHORT $LN43@erase
  00082	8b c6		 mov	 eax, esi
  00084	eb 0c		 jmp	 SHORT $LN44@erase
$LN43@erase:
  00086	57		 push	 edi
  00087	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Min
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	83 c4 04	 add	 esp, 4
$LN44@erase:
  00092	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00095	89 02		 mov	 DWORD PTR [edx], eax
$LN29@erase:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00097	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0009a	89 4d f4	 mov	 DWORD PTR tv795[ebp], ecx
  0009d	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  000a0	75 78		 jne	 SHORT $LN165@erase

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000a2	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000a6	74 07		 je	 SHORT $LN45@erase
  000a8	8b c6		 mov	 eax, esi
  000aa	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000ad	eb 6b		 jmp	 SHORT $LN165@erase
$LN45@erase:

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000af	57		 push	 edi
  000b0	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Max
  000b5	8b 4d f4	 mov	 ecx, DWORD PTR tv795[ebp]
  000b8	83 c4 04	 add	 esp, 4
  000bb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN165@erase
$LN35@erase:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000c5	89 08		 mov	 DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase
$LN26@erase:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e1	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e7	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN25@erase:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase
$LN23@erase:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase
$LN21@erase:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0010b	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00111	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00114	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00117	88 4b 14	 mov	 BYTE PTR [ebx+20], cl
$LN165@erase:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0011d	b3 01		 mov	 bl, 1
  0011f	38 58 14	 cmp	 BYTE PTR [eax+20], bl
  00122	0f 85 fa 00 00
	00		 jne	 $LN19@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00128	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	3b 7a 04	 cmp	 edi, DWORD PTR [edx+4]
  00131	0f 84 e8 00 00
	00		 je	 $LN16@erase
$LL18@erase:
  00137	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  0013a	0f 85 df 00 00
	00		 jne	 $LN16@erase

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00140	8b 06		 mov	 eax, DWORD PTR [esi]
  00142	3b f8		 cmp	 edi, eax
  00144	75 65		 jne	 SHORT $LN15@erase

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00146	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  00149	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  0014d	75 13		 jne	 SHORT $LN14@erase

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  0014f	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00152	56		 push	 esi
  00153	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00157	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  0015c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0015f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN14@erase:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00162	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00166	75 74		 jne	 SHORT $LN293@erase

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00168	8b 10		 mov	 edx, DWORD PTR [eax]
  0016a	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0016d	75 08		 jne	 SHORT $LN11@erase
  0016f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00172	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  00175	74 61		 je	 SHORT $LN294@erase
$LN11@erase:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  00177	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0017a	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0017d	75 15		 jne	 SHORT $LN9@erase

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  0017f	8b 10		 mov	 edx, DWORD PTR [eax]
  00181	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00184	50		 push	 eax
  00185	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00189	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  0018e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN9@erase:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00194	8a 56 14	 mov	 dl, BYTE PTR [esi+20]
  00197	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0019a	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  0019d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1323 : 						_Lrotate(_Fixnodeparent);

  001a0	56		 push	 esi
  001a1	88 58 14	 mov	 BYTE PTR [eax+20], bl
  001a4	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a9	eb 74		 jmp	 SHORT $LN16@erase
$LN15@erase:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001ab	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  001af	75 12		 jne	 SHORT $LN7@erase

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001b1	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001b4	56		 push	 esi
  001b5	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN7@erase:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001c3	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001c7	75 13		 jne	 SHORT $LN293@erase

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c9	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001cc	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001cf	75 1e		 jne	 SHORT $LN4@erase
  001d1	8b 10		 mov	 edx, DWORD PTR [eax]
  001d3	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001d6	75 17		 jne	 SHORT $LN4@erase
$LN294@erase:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d8	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$LN293@erase:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001dc	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1344 : 						_Fixnode = _Fixnodeparent;

  001df	8b fe		 mov	 edi, esi
  001e1	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  001e4	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e7	0f 85 4a ff ff
	ff		 jne	 $LL18@erase

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001ed	eb 30		 jmp	 SHORT $LN16@erase
$LN4@erase:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ef	8b 10		 mov	 edx, DWORD PTR [eax]
  001f1	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001f4	75 15		 jne	 SHORT $LN2@erase

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001f9	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fc	50		 push	 eax
  001fd	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00201	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00206	8b 06		 mov	 eax, DWORD PTR [esi]
  00208	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN2@erase:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020b	8a 56 14	 mov	 dl, BYTE PTR [esi+20]
  0020e	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

  00211	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  00214	8b 00		 mov	 eax, DWORD PTR [eax]

; 1359 : 						_Rrotate(_Fixnodeparent);

  00216	56		 push	 esi
  00217	88 58 14	 mov	 BYTE PTR [eax+20], bl
  0021a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Rrotate
$LN16@erase:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  0021f	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$LN19@erase:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00222	8b 4d f8	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  00225	51		 push	 ecx
  00226	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00231	83 c4 04	 add	 esp, 4
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00245	89 10		 mov	 DWORD PTR [eax], edx

; 1376 : 		}

  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c2 08 00	 ret	 8
$LN292@erase:
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	3d fe ff ff 1f	 cmp	 eax, 536870910		; 1ffffffeH
  0000b	72 16		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  0000d	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00016	83 c4 04	 add	 esp, 4

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN377@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;

  00023	40		 inc	 eax
  00024	53		 push	 ebx
  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1642 : 		_Newnode->_Parent = _Wherenode;

  00028	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0002b	57		 push	 edi
  0002c	8b 7d 14	 mov	 edi, DWORD PTR __Newnode$[ebp]
  0002f	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00032	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00035	32 db		 xor	 bl, bl
  00037	3b c2		 cmp	 eax, edx
  00039	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003b	89 7a 04	 mov	 DWORD PTR [edx+4], edi

; 1647 : 			_Lmost() = _Newnode;

  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 3a		 mov	 DWORD PTR [edx], edi

; 1648 : 			_Rmost() = _Newnode;

  00043	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00046	89 78 08	 mov	 DWORD PTR [eax+8], edi
  00049	eb 20		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004b	38 5d 0c	 cmp	 BYTE PTR __Addleft$[ebp], bl
  0004e	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00050	89 38		 mov	 DWORD PTR [eax], edi

; 1653 : 			if (_Wherenode == _Lmost())

  00052	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00055	3b 02		 cmp	 eax, DWORD PTR [edx]
  00057	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  00059	89 3a		 mov	 DWORD PTR [edx], edi

; 1655 : 			}
; 1656 : 		else

  0005b	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005d	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 1659 : 			if (_Wherenode == _Rmost())

  00060	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00063	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00066	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00068	89 7a 08	 mov	 DWORD PTR [edx+8], edi
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006b	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0006e	8b c7		 mov	 eax, edi
  00070	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  00073	0f 85 97 01 00
	00		 jne	 $LN9@Insert
  00079	56		 push	 esi
  0007a	8d 9b 00 00 00
	00		 npad	 6
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00080	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00083	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00086	3b 16		 cmp	 edx, DWORD PTR [esi]
  00088	0f 85 c1 00 00
	00		 jne	 $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  0008e	8b 76 08	 mov	 esi, DWORD PTR [esi+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00091	38 5e 14	 cmp	 BYTE PTR [esi+20], bl
  00094	75 1c		 jne	 SHORT $LN7@Insert

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  00096	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

  0009a	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

  0009e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a1	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000a4	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000a7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000aa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1677 : 					}
; 1678 : 				else

  000ad	e9 51 01 00 00	 jmp	 $LN316@Insert
$LN7@Insert:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  000b2	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  000b5	75 3a		 jne	 SHORT $LN111@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  000b7	8b c2		 mov	 eax, edx

; 1683 : 						_Lrotate(_Pnode);

  000b9	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000bc	8b 32		 mov	 esi, DWORD PTR [edx]
  000be	89 70 08	 mov	 DWORD PTR [eax+8], esi
  000c1	8b 32		 mov	 esi, DWORD PTR [edx]
  000c3	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  000c6	75 03		 jne	 SHORT $LN110@Insert
  000c8	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN110@Insert:
  000cb	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000ce	89 72 04	 mov	 DWORD PTR [edx+4], esi
  000d1	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000d4	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000d7	75 05		 jne	 SHORT $LN109@Insert
  000d9	89 56 04	 mov	 DWORD PTR [esi+4], edx
  000dc	eb 0e		 jmp	 SHORT $LN106@Insert
$LN109@Insert:
  000de	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000e1	3b 06		 cmp	 eax, DWORD PTR [esi]
  000e3	75 04		 jne	 SHORT $LN107@Insert
  000e5	89 16		 mov	 DWORD PTR [esi], edx
  000e7	eb 03		 jmp	 SHORT $LN106@Insert
$LN107@Insert:
  000e9	89 56 08	 mov	 DWORD PTR [esi+8], edx
$LN106@Insert:
  000ec	89 02		 mov	 DWORD PTR [edx], eax
  000ee	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN111@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000f1	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000f4	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000f8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000fb	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000fe	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  00101	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00104	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00107	8b 32		 mov	 esi, DWORD PTR [edx]
  00109	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0010c	89 3a		 mov	 DWORD PTR [edx], edi
  0010e	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00111	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00114	75 03		 jne	 SHORT $LN173@Insert
  00116	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN173@Insert:
  00119	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  0011c	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  0011f	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00122	3b 57 04	 cmp	 edx, DWORD PTR [edi+4]
  00125	75 0b		 jne	 SHORT $LN172@Insert
  00127	89 77 04	 mov	 DWORD PTR [edi+4], esi
  0012a	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  0012d	e9 cb 00 00 00	 jmp	 $LN376@Insert

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN172@Insert:
  00132	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  00135	3b 57 08	 cmp	 edx, DWORD PTR [edi+8]
  00138	75 0b		 jne	 SHORT $LN170@Insert
  0013a	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0013d	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00140	e9 b8 00 00 00	 jmp	 $LN376@Insert

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN170@Insert:
  00145	89 37		 mov	 DWORD PTR [edi], esi
  00147	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  0014a	e9 ae 00 00 00	 jmp	 $LN376@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  0014f	8b 36		 mov	 esi, DWORD PTR [esi]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  00151	38 5e 14	 cmp	 BYTE PTR [esi+20], bl
  00154	75 1c		 jne	 SHORT $LN3@Insert

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  00156	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  0015a	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  0015e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00161	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00164	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  00167	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0016a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  0016d	e9 91 00 00 00	 jmp	 $LN316@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  00172	3b 02		 cmp	 eax, DWORD PTR [edx]
  00174	75 3c		 jne	 SHORT $LN253@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  00176	8b c2		 mov	 eax, edx

; 1709 : 						_Rrotate(_Pnode);

  00178	8b 10		 mov	 edx, DWORD PTR [eax]
  0017a	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  0017d	89 30		 mov	 DWORD PTR [eax], esi
  0017f	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00182	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00185	75 03		 jne	 SHORT $LN252@Insert
  00187	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN252@Insert:
  0018a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0018d	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00190	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00193	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00196	75 05		 jne	 SHORT $LN251@Insert
  00198	89 56 04	 mov	 DWORD PTR [esi+4], edx
  0019b	eb 0f		 jmp	 SHORT $LN248@Insert
$LN251@Insert:
  0019d	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  001a0	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  001a3	75 05		 jne	 SHORT $LN249@Insert
  001a5	89 56 08	 mov	 DWORD PTR [esi+8], edx
  001a8	eb 02		 jmp	 SHORT $LN248@Insert
$LN249@Insert:
  001aa	89 16		 mov	 DWORD PTR [esi], edx
$LN248@Insert:
  001ac	89 42 08	 mov	 DWORD PTR [edx+8], eax
  001af	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN253@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  001b2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001b5	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  001b9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001bc	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001bf	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  001c2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001c5	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001c8	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  001cb	8b 3e		 mov	 edi, DWORD PTR [esi]
  001cd	89 7a 08	 mov	 DWORD PTR [edx+8], edi
  001d0	8b 3e		 mov	 edi, DWORD PTR [esi]
  001d2	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  001d5	75 03		 jne	 SHORT $LN315@Insert
  001d7	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN315@Insert:
  001da	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  001dd	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  001e0	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  001e3	3b 57 04	 cmp	 edx, DWORD PTR [edi+4]
  001e6	75 05		 jne	 SHORT $LN314@Insert
  001e8	89 77 04	 mov	 DWORD PTR [edi+4], esi
  001eb	eb 0e		 jmp	 SHORT $LN311@Insert
$LN314@Insert:
  001ed	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  001f0	3b 17		 cmp	 edx, DWORD PTR [edi]
  001f2	75 04		 jne	 SHORT $LN312@Insert
  001f4	89 37		 mov	 DWORD PTR [edi], esi
  001f6	eb 03		 jmp	 SHORT $LN311@Insert
$LN312@Insert:
  001f8	89 77 08	 mov	 DWORD PTR [edi+8], esi
$LN311@Insert:
  001fb	89 16		 mov	 DWORD PTR [esi], edx
$LN376@Insert:
  001fd	8b 7d 14	 mov	 edi, DWORD PTR __Newnode$[ebp]
  00200	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN316@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00203	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00206	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  00209	0f 84 71 fe ff
	ff		 je	 $LL10@Insert
  0020f	5e		 pop	 esi
$LN9@Insert:

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00210	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00213	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1720 : 		return (iterator(_Newnode, this));

  00216	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00219	89 38		 mov	 DWORD PTR [eax], edi
  0021b	5f		 pop	 edi
  0021c	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1
  00220	5b		 pop	 ebx

; 1721 : 		}

  00221	5d		 pop	 ebp
  00222	c2 10 00	 ret	 16			; 00000010H
$LN375@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val@3
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val@3:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::end
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00005	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00008	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  0000b	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  0000f	8b f3		 mov	 esi, ebx
  00011	75 1e		 jne	 SHORT $LN7@clear
$LL9@clear:
  00013	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00016	51		 push	 ecx
  00017	8b cf		 mov	 ecx, edi
  00019	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase
  0001e	8b 36		 mov	 esi, DWORD PTR [esi]
  00020	53		 push	 ebx
  00021	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00026	83 c4 04	 add	 esp, 4
  00029	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  0002d	8b de		 mov	 ebx, esi
  0002f	74 e2		 je	 SHORT $LL9@clear
$LN7@clear:

; 1416 : 		_Root() = this->_Myhead;

  00031	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00034	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00037	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003a	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0003c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003f	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1419 : 		this->_Mysize = 0;

  00042	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 1420 : 		}

  0004c	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear
_TEXT	ENDS
PUBLIC	??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 411  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 412  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 413  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++

; 414  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 415  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 704  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 705  : 		_Tidy();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN8@vector
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000f	83 c4 04	 add	 esp, 4
$LN8@vector:
  00012	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00026	5e		 pop	 esi

; 706  : 		}

  00027	c3		 ret	 0
??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z
_TEXT	SEGMENT
$T159689 = -16						; size = 12
$T159624 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	6a 18		 push	 24			; 00000018H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 28		 je	 SHORT $LN20@Tree
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 14	 mov	 BYTE PTR [ecx+20], al
  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 15	 mov	 BYTE PTR [edx+21], al

; 699  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8

; 698  : 		{	// construct empty tree

$LN20@Tree:
  00046	8d 45 fc	 lea	 eax, DWORD PTR $T159624[ebp]
  00049	50		 push	 eax
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR $T159689[ebp]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T159624[ebp], 0
  00054	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T159689[ebp]
  00061	51		 push	 ecx
  00062	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T159689[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@Tree:
$LN42@Tree:
  0006e	cc		 int	 3
??0?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound
; Function compile flags: /Ogtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0000d	75 19		 jne	 SHORT $LN36@lower_boun
  0000f	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL6@lower_boun:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	7d 05		 jge	 SHORT $LN4@lower_boun
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $LN3@lower_boun
$LN4@lower_boun:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$LN3@lower_boun:
  00022	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00026	74 ec		 je	 SHORT $LL6@lower_boun
$LN36@lower_boun:
  00028	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002b	89 08		 mov	 DWORD PTR [eax], ecx

; 1451 : 		}

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve, COMDAT
; _this$ = ecx

; 1290 : 		{	// ensure room for _Count new elements, grow exponentially

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1291 : 		size_type _Size = size();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1292 : 		if (max_size() - _Count < _Size)

  00006	8b 55 08	 mov	 edx, DWORD PTR __Count$[ebp]
  00009	56		 push	 esi
  0000a	8b 31		 mov	 esi, DWORD PTR [ecx]
  0000c	57		 push	 edi
  0000d	2b c6		 sub	 eax, esi
  0000f	bf ff ff ff 3f	 mov	 edi, 1073741823		; 3fffffffH
  00014	c1 f8 02	 sar	 eax, 2
  00017	2b fa		 sub	 edi, edx
  00019	3b f8		 cmp	 edi, eax
  0001b	73 0a		 jae	 SHORT $LN4@Reserve

; 1293 : 			_Xlen();

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00022	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN34@Reserve:
$LN4@Reserve:

; 1294 : 		else if ((_Size += _Count) <= capacity())

  00027	03 c2		 add	 eax, edx
  00029	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002c	2b d6		 sub	 edx, esi
  0002e	c1 fa 02	 sar	 edx, 2
  00031	3b c2		 cmp	 eax, edx
  00033	76 21		 jbe	 SHORT $LN1@Reserve

; 1295 : 			;
; 1296 : 		else
; 1297 : 			reserve(_Grow_to(_Size));

  00035	8b f2		 mov	 esi, edx
  00037	d1 ee		 shr	 esi, 1
  00039	bf ff ff ff 3f	 mov	 edi, 1073741823		; 3fffffffH
  0003e	2b fe		 sub	 edi, esi
  00040	3b fa		 cmp	 edi, edx
  00042	73 04		 jae	 SHORT $LN23@Reserve
  00044	33 d2		 xor	 edx, edx
  00046	eb 02		 jmp	 SHORT $LN24@Reserve
$LN23@Reserve:
  00048	03 d6		 add	 edx, esi
$LN24@Reserve:
  0004a	3b d0		 cmp	 edx, eax
  0004c	73 02		 jae	 SHORT $LN20@Reserve
  0004e	8b d0		 mov	 edx, eax
$LN20@Reserve:
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::reserve
$LN1@Reserve:
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi

; 1298 : 		}

  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN33@Reserve:
?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T159868 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00004	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00012	75 1c		 jne	 SHORT $LN97@erase@2
  00014	3b d0		 cmp	 edx, eax
  00016	75 18		 jne	 SHORT $LN97@erase@2

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::clear

; 1383 : 			return (begin());

  0001f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]

; 1389 : 			return (iterator(_First._Ptr, this));

  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00027	89 08		 mov	 DWORD PTR [eax], ecx
  00029	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
$LN97@erase@2:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00030	3b ca		 cmp	 ecx, edx
  00032	74 5e		 je	 SHORT $LN1@erase@2
$LL2@erase@2:

; 1388 : 				erase(_First++);

  00034	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00038	8b d1		 mov	 edx, ecx
  0003a	75 42		 jne	 SHORT $LN59@erase@2
  0003c	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0003f	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00043	75 1a		 jne	 SHORT $LN99@erase@2
  00045	8b c8		 mov	 ecx, eax
  00047	8b 01		 mov	 eax, DWORD PTR [ecx]
  00049	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0004d	75 0b		 jne	 SHORT $LN73@erase@2
  0004f	90		 npad	 1
$LL74@erase@2:
  00050	8b c8		 mov	 ecx, eax
  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00058	74 f6		 je	 SHORT $LL74@erase@2
$LN73@erase@2:
  0005a	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  0005d	eb 1f		 jmp	 SHORT $LN59@erase@2
$LN99@erase@2:
  0005f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00062	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00066	75 13		 jne	 SHORT $LN57@erase@2
$LL58@erase@2:
  00068	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0006b	75 0e		 jne	 SHORT $LN57@erase@2
  0006d	8b c8		 mov	 ecx, eax
  0006f	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  00072	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00075	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00079	74 ed		 je	 SHORT $LL58@erase@2
$LN57@erase@2:
  0007b	89 45 0c	 mov	 DWORD PTR __First$[ebp], eax
$LN59@erase@2:
  0007e	52		 push	 edx
  0007f	8d 55 fc	 lea	 edx, DWORD PTR $T159868[ebp]
  00082	52		 push	 edx
  00083	8b ce		 mov	 ecx, esi
  00085	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0008d	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00090	75 a2		 jne	 SHORT $LL2@erase@2
$LN1@erase@2:

; 1389 : 			return (iterator(_First._Ptr, this));

  00092	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00095	89 08		 mov	 DWORD PTR [eax], ecx
  00097	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert
; Function compile flags: /Ogtp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T160209 = 16						; size = 4
$T160207 = 16						; size = 4
__Where$156231 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00004	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00007	53		 push	 ebx
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0000d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00010	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00014	56		 push	 esi
  00015	8b f1		 mov	 esi, ecx
  00017	b1 01		 mov	 cl, 1
  00019	57		 push	 edi
  0001a	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  0001d	75 2d		 jne	 SHORT $LN11@Linsert
  0001f	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00022	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00026	8b f0		 mov	 esi, eax
  00028	74 08		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002a	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  0002d	0f 9d c1	 setge	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00030	eb 06		 jmp	 SHORT $LN146@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00032	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00035	0f 9c c1	 setl	 cl
$LN146@Linsert:
  00038	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003b	84 c9		 test	 cl, cl
  0003d	74 04		 je	 SHORT $LN15@Linsert
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
  00041	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00043	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00046	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0004a	74 d6		 je	 SHORT $LL12@Linsert
$LN11@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0004c	8b fe		 mov	 edi, esi
  0004e	89 7d 10	 mov	 DWORD PTR __Where$156231[ebp], edi

; 970  : 			if (!_Addleft)

  00051	84 c9		 test	 cl, cl
  00053	74 35		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00055	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  00058	8d 4d 10	 lea	 ecx, DWORD PTR $T160207[ebp]
  0005b	3b 30		 cmp	 esi, DWORD PTR [eax]
  0005d	75 20		 jne	 SHORT $LN4@Linsert
  0005f	52		 push	 edx
  00060	56		 push	 esi
  00061	6a 01		 push	 1
  00063	51		 push	 ecx
  00064	8b cb		 mov	 ecx, ebx
  00066	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	89 10		 mov	 DWORD PTR [eax], edx
  00074	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00078	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 0c 00	 ret	 12			; 0000000cH
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007f	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator--
  00084	8b 7d 10	 mov	 edi, DWORD PTR __Where$156231[ebp]
  00087	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  0008a	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008d	52		 push	 edx
  0008e	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00091	7d 24		 jge	 SHORT $LN2@Linsert
  00093	8b 4d fc	 mov	 ecx, DWORD PTR __Addleft$[ebp]
  00096	56		 push	 esi
  00097	51		 push	 ecx
  00098	8d 55 10	 lea	 edx, DWORD PTR $T160209[ebp]
  0009b	52		 push	 edx
  0009c	8b cb		 mov	 ecx, ebx
  0009e	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Insert
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	89 08		 mov	 DWORD PTR [eax], ecx
  000ac	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000b0	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  000b7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000bc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000bf	83 c4 04	 add	 esp, 4
  000c2	89 38		 mov	 DWORD PTR [eax], edi
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000ca	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
$T160584 = -12						; size = 12
$T160532 = 8						; size = 4
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	57		 push	 edi

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00008	6a 18		 push	 24			; 00000018H
  0000a	8b f9		 mov	 edi, ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	8b f0		 mov	 esi, eax
  00013	33 c0		 xor	 eax, eax
  00015	83 c4 04	 add	 esp, 4
  00018	3b f0		 cmp	 esi, eax
  0001a	74 33		 je	 SHORT $LN12@Buynode@2
  0001c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001f	89 0e		 mov	 DWORD PTR [esi], ecx
  00021	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00024	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0002a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0002d	66 89 46 14	 mov	 WORD PTR [esi+20], ax
  00031	52		 push	 edx
  00032	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00035	50		 push	 eax
  00036	83 c7 0d	 add	 edi, 13			; 0000000dH
  00039	57		 push	 edi
  0003a	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0003d	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@std@@U?$pair@$$CBHPAU_MAPSVR_DATA@@@2@U?$pair@HPAU_MAPSVR_DATA@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@0@PAU?$pair@$$CBHPAU_MAPSVR_DATA@@@0@$$QAU?$pair@HPAU_MAPSVR_DATA@@@0@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,std::pair<int const ,_MAPSVR_DATA *>,std::pair<int,_MAPSVR_DATA *> >
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
  00045	5f		 pop	 edi

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  00046	8b c6		 mov	 eax, esi
  00048	5e		 pop	 esi

; 599  : 		}

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

$LN12@Buynode@2:
  0004f	8d 4d 08	 lea	 ecx, DWORD PTR $T160532[ebp]
  00052	51		 push	 ecx
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T160584[ebp]
  00056	89 45 08	 mov	 DWORD PTR $T160532[ebp], eax
  00059	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0005e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00063	8d 55 f4	 lea	 edx, DWORD PTR $T160584[ebp]
  00066	52		 push	 edx
  00067	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T160584[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN44@Buynode@2:
$LN43@Buynode@2:
  00073	cc		 int	 3
??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	?Clear@CMapServerManager@@QAEXXZ		; CMapServerManager::Clear
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
;	COMDAT ?Clear@CMapServerManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv81 = -4						; size = 4
?Clear@CMapServerManager@@QAEXXZ PROC			; CMapServerManager::Clear, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	this->m_bMapDataLoadOk = FALSE;

  0000c	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00013	8d 71 08	 lea	 esi, DWORD PTR [ecx+8]
  00016	8d 99 08 af 00
	00		 lea	 ebx, DWORD PTR [ecx+44808]
  0001c	c7 45 fc 14 00
	00 00		 mov	 DWORD PTR tv81[ebp], 20	; 00000014H
$LL50@Clear@2:

; 68   : 	{
; 69   : 		this->m_iMAPSVR_GROUP_COUNT[iGROUP_COUNT] = 0;

  00023	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  00029	bf 14 00 00 00	 mov	 edi, 20			; 00000014H
  0002e	8b ff		 npad	 2
$LL3@Clear@2:

; 70   : 
; 71   : 		for ( int iSUB_GROUP_COUNT=0;iSUB_GROUP_COUNT<MAX_MAP_SUBGROUPS;iSUB_GROUP_COUNT++)
; 72   : 		{
; 73   : 			this->m_MAPSVR_DATA[iGROUP_COUNT][iSUB_GROUP_COUNT].Clear(1);

  00030	6a 01		 push	 1
  00032	8b ce		 mov	 ecx, esi
  00034	e8 00 00 00 00	 call	 ?Clear@_MAPSVR_DATA@@QAEXH@Z ; _MAPSVR_DATA::Clear
  00039	83 c6 70	 add	 esi, 112		; 00000070H
  0003c	4f		 dec	 edi
  0003d	75 f1		 jne	 SHORT $LL3@Clear@2

; 66   : 
; 67   : 	for ( int iGROUP_COUNT=0;iGROUP_COUNT<MAX_MAP_GROUPS;iGROUP_COUNT++)

  0003f	83 c3 04	 add	 ebx, 4
  00042	ff 4d fc	 dec	 DWORD PTR tv81[ebp]
  00045	75 dc		 jne	 SHORT $LL50@Clear@2

; 74   : 		}
; 75   : 	}
; 76   : 
; 77   : 	this->m_mapSVRCODE_MAP.clear();

  00047	8b 7d f8	 mov	 edi, DWORD PTR _this$[ebp]
  0004a	8b 87 5c af 00
	00		 mov	 eax, DWORD PTR [edi+44892]
  00050	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  00053	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  00057	8b f3		 mov	 esi, ebx
  00059	75 27		 jne	 SHORT $LN15@Clear@2
  0005b	eb 03 8d 49 00	 npad	 5
$LL17@Clear@2:
  00060	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00063	51		 push	 ecx
  00064	8d 8f 58 af 00
	00		 lea	 ecx, DWORD PTR [edi+44888]
  0006a	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Erase
  0006f	8b 36		 mov	 esi, DWORD PTR [esi]
  00071	53		 push	 ebx
  00072	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00077	83 c4 04	 add	 esp, 4
  0007a	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  0007e	8b de		 mov	 ebx, esi
  00080	74 de		 je	 SHORT $LL17@Clear@2
$LN15@Clear@2:
  00082	8b 87 5c af 00
	00		 mov	 eax, DWORD PTR [edi+44892]
  00088	89 40 04	 mov	 DWORD PTR [eax+4], eax
  0008b	8b 87 5c af 00
	00		 mov	 eax, DWORD PTR [edi+44892]
  00091	89 00		 mov	 DWORD PTR [eax], eax
  00093	8b 87 5c af 00
	00		 mov	 eax, DWORD PTR [edi+44892]
  00099	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0009c	c7 87 60 af 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+44896], 0
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx

; 78   : }

  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
?Clear@CMapServerManager@@QAEXXZ ENDP			; CMapServerManager::Clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
$T160741 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000a	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0000e	57		 push	 edi
  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00012	75 18		 jne	 SHORT $LN9@find
  00014	56		 push	 esi
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$LL10@find:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	7d 05		 jge	 SHORT $LN8@find
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $LN7@find
$LN8@find:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@find:
  00025	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00029	74 ec		 je	 SHORT $LL10@find
  0002b	5e		 pop	 esi
$LN9@find:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	89 55 0c	 mov	 DWORD PTR __Where$[ebp], edx
  00032	3b d0		 cmp	 edx, eax
  00034	74 18		 je	 SHORT $LN3@find
  00036	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00038	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003b	7c 11		 jl	 SHORT $LN3@find
  0003d	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00045	89 10		 mov	 DWORD PTR [eax], edx
  00047	5f		 pop	 edi

; 1429 : 		}

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
$LN3@find:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0004e	89 45 fc	 mov	 DWORD PTR $T160741[ebp], eax
  00051	8d 45 fc	 lea	 eax, DWORD PTR $T160741[ebp]
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00059	89 10		 mov	 DWORD PTR [eax], edx
  0005b	5f		 pop	 edi

; 1429 : 		}

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\vector
;	COMDAT ?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z PROC ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back, COMDAT
; _this$ = ecx

; 976  : 		{	// insert element at end

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 977  : 		if (_Inside(_STD addressof(_Val)))

  00006	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR __Val$[ebp]
  0000d	3b f8		 cmp	 edi, eax
  0000f	73 39		 jae	 SHORT $LN4@push_back
  00011	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00013	3b cf		 cmp	 ecx, edi
  00015	77 33		 ja	 SHORT $LN4@push_back

; 978  : 			{	// push back an element
; 979  : 			size_type _Idx = _STD addressof(_Val) - this->_Myfirst;

  00017	2b f9		 sub	 edi, ecx
  00019	c1 ff 02	 sar	 edi, 2

; 980  : 			if (this->_Mylast == this->_Myend)

  0001c	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0001f	75 09		 jne	 SHORT $LN3@push_back

; 981  : 				_Reserve(1);

  00021	6a 01		 push	 1
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
$LN3@push_back:

; 982  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 983  : 			_Cons_val(this->_Alval,
; 984  : 				this->_Mylast,
; 985  : 				this->_Myfirst[_Idx]);

  0002a	8b 06		 mov	 eax, DWORD PTR [esi]
  0002c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0002f	8d 0c b8	 lea	 ecx, DWORD PTR [eax+edi*4]
  00032	51		 push	 ecx
  00033	52		 push	 edx
  00034	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@AAPAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@AAPAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * &>

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00040	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  00046	5d		 pop	 ebp
  00047	c2 04 00	 ret	 4
$LN4@push_back:

; 986  : 			++this->_Mylast;
; 987  : 			}
; 988  : 		else
; 989  : 			{	// push back a non-element
; 990  : 			if (this->_Mylast == this->_Myend)

  0004a	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  0004d	75 09		 jne	 SHORT $LN1@push_back

; 991  : 				_Reserve(1);

  0004f	6a 01		 push	 1
  00051	8b ce		 mov	 ecx, esi
  00053	e8 00 00 00 00	 call	 ?_Reserve@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@IAEXI@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::_Reserve
$LN1@push_back:

; 992  : 			_Orphan_range(this->_Mylast, this->_Mylast);
; 993  : 			_Cons_val(this->_Alval,
; 994  : 				this->_Mylast,
; 995  : 				_Val);

  00058	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0005b	57		 push	 edi
  0005c	51		 push	 ecx
  0005d	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  00060	52		 push	 edx
  00061	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@PAU_MAPSVR_DATA@@@std@@PAU_MAPSVR_DATA@@ABQAU3@@std@@YAXAAV?$allocator@PAU_MAPSVR_DATA@@@0@PAPAU_MAPSVR_DATA@@ABQAU2@@Z ; std::_Cons_val<std::allocator<_MAPSVR_DATA *>,_MAPSVR_DATA *,_MAPSVR_DATA * const &>
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH

; 996  : 			++this->_Mylast;

  00069	83 46 04 04	 add	 DWORD PTR [esi+4], 4
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi

; 997  : 			}
; 998  : 		}

  0006f	5d		 pop	 ebp
  00070	c2 04 00	 ret	 4
?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z ENDP ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T160988 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T160988[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase

; 1867 : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >
; Function compile flags: /Ogtp
;	COMDAT ??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >, COMDAT
; _this$ = ecx

; 753  : 		_Pairib insert(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 754  : 		{	// try to insert node with value _Val, favoring right side
; 755  : 		return (_Linsert(this->_Buynode(_STD forward<_Valty>(_Val)),
; 756  : 			false));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
  00012	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00015	50		 push	 eax
  00016	57		 push	 edi
  00017	8b ce		 mov	 ecx, esi
  00019	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert
  0001e	8b c7		 mov	 eax, edi
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 757  : 		}

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
??$insert@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::insert<std::pair<int,_MAPSVR_DATA *> >
_TEXT	ENDS
PUBLIC	??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?LoadData@CMapServerManager@@QAEHPAD@Z		; CMapServerManager::LoadData
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	_fclose:PROC
EXTRN	?MsgBox@@YAXPADZZ:PROC				; MsgBox
EXTRN	_fopen:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__except_handler4:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	__local_unwind4:PROC
;	COMDAT ??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : File '
	DB	'Name Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : Map N'
	DB	'umber is out of bound (SVR:%d, MAP:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : lpMap'
	DB	'SvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d, OPT:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : lpMap'
	DB	'SvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServer'
	DB	'Mng] CMapServerManager::LoadData() - file load error : lpMapS'
	DB	'vrData->m_bIN_USE == FALSE (SVR:%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : lpMap'
	DB	'SvrData == NULL (SVR:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sSVR_'
	DB	'CODE wasn''t registered (SVR:%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sDEST'
	DB	'_SVR_CODE < -1 (SVR:%d, DEST_SVR:%d) - 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sSVR_'
	DB	'CODE < 0 (SVR:%d) - 2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : No Sp'
	DB	'ace to Save SvrInfo (SVR:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : Map S'
	DB	'erver Group Index (IDX:%d)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : No Ip'
	DB	'Address (SVR:%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : iInit'
	DB	'Setting Value:%d (SVR:%d) - 1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : sSVR_'
	DB	'CODE < 0 (SVR:%d) - 1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : This '
	DB	'GameServerCode (%d) doesn''t Exist at file ''%s'' != sSVR_COD'
	DB	'E', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@
CONST	SEGMENT
??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@ DB '[MapServe'
	DB	'rMng] CMapServerManager::LoadData() - file load error : fopen'
	DB	'() : %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__sehtable$?LoadData@CMapServerManager@@QAEHPAD@Z DD 0fffffffeH
	DD	00H
	DD	0ffffff98H
	DD	00H
	DD	0fffffffeH
	DD	00H
	DD	FLAT:$LN43@LoadData
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
xdata$x	ENDS
;	COMDAT ?LoadData@CMapServerManager@@QAEHPAD@Z
_TEXT	SEGMENT
_szIpAddr$154202 = -88					; size = 16
$T161085 = -72						; size = 8
$T161084 = -64						; size = 8
_type$154189 = -56					; size = 4
_it$154827 = -52					; size = 4
$T161086 = -48						; size = 4
tv646 = -44						; size = 4
tv644 = -44						; size = 4
tv590 = -44						; size = 4
_wMapNum$154806 = -44					; size = 2
tv423 = -44						; size = 4
_iInitSetVal$154201 = -44				; size = 4
tv737 = -40						; size = 4
tv735 = -40						; size = 4
_sDEST_SVR_CODE$154807 = -40				; size = 2
_wPortNum$154203 = -40					; size = 2
_it$154879 = -36					; size = 4
_sMAPSVR_GROUP$154200 = -36				; size = 2
_this$ = -32						; size = 4
tv740 = -26						; size = 2
tv649 = -26						; size = 2
tv641 = -26						; size = 2
__$SEHRec$ = -24					; size = 24
$T161090 = 8						; size = 4
_lpszFileName$ = 8					; size = 4
?LoadData@CMapServerManager@@QAEHPAD@Z PROC		; CMapServerManager::LoadData, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a fe		 push	 -2			; fffffffeH
  00005	68 00 00 00 00	 push	 OFFSET __sehtable$?LoadData@CMapServerManager@@QAEHPAD@Z
  0000a	68 00 00 00 00	 push	 OFFSET __except_handler4
  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00015	50		 push	 eax
  00016	83 ec 48	 sub	 esp, 72			; 00000048H
  00019	53		 push	 ebx
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	31 45 f8	 xor	 DWORD PTR __$SEHRec$[ebp+16], eax
  00024	33 c5		 xor	 eax, ebp
  00026	50		 push	 eax
  00027	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  0002a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00030	8b f1		 mov	 esi, ecx
  00032	89 75 e0	 mov	 DWORD PTR _this$[ebp], esi

; 83   : 	if ( (lpszFileName == NULL) || ( strcmp(lpszFileName, "")== 0 ) ) 

  00035	8b 7d 08	 mov	 edi, DWORD PTR _lpszFileName$[ebp]
  00038	85 ff		 test	 edi, edi
  0003a	0f 84 16 06 00
	00		 je	 $LN34@LoadData
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00045	8b c7		 mov	 eax, edi
$LL113@LoadData:
  00047	8a 10		 mov	 dl, BYTE PTR [eax]
  00049	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0004b	75 1a		 jne	 SHORT $LN114@LoadData
  0004d	84 d2		 test	 dl, dl
  0004f	74 12		 je	 SHORT $LN115@LoadData
  00051	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00054	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00057	75 0e		 jne	 SHORT $LN114@LoadData
  00059	83 c0 02	 add	 eax, 2
  0005c	83 c1 02	 add	 ecx, 2
  0005f	84 d2		 test	 dl, dl
  00061	75 e4		 jne	 SHORT $LL113@LoadData
$LN115@LoadData:
  00063	33 c0		 xor	 eax, eax
  00065	eb 05		 jmp	 SHORT $LN116@LoadData
$LN114@LoadData:
  00067	1b c0		 sbb	 eax, eax
  00069	83 d8 ff	 sbb	 eax, -1
$LN116@LoadData:
  0006c	85 c0		 test	 eax, eax
  0006e	0f 84 e2 05 00
	00		 je	 $LN34@LoadData

; 87   : 	}
; 88   : 
; 89   : 	EnterCriticalSection(&this->m_critSVRCODE_MAP);

  00074	8d 86 68 af 00
	00		 lea	 eax, DWORD PTR [esi+44904]
  0007a	50		 push	 eax
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 90   : 
; 91   : 	__try

  00081	9b		 fwait
  00082	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$SEHRec$[ebp+20], 0

; 92   : 	{
; 93   : 		this->Clear();

  00089	8b ce		 mov	 ecx, esi
  0008b	e8 00 00 00 00	 call	 ?Clear@CMapServerManager@@QAEXXZ ; CMapServerManager::Clear

; 94   : 
; 95   : 		SMDFile = fopen(lpszFileName, "r");

  00090	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 _fopen
  0009b	83 c4 08	 add	 esp, 8
  0009e	a3 00 00 00 00	 mov	 DWORD PTR _SMDFile, eax

; 96   : 
; 97   : 		if ( SMDFile == NULL )

  000a3	85 c0		 test	 eax, eax
  000a5	75 29		 jne	 SHORT $LL31@LoadData

; 98   : 		{
; 99   : 			MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : fopen() : %s",
; 100  : 				lpszFileName);

  000a7	57		 push	 edi
  000a8	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@CDDNPBHI@?$FLMapServerMng?$FN?5CMapServerManager@
$LN141@LoadData:
  000ad	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 101  : 
; 102  : 			return FALSE;

  000b2	6a fe		 push	 -2			; fffffffeH
  000b4	9b		 fwait
  000b5	8d 4d f0	 lea	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  000b8	51		 push	 ecx
  000b9	68 00 00 00 00	 push	 OFFSET ___security_cookie
  000be	e8 00 00 00 00	 call	 __local_unwind4
  000c3	83 c4 14	 add	 esp, 20			; 00000014H
  000c6	e9 98 05 00 00	 jmp	 $LN139@LoadData
  000cb	eb 03 8d 49 00	 npad	 5
$LL31@LoadData:

; 103  : 		}
; 104  : 
; 105  : 		int type = -1;
; 106  : 		SMDToken Token;
; 107  : 
; 108  : 		while ( true )
; 109  : 		{
; 110  : 			Token = GetToken();

  000d0	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 111  : 
; 112  : 			if ( Token == END )

  000d5	83 f8 02	 cmp	 eax, 2
  000d8	0f 85 ae 00 00
	00		 jne	 $LN29@LoadData

; 309  : 		}	// while ( true )
; 310  : 
; 311  : 		fclose(SMDFile);

  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _SMDFile
  000e4	52		 push	 edx
  000e5	e8 00 00 00 00	 call	 _fclose
  000ea	83 c4 04	 add	 esp, 4

; 312  : 
; 313  : 		std::map<int  ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(gGameServerCode);

  000ed	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  000f4	89 45 08	 mov	 DWORD PTR $T161090[ebp], eax
  000f7	8d 4d 08	 lea	 ecx, DWORD PTR $T161090[ebp]
  000fa	51		 push	 ecx
  000fb	8d 55 dc	 lea	 edx, DWORD PTR _it$154879[ebp]
  000fe	52		 push	 edx
  000ff	8d 8e 58 af 00
	00		 lea	 ecx, DWORD PTR [esi+44888]
  00105	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 314  : 
; 315  : 		if ( it != this->m_mapSVRCODE_MAP.end() )

  0010a	8b 4d dc	 mov	 ecx, DWORD PTR _it$154879[ebp]
  0010d	3b 8e 5c af 00
	00		 cmp	 ecx, DWORD PTR [esi+44892]
  00113	74 0b		 je	 SHORT $LN3@LoadData

; 316  : 		{
; 317  : 			this->m_lpThisMapSvrData = it->second;

  00115	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00118	89 86 80 af 00
	00		 mov	 DWORD PTR [esi+44928], eax

; 318  : 		}
; 319  : 		else

  0011e	eb 0a		 jmp	 SHORT $LN2@LoadData
$LN3@LoadData:

; 320  : 		{
; 321  : 			this->m_lpThisMapSvrData = NULL;

  00120	c7 86 80 af 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+44928], 0
$LN2@LoadData:

; 322  : 		}
; 323  : 
; 324  : 		if ( this->m_lpThisMapSvrData == NULL )

  0012a	83 be 80 af 00
	00 00		 cmp	 DWORD PTR [esi+44928], 0
  00131	75 2c		 jne	 SHORT $LN1@LoadData

; 325  : 		{
; 326  : 			MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : This GameServerCode (%d) doesn't Exist at file '%s' != sSVR_CODE",
; 327  : 				gGameServerCode, lpszFileName);

  00133	57		 push	 edi
  00134	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0013b	51		 push	 ecx
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0IC@BIPGFAJD@?$FLMapServerMng?$FN?5CMapServerManager@
$LN143@LoadData:
  00141	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 328  : 
; 329  : 			return FALSE;

  00146	6a fe		 push	 -2			; fffffffeH
  00148	9b		 fwait
  00149	8d 55 f0	 lea	 edx, DWORD PTR __$SEHRec$[ebp+8]
  0014c	52		 push	 edx
  0014d	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00152	e8 00 00 00 00	 call	 __local_unwind4
  00157	83 c4 18	 add	 esp, 24			; 00000018H
  0015a	e9 04 05 00 00	 jmp	 $LN139@LoadData
$LN1@LoadData:

; 330  : 		}
; 331  : 
; 332  : 		this->m_bMapDataLoadOk = TRUE;

  0015f	c7 46 04 01 00
	00 00		 mov	 DWORD PTR [esi+4], 1

; 333  : 	}
; 334  : 	__finally

  00166	9b		 fwait
  00167	c7 45 fc fe ff
	ff ff		 mov	 DWORD PTR __$SEHRec$[ebp+20], -2 ; fffffffeH
  0016e	e8 d5 04 00 00	 call	 $LN45@LoadData
$LN46@LoadData:

; 337  : 	}
; 338  : 
; 339  : 	return TRUE;

  00173	b8 01 00 00 00	 mov	 eax, 1

; 340  : }

  00178	8b 4d f0	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  0017b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00182	59		 pop	 ecx
  00183	5f		 pop	 edi
  00184	5e		 pop	 esi
  00185	5b		 pop	 ebx
  00186	8b e5		 mov	 esp, ebp
  00188	5d		 pop	 ebp
  00189	c2 04 00	 ret	 4
$LN29@LoadData:

; 113  : 				break;
; 114  : 
; 115  : 			type = TokenNumber;

  0018c	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00192	e8 00 00 00 00	 call	 __ftol2_sse
  00197	89 45 c8	 mov	 DWORD PTR _type$154189[ebp], eax
  0019a	8d 9b 00 00 00
	00		 npad	 6
$LL28@LoadData:

; 116  : 
; 117  : 			while ( true )
; 118  : 			{
; 119  : 				if ( type == 0 )

  001a0	85 c0		 test	 eax, eax
  001a2	0f 85 69 02 00
	00		 jne	 $LN26@LoadData

; 120  : 				{
; 121  : 					short sSVR_CODE = -1;
; 122  : 					short sMAPSVR_GROUP = -1;

  001a8	c7 45 dc ff ff
	ff ff		 mov	 DWORD PTR _sMAPSVR_GROUP$154200[ebp], -1

; 123  : 					int iInitSetVal = 1;
; 124  : 					char szIpAddr[16]={0};

  001af	88 45 a8	 mov	 BYTE PTR _szIpAddr$154202[ebp], al

; 125  : 					WORD wPortNum = 0;
; 126  : 					
; 127  : 					Token = GetToken();

  001b2	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 128  : 
; 129  : 					if ( !strcmp("end", TokenString))

  001b7	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  001bc	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
$LL117@LoadData:
  001c1	8a 10		 mov	 dl, BYTE PTR [eax]
  001c3	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001c5	75 1a		 jne	 SHORT $LN118@LoadData
  001c7	84 d2		 test	 dl, dl
  001c9	74 12		 je	 SHORT $LN119@LoadData
  001cb	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  001ce	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001d1	75 0e		 jne	 SHORT $LN118@LoadData
  001d3	83 c0 02	 add	 eax, 2
  001d6	83 c1 02	 add	 ecx, 2
  001d9	84 d2		 test	 dl, dl
  001db	75 e4		 jne	 SHORT $LL117@LoadData
$LN119@LoadData:
  001dd	33 c0		 xor	 eax, eax
  001df	eb 05		 jmp	 SHORT $LN120@LoadData
$LN118@LoadData:
  001e1	1b c0		 sbb	 eax, eax
  001e3	83 d8 ff	 sbb	 eax, -1
$LN120@LoadData:
  001e6	85 c0		 test	 eax, eax
  001e8	0f 84 6e 02 00
	00		 je	 $LN134@LoadData

; 130  : 						break;
; 131  : 
; 132  : 					sSVR_CODE = TokenNumber;

  001ee	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  001f4	e8 00 00 00 00	 call	 __ftol2_sse
  001f9	0f b7 d8	 movzx	 ebx, ax

; 133  : 
; 134  : 					Token = GetToken();

  001fc	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 135  : 					sMAPSVR_GROUP = TokenNumber;

  00201	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  00207	e8 00 00 00 00	 call	 __ftol2_sse
  0020c	0f b7 c0	 movzx	 eax, ax
  0020f	89 45 dc	 mov	 DWORD PTR _sMAPSVR_GROUP$154200[ebp], eax

; 136  : 
; 137  : 					Token = GetToken();

  00212	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 138  : 					iInitSetVal = TokenNumber;

  00217	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0021d	e8 00 00 00 00	 call	 __ftol2_sse
  00222	8b f0		 mov	 esi, eax
  00224	89 75 d4	 mov	 DWORD PTR _iInitSetVal$154201[ebp], esi

; 139  : 
; 140  : 					Token = GetToken();

  00227	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 141  : 					memcpy(szIpAddr, &TokenString[1], 16);

  0022c	8b 0d 01 00 00
	00		 mov	 ecx, DWORD PTR _TokenString+1
  00232	89 4d a8	 mov	 DWORD PTR _szIpAddr$154202[ebp], ecx
  00235	8b 15 05 00 00
	00		 mov	 edx, DWORD PTR _TokenString+5
  0023b	89 55 ac	 mov	 DWORD PTR _szIpAddr$154202[ebp+4], edx
  0023e	a1 09 00 00 00	 mov	 eax, DWORD PTR _TokenString+9
  00243	89 45 b0	 mov	 DWORD PTR _szIpAddr$154202[ebp+8], eax
  00246	8b 0d 0d 00 00
	00		 mov	 ecx, DWORD PTR _TokenString+13
  0024c	89 4d b4	 mov	 DWORD PTR _szIpAddr$154202[ebp+12], ecx

; 142  : 					szIpAddr[15] =0;

  0024f	c6 45 b7 00	 mov	 BYTE PTR _szIpAddr$154202[ebp+15], 0

; 143  : 
; 144  : 					Token = GetToken();

  00253	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 145  : 					wPortNum = TokenNumber;

  00258	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0025e	d9 7d e6	 fnstcw	 WORD PTR tv740[ebp]
  00261	0f b7 45 e6	 movzx	 eax, WORD PTR tv740[ebp]
  00265	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0026a	89 45 d8	 mov	 DWORD PTR tv737[ebp], eax
  0026d	d9 6d d8	 fldcw	 WORD PTR tv737[ebp]
  00270	db 5d d8	 fistp	 DWORD PTR tv735[ebp]
  00273	d9 6d e6	 fldcw	 WORD PTR tv740[ebp]
  00276	66 8b 55 d8	 mov	 dx, WORD PTR tv735[ebp]
  0027a	0f b7 c2	 movzx	 eax, dx
  0027d	89 45 d8	 mov	 DWORD PTR _wPortNum$154203[ebp], eax

; 146  : 
; 147  : 					if ( sSVR_CODE < 0 )

  00280	66 85 db	 test	 bx, bx
  00283	79 27		 jns	 SHORT $LN24@LoadData

; 148  : 					{
; 149  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sSVR_CODE < 0 (SVR:%d) - 1",
; 150  : 							sSVR_CODE);

  00285	0f bf cb	 movsx	 ecx, bx
  00288	51		 push	 ecx
  00289	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@FPCKBNHE@?$FLMapServerMng?$FN?5CMapServerManager@
$LN144@LoadData:
  0028e	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 151  : 
; 152  : 						return FALSE;

  00293	6a fe		 push	 -2			; fffffffeH
  00295	9b		 fwait
  00296	8d 55 f0	 lea	 edx, DWORD PTR __$SEHRec$[ebp+8]
  00299	52		 push	 edx
  0029a	68 00 00 00 00	 push	 OFFSET ___security_cookie
  0029f	e8 00 00 00 00	 call	 __local_unwind4
  002a4	83 c4 14	 add	 esp, 20			; 00000014H
  002a7	e9 b7 03 00 00	 jmp	 $LN139@LoadData
$LN24@LoadData:

; 153  : 					}
; 154  : 
; 155  : 					if ( iInitSetVal != -1 && iInitSetVal != 0 && iInitSetVal != 1 )

  002ac	83 fe ff	 cmp	 esi, -1
  002af	74 31		 je	 SHORT $LN23@LoadData
  002b1	85 f6		 test	 esi, esi
  002b3	74 2d		 je	 SHORT $LN23@LoadData
  002b5	83 fe 01	 cmp	 esi, 1
  002b8	74 28		 je	 SHORT $LN23@LoadData

; 156  : 					{
; 157  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : iInitSetting Value:%d (SVR:%d) - 1",
; 158  : 							iInitSetVal, sSVR_CODE);

  002ba	0f bf c3	 movsx	 eax, bx
  002bd	50		 push	 eax
  002be	56		 push	 esi
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_0GE@MEENNMEP@?$FLMapServerMng?$FN?5CMapServerManager@
  002c4	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 159  : 
; 160  : 						return FALSE;

  002c9	6a fe		 push	 -2			; fffffffeH
  002cb	9b		 fwait
  002cc	8d 4d f0	 lea	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  002cf	51		 push	 ecx
  002d0	68 00 00 00 00	 push	 OFFSET ___security_cookie
  002d5	e8 00 00 00 00	 call	 __local_unwind4
  002da	83 c4 18	 add	 esp, 24			; 00000018H
  002dd	e9 81 03 00 00	 jmp	 $LN139@LoadData
$LN23@LoadData:

; 161  : 					}
; 162  : 
; 163  : 					if ( !strcmp(szIpAddr, ""))

  002e2	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
  002e7	8d 45 a8	 lea	 eax, DWORD PTR _szIpAddr$154202[ebp]
  002ea	8d 9b 00 00 00
	00		 npad	 6
$LL121@LoadData:
  002f0	8a 10		 mov	 dl, BYTE PTR [eax]
  002f2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  002f4	75 1a		 jne	 SHORT $LN122@LoadData
  002f6	84 d2		 test	 dl, dl
  002f8	74 12		 je	 SHORT $LN123@LoadData
  002fa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  002fd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00300	75 0e		 jne	 SHORT $LN122@LoadData
  00302	83 c0 02	 add	 eax, 2
  00305	83 c1 02	 add	 ecx, 2
  00308	84 d2		 test	 dl, dl
  0030a	75 e4		 jne	 SHORT $LL121@LoadData
$LN123@LoadData:
  0030c	33 c0		 xor	 eax, eax
  0030e	eb 05		 jmp	 SHORT $LN124@LoadData
$LN122@LoadData:
  00310	1b c0		 sbb	 eax, eax
  00312	83 d8 ff	 sbb	 eax, -1
$LN124@LoadData:
  00315	85 c0		 test	 eax, eax
  00317	75 27		 jne	 SHORT $LN22@LoadData

; 164  : 					{
; 165  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : No IpAddress (SVR:%d)",
; 166  : 							sSVR_CODE);

  00319	0f bf d3	 movsx	 edx, bx
  0031c	52		 push	 edx
  0031d	68 00 00 00 00	 push	 OFFSET ??_C@_0FH@IKIILNPP@?$FLMapServerMng?$FN?5CMapServerManager@
  00322	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 167  : 
; 168  : 						return FALSE;

  00327	6a fe		 push	 -2			; fffffffeH
  00329	9b		 fwait
  0032a	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  0032d	50		 push	 eax
  0032e	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00333	e8 00 00 00 00	 call	 __local_unwind4
  00338	83 c4 14	 add	 esp, 20			; 00000014H
  0033b	e9 23 03 00 00	 jmp	 $LN139@LoadData
$LN22@LoadData:

; 169  : 					}
; 170  : 
; 171  : 					if ( CHECK_LIMIT(sMAPSVR_GROUP, MAX_MAP_GROUPS) == FALSE )

  00340	8b 45 dc	 mov	 eax, DWORD PTR _sMAPSVR_GROUP$154200[ebp]
  00343	66 85 c0	 test	 ax, ax
  00346	78 0d		 js	 SHORT $LN110@LoadData
  00348	33 c9		 xor	 ecx, ecx
  0034a	66 83 f8 13	 cmp	 ax, 19			; 00000013H
  0034e	0f 9e c1	 setle	 cl
  00351	85 c9		 test	 ecx, ecx
  00353	75 0e		 jne	 SHORT $LN21@LoadData
$LN110@LoadData:

; 172  : 					{
; 173  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : Map Server Group Index (IDX:%d)",
; 174  : 							sMAPSVR_GROUP);

  00355	0f bf c8	 movsx	 ecx, ax
  00358	51		 push	 ecx
  00359	68 00 00 00 00	 push	 OFFSET ??_C@_0GB@OFMELGHA@?$FLMapServerMng?$FN?5CMapServerManager@

; 175  : 
; 176  : 						return FALSE;

  0035e	e9 2b ff ff ff	 jmp	 $LN144@LoadData
$LN21@LoadData:

; 177  : 					}
; 178  : 
; 179  : 					if ( this->m_iMAPSVR_GROUP_COUNT[sMAPSVR_GROUP] >= MAX_MAP_SUBGROUPS )

  00363	0f bf f8	 movsx	 edi, ax
  00366	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00369	8b 84 b8 08 af
	00 00		 mov	 eax, DWORD PTR [eax+edi*4+44808]
  00370	83 f8 14	 cmp	 eax, 20			; 00000014H
  00373	7c 0e		 jl	 SHORT $LN20@LoadData

; 180  : 					{
; 181  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : No Space to Save SvrInfo (SVR:%d)",
; 182  : 							sSVR_CODE);

  00375	0f bf cb	 movsx	 ecx, bx
  00378	51		 push	 ecx
  00379	68 00 00 00 00	 push	 OFFSET ??_C@_0GD@GJEAEGDB@?$FLMapServerMng?$FN?5CMapServerManager@

; 183  : 
; 184  : 						return FALSE;

  0037e	e9 0b ff ff ff	 jmp	 $LN144@LoadData
$LN20@LoadData:

; 185  : 					}
; 186  : 
; 187  : 					_MAPSVR_DATA * lpMapSvrData = NULL;
; 188  : 
; 189  : 					lpMapSvrData= &this->m_MAPSVR_DATA[sMAPSVR_GROUP][this->m_iMAPSVR_GROUP_COUNT[sMAPSVR_GROUP]];

  00383	8d 0c bf	 lea	 ecx, DWORD PTR [edi+edi*4]
  00386	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00389	6b d2 70	 imul	 edx, 112		; 00000070H
  0038c	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0038f	8d 74 02 08	 lea	 esi, DWORD PTR [edx+eax+8]

; 190  : 
; 191  : 					lpMapSvrData->Clear(iInitSetVal);

  00393	8b 4d d4	 mov	 ecx, DWORD PTR _iInitSetVal$154201[ebp]
  00396	51		 push	 ecx
  00397	8b ce		 mov	 ecx, esi
  00399	e8 00 00 00 00	 call	 ?Clear@_MAPSVR_DATA@@QAEXH@Z ; _MAPSVR_DATA::Clear

; 192  : 					lpMapSvrData->m_bIN_USE = TRUE;

  0039e	c7 46 04 01 00
	00 00		 mov	 DWORD PTR [esi+4], 1

; 193  : 					lpMapSvrData->m_sSVR_CODE = sSVR_CODE;

  003a5	66 89 5e 0a	 mov	 WORD PTR [esi+10], bx

; 194  : 					lpMapSvrData->m_btMAPSVR_GROUP = sMAPSVR_GROUP;

  003a9	8a 55 dc	 mov	 dl, BYTE PTR _sMAPSVR_GROUP$154200[ebp]
  003ac	88 56 08	 mov	 BYTE PTR [esi+8], dl

; 195  : 					lpMapSvrData->m_wPORT = wPortNum;

  003af	66 8b 45 d8	 mov	 ax, WORD PTR _wPortNum$154203[ebp]
  003b3	66 89 46 1c	 mov	 WORD PTR [esi+28], ax

; 196  : 					memcpy(lpMapSvrData->m_cIPADDR, szIpAddr, 16);

  003b7	8b 4d a8	 mov	 ecx, DWORD PTR _szIpAddr$154202[ebp]
  003ba	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  003bd	8b 55 ac	 mov	 edx, DWORD PTR _szIpAddr$154202[ebp+4]
  003c0	89 56 10	 mov	 DWORD PTR [esi+16], edx
  003c3	8b 45 b0	 mov	 eax, DWORD PTR _szIpAddr$154202[ebp+8]
  003c6	89 46 14	 mov	 DWORD PTR [esi+20], eax
  003c9	8b 4d b4	 mov	 ecx, DWORD PTR _szIpAddr$154202[ebp+12]
  003cc	89 4e 18	 mov	 DWORD PTR [esi+24], ecx

; 197  : 					lpMapSvrData->m_cIPADDR[15] = 0;

  003cf	c6 46 1b 00	 mov	 BYTE PTR [esi+27], 0

; 198  : 					
; 199  : 					this->m_mapSVRCODE_MAP.insert(std::pair<int,_MAPSVR_DATA *>(sSVR_CODE, lpMapSvrData));

  003d3	0f bf d3	 movsx	 edx, bx
  003d6	89 55 c0	 mov	 DWORD PTR $T161084[ebp], edx
  003d9	89 75 c4	 mov	 DWORD PTR $T161084[ebp+4], esi
  003dc	8b 5d e0	 mov	 ebx, DWORD PTR _this$[ebp]
  003df	6a 00		 push	 0
  003e1	8d 45 c0	 lea	 eax, DWORD PTR $T161084[ebp]
  003e4	50		 push	 eax
  003e5	8d 8b 58 af 00
	00		 lea	 ecx, DWORD PTR [ebx+44888]
  003eb	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@HPAU_MAPSVR_DATA@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@HPAU_MAPSVR_DATA@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Buynode<std::pair<int,_MAPSVR_DATA *> >
  003f0	50		 push	 eax
  003f1	8d 4d b8	 lea	 ecx, DWORD PTR $T161085[ebp]
  003f4	51		 push	 ecx
  003f5	8d 8b 58 af 00
	00		 lea	 ecx, DWORD PTR [ebx+44888]
  003fb	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::_Linsert

; 200  : 					this->m_iMAPSVR_GROUP_COUNT[sMAPSVR_GROUP]++;

  00400	ff 84 bb 08 af
	00 00		 inc	 DWORD PTR [ebx+edi*4+44808]

; 305  : 							break;
; 306  : 					}
; 307  : 				}	// if type
; 308  : 			}	// while ( true )

  00407	8b 45 c8	 mov	 eax, DWORD PTR _type$154189[ebp]
  0040a	8b f3		 mov	 esi, ebx
  0040c	e9 8f fd ff ff	 jmp	 $LL28@LoadData
$LN26@LoadData:

; 201  : 				}
; 202  : 				else if ( type == 1 )

  00411	83 f8 01	 cmp	 eax, 1
  00414	0f 85 20 02 00
	00		 jne	 $LN7@LoadData

; 203  : 				{
; 204  : 					short sSVR_CODE = -1;
; 205  : 					BYTE btNotMoveOption = 0;
; 206  : 					WORD wMapNum = 0;
; 207  : 					short sDEST_SVR_CODE = -1;
; 208  : 					_MAPSVR_DATA * lpMapSvrData = NULL;
; 209  : 
; 210  : 					Token = GetToken();

  0041a	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 211  : 
; 212  : 					if ( !strcmp("end", TokenString))

  0041f	b9 00 00 00 00	 mov	 ecx, OFFSET _TokenString
  00424	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03JBJLGPFL@end?$AA@
  00429	8d a4 24 00 00
	00 00		 npad	 7
$LL125@LoadData:
  00430	8a 10		 mov	 dl, BYTE PTR [eax]
  00432	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00434	75 1a		 jne	 SHORT $LN126@LoadData
  00436	84 d2		 test	 dl, dl
  00438	74 12		 je	 SHORT $LN127@LoadData
  0043a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0043d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00440	75 0e		 jne	 SHORT $LN126@LoadData
  00442	83 c0 02	 add	 eax, 2
  00445	83 c1 02	 add	 ecx, 2
  00448	84 d2		 test	 dl, dl
  0044a	75 e4		 jne	 SHORT $LL125@LoadData
$LN127@LoadData:
  0044c	33 c0		 xor	 eax, eax
  0044e	eb 05		 jmp	 SHORT $LN128@LoadData
$LN126@LoadData:
  00450	1b c0		 sbb	 eax, eax
  00452	83 d8 ff	 sbb	 eax, -1
$LN128@LoadData:
  00455	85 c0		 test	 eax, eax
  00457	75 0b		 jne	 SHORT $LN17@LoadData
  00459	8b 75 e0	 mov	 esi, DWORD PTR _this$[ebp]
$LN134@LoadData:

; 305  : 							break;
; 306  : 					}
; 307  : 				}	// if type
; 308  : 			}	// while ( true )

  0045c	8b 7d 08	 mov	 edi, DWORD PTR _lpszFileName$[ebp]
  0045f	e9 6c fc ff ff	 jmp	 $LL31@LoadData
$LN17@LoadData:

; 213  : 						break;
; 214  : 
; 215  : 					sSVR_CODE = TokenNumber;

  00464	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0046a	e8 00 00 00 00	 call	 __ftol2_sse
  0046f	0f b7 f0	 movzx	 esi, ax

; 216  : 
; 217  : 					Token = GetToken();

  00472	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 218  : 					btNotMoveOption = TokenNumber;

  00477	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  0047d	d9 7d e6	 fnstcw	 WORD PTR tv649[ebp]
  00480	0f b7 45 e6	 movzx	 eax, WORD PTR tv649[ebp]
  00484	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00489	89 45 d4	 mov	 DWORD PTR tv646[ebp], eax
  0048c	d9 6d d4	 fldcw	 WORD PTR tv646[ebp]
  0048f	db 5d d4	 fistp	 DWORD PTR tv644[ebp]
  00492	d9 6d e6	 fldcw	 WORD PTR tv649[ebp]
  00495	8a 5d d4	 mov	 bl, BYTE PTR tv644[ebp]

; 219  : 
; 220  : 					Token = GetToken();

  00498	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 221  : 					wMapNum = TokenNumber;

  0049d	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004a3	d9 7d e6	 fnstcw	 WORD PTR tv641[ebp]
  004a6	0f b7 45 e6	 movzx	 eax, WORD PTR tv641[ebp]
  004aa	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  004af	89 45 d4	 mov	 DWORD PTR tv590[ebp], eax
  004b2	d9 6d d4	 fldcw	 WORD PTR tv590[ebp]
  004b5	db 5d d4	 fistp	 DWORD PTR tv423[ebp]
  004b8	d9 6d e6	 fldcw	 WORD PTR tv641[ebp]
  004bb	66 8b 55 d4	 mov	 dx, WORD PTR tv423[ebp]
  004bf	0f b7 c2	 movzx	 eax, dx
  004c2	89 45 d4	 mov	 DWORD PTR _wMapNum$154806[ebp], eax

; 222  : 
; 223  : 					Token = GetToken();

  004c5	e8 00 00 00 00	 call	 ?GetToken@@YA?AW4SMDToken@@XZ ; GetToken

; 224  : 					sDEST_SVR_CODE = TokenNumber;

  004ca	d9 05 00 00 00
	00		 fld	 DWORD PTR _TokenNumber
  004d0	e8 00 00 00 00	 call	 __ftol2_sse
  004d5	0f b7 c0	 movzx	 eax, ax
  004d8	89 45 d8	 mov	 DWORD PTR _sDEST_SVR_CODE$154807[ebp], eax

; 225  : 
; 226  : 					if ( sSVR_CODE < 0 )

  004db	66 85 f6	 test	 si, si
  004de	79 0e		 jns	 SHORT $LN16@LoadData

; 227  : 					{
; 228  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sSVR_CODE < 0 (SVR:%d) - 2",
; 229  : 							sSVR_CODE);

  004e0	0f bf ce	 movsx	 ecx, si
  004e3	51		 push	 ecx
  004e4	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@HEAHEOLH@?$FLMapServerMng?$FN?5CMapServerManager@

; 230  : 
; 231  : 						return FALSE;

  004e9	e9 a0 fd ff ff	 jmp	 $LN144@LoadData
$LN16@LoadData:

; 232  : 					}
; 233  : 
; 234  : 					if ( sDEST_SVR_CODE < -2 )

  004ee	66 83 f8 fe	 cmp	 ax, -2			; fffffffeH
  004f2	7d 10		 jge	 SHORT $LN15@LoadData

; 235  : 					{
; 236  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sDEST_SVR_CODE < -1 (SVR:%d, DEST_SVR:%d) - 2",
; 237  : 							sSVR_CODE, sDEST_SVR_CODE);

  004f4	98		 cwde
  004f5	50		 push	 eax
  004f6	0f bf ce	 movsx	 ecx, si
  004f9	51		 push	 ecx
  004fa	68 00 00 00 00	 push	 OFFSET ??_C@_0GP@JAAIOOFD@?$FLMapServerMng?$FN?5CMapServerManager@

; 238  : 
; 239  : 						return FALSE;

  004ff	e9 3d fc ff ff	 jmp	 $LN143@LoadData
$LN15@LoadData:

; 240  : 					}
; 241  : 
; 242  : 					std::map<int  ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sSVR_CODE);

  00504	0f bf fe	 movsx	 edi, si
  00507	89 7d d0	 mov	 DWORD PTR $T161086[ebp], edi
  0050a	8d 45 d0	 lea	 eax, DWORD PTR $T161086[ebp]
  0050d	50		 push	 eax
  0050e	8d 4d cc	 lea	 ecx, DWORD PTR _it$154827[ebp]
  00511	51		 push	 ecx
  00512	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00515	81 c1 58 af 00
	00		 add	 ecx, 44888		; 0000af58H
  0051b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 243  : 
; 244  : 					if ( it == this->m_mapSVRCODE_MAP.end() )

  00520	8b 55 e0	 mov	 edx, DWORD PTR _this$[ebp]
  00523	8b 4d cc	 mov	 ecx, DWORD PTR _it$154827[ebp]
  00526	3b 8a 5c af 00
	00		 cmp	 ecx, DWORD PTR [edx+44892]
  0052c	75 24		 jne	 SHORT $LN14@LoadData

; 245  : 					{
; 246  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : sSVR_CODE wasn't registered (SVR:%d)",
; 247  : 							sSVR_CODE);

  0052e	57		 push	 edi
  0052f	68 00 00 00 00	 push	 OFFSET ??_C@_0GG@ONBCFDCN@?$FLMapServerMng?$FN?5CMapServerManager@
  00534	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 248  : 
; 249  : 						return FALSE;

  00539	6a fe		 push	 -2			; fffffffeH
  0053b	9b		 fwait
  0053c	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  0053f	50		 push	 eax

; 151  : 
; 152  : 						return FALSE;

  00540	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00545	e8 00 00 00 00	 call	 __local_unwind4
  0054a	83 c4 14	 add	 esp, 20			; 00000014H
  0054d	e9 11 01 00 00	 jmp	 $LN139@LoadData
$LN14@LoadData:

; 250  : 					}
; 251  : 
; 252  : 					lpMapSvrData = it->second;

  00552	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]

; 253  : 
; 254  : 					if ( lpMapSvrData == NULL )

  00555	85 d2		 test	 edx, edx
  00557	75 0b		 jne	 SHORT $LN13@LoadData

; 255  : 					{
; 256  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData == NULL (SVR:%d)",
; 257  : 							sSVR_CODE);

  00559	57		 push	 edi
  0055a	68 00 00 00 00	 push	 OFFSET ??_C@_0FP@BNNDCEBC@?$FLMapServerMng?$FN?5CMapServerManager@

; 258  : 
; 259  : 						return FALSE;

  0055f	e9 49 fb ff ff	 jmp	 $LN141@LoadData
$LN13@LoadData:

; 260  : 					}
; 261  : 
; 262  : 					if ( lpMapSvrData->m_bIN_USE == FALSE )

  00564	83 7a 04 00	 cmp	 DWORD PTR [edx+4], 0
  00568	75 24		 jne	 SHORT $LN12@LoadData

; 263  : 					{
; 264  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_bIN_USE == FALSE (SVR:%d)",
; 265  : 							sSVR_CODE);

  0056a	57		 push	 edi
  0056b	68 00 00 00 00	 push	 OFFSET ??_C@_0GL@LAJNEJB@?$FLMapServerMng?$FN?5CMapServerManager@
  00570	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 266  : 
; 267  : 						return FALSE;

  00575	6a fe		 push	 -2			; fffffffeH
  00577	9b		 fwait
  00578	8d 55 f0	 lea	 edx, DWORD PTR __$SEHRec$[ebp+8]
  0057b	52		 push	 edx

; 101  : 
; 102  : 			return FALSE;

  0057c	68 00 00 00 00	 push	 OFFSET ___security_cookie
  00581	e8 00 00 00 00	 call	 __local_unwind4
  00586	83 c4 14	 add	 esp, 20			; 00000014H
  00589	e9 d5 00 00 00	 jmp	 $LN139@LoadData
$LN12@LoadData:

; 268  : 					}
; 269  : 
; 270  : 					if ( lpMapSvrData->m_sSVR_CODE != sSVR_CODE )

  0058e	66 39 72 0a	 cmp	 WORD PTR [edx+10], si
  00592	74 24		 je	 SHORT $LN11@LoadData

; 271  : 					{
; 272  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d)",
; 273  : 							sSVR_CODE);

  00594	57		 push	 edi
  00595	68 00 00 00 00	 push	 OFFSET ??_C@_0HB@PMNAKCMJ@?$FLMapServerMng?$FN?5CMapServerManager@
  0059a	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox

; 274  : 
; 275  : 						return FALSE;

  0059f	6a fe		 push	 -2			; fffffffeH
  005a1	9b		 fwait
  005a2	8d 45 f0	 lea	 eax, DWORD PTR __$SEHRec$[ebp+8]
  005a5	50		 push	 eax

; 101  : 
; 102  : 			return FALSE;

  005a6	68 00 00 00 00	 push	 OFFSET ___security_cookie
  005ab	e8 00 00 00 00	 call	 __local_unwind4
  005b0	83 c4 14	 add	 esp, 20			; 00000014H
  005b3	e9 ab 00 00 00	 jmp	 $LN139@LoadData
$LN11@LoadData:

; 276  : 					}
; 277  : 
; 278  : 					if ( btNotMoveOption != 0 && btNotMoveOption != 1 )

  005b8	84 db		 test	 bl, bl
  005ba	74 14		 je	 SHORT $LN10@LoadData
  005bc	80 fb 01	 cmp	 bl, 1
  005bf	74 0f		 je	 SHORT $LN10@LoadData

; 279  : 					{
; 280  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d, OPT:%d)",
; 281  : 							sSVR_CODE, btNotMoveOption);

  005c1	0f b6 cb	 movzx	 ecx, bl
  005c4	51		 push	 ecx
  005c5	57		 push	 edi
  005c6	68 00 00 00 00	 push	 OFFSET ??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@

; 282  : 
; 283  : 						return FALSE;

  005cb	e9 71 fb ff ff	 jmp	 $LN143@LoadData
$LN10@LoadData:

; 284  : 					}
; 285  : 
; 286  : 					if ( CHECK_LIMIT(wMapNum, MAX_NUMBER_MAP) == FALSE )

  005d0	b8 27 00 00 00	 mov	 eax, 39			; 00000027H
  005d5	8b 75 d4	 mov	 esi, DWORD PTR _wMapNum$154806[ebp]
  005d8	66 3b c6	 cmp	 ax, si
  005db	1b c0		 sbb	 eax, eax
  005dd	40		 inc	 eax
  005de	75 0f		 jne	 SHORT $LN9@LoadData

; 287  : 					{
; 288  : 						MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : Map Number is out of bound (SVR:%d, MAP:%d)",
; 289  : 							sSVR_CODE, wMapNum);

  005e0	0f b7 ce	 movzx	 ecx, si
  005e3	51		 push	 ecx
  005e4	57		 push	 edi
  005e5	68 00 00 00 00	 push	 OFFSET ??_C@_0GN@OFPCNONA@?$FLMapServerMng?$FN?5CMapServerManager@

; 290  : 
; 291  : 						return FALSE;

  005ea	e9 52 fb ff ff	 jmp	 $LN143@LoadData
$LN9@LoadData:

; 292  : 					}
; 293  : 
; 294  : 					switch ( btNotMoveOption )

  005ef	0f b6 cb	 movzx	 ecx, bl
  005f2	8b c1		 mov	 eax, ecx
  005f4	83 e8 00	 sub	 eax, 0
  005f7	74 35		 je	 SHORT $LN6@LoadData
  005f9	48		 dec	 eax
  005fa	74 1a		 je	 SHORT $LN5@LoadData

; 301  : 							break;
; 302  : 						default:
; 303  : 							MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : lpMapSvrData->m_sSVR_CODE != sSVR_CODE (SVR:%d, OPT:%d)",
; 304  : 								sSVR_CODE, btNotMoveOption);

  005fc	51		 push	 ecx
  005fd	57		 push	 edi
  005fe	68 00 00 00 00	 push	 OFFSET ??_C@_0HJ@HNGNAGOE@?$FLMapServerMng?$FN?5CMapServerManager@
  00603	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00608	83 c4 0c	 add	 esp, 12			; 0000000cH

; 305  : 							break;
; 306  : 					}
; 307  : 				}	// if type
; 308  : 			}	// while ( true )

  0060b	8b 45 c8	 mov	 eax, DWORD PTR _type$154189[ebp]
  0060e	8b 75 e0	 mov	 esi, DWORD PTR _this$[ebp]
  00611	e9 8a fb ff ff	 jmp	 $LL28@LoadData
$LN5@LoadData:

; 298  : 							break;
; 299  : 						case 1:
; 300  : 							lpMapSvrData->m_sMAP_MOVE[wMapNum] = -3;

  00616	b9 fd ff ff ff	 mov	 ecx, -3			; fffffffdH

; 295  : 					{
; 296  : 						case 0:
; 297  : 							lpMapSvrData->m_sMAP_MOVE[wMapNum] = sDEST_SVR_CODE;

  0061b	0f b7 c6	 movzx	 eax, si
  0061e	66 89 4c 42 1e	 mov	 WORD PTR [edx+eax*2+30], cx

; 305  : 							break;
; 306  : 					}
; 307  : 				}	// if type
; 308  : 			}	// while ( true )

  00623	8b 45 c8	 mov	 eax, DWORD PTR _type$154189[ebp]
  00626	8b 75 e0	 mov	 esi, DWORD PTR _this$[ebp]
  00629	e9 72 fb ff ff	 jmp	 $LL28@LoadData
$LN6@LoadData:

; 295  : 					{
; 296  : 						case 0:
; 297  : 							lpMapSvrData->m_sMAP_MOVE[wMapNum] = sDEST_SVR_CODE;

  0062e	66 8b 4d d8	 mov	 cx, WORD PTR _sDEST_SVR_CODE$154807[ebp]
  00632	0f b7 c6	 movzx	 eax, si
  00635	66 89 4c 42 1e	 mov	 WORD PTR [edx+eax*2+30], cx
$LN7@LoadData:

; 305  : 							break;
; 306  : 					}
; 307  : 				}	// if type
; 308  : 			}	// while ( true )

  0063a	8b 45 c8	 mov	 eax, DWORD PTR _type$154189[ebp]
  0063d	8b 75 e0	 mov	 esi, DWORD PTR _this$[ebp]
  00640	e9 5b fb ff ff	 jmp	 $LL28@LoadData
$LN43@LoadData:
$LN146@LoadData:

; 333  : 	}
; 334  : 	__finally

  00645	8b 75 e0	 mov	 esi, DWORD PTR _this$[ebp]
$LN45@LoadData:

; 335  : 	{
; 336  : 		LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  00648	81 c6 68 af 00
	00		 add	 esi, 44904		; 0000af68H
  0064e	56		 push	 esi
  0064f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
$LN44@LoadData:
$LN138@LoadData:
  00655	c3		 ret	 0
$LN34@LoadData:

; 84   : 	{
; 85   : 		MsgBox("[MapServerMng] CMapServerManager::LoadData() - file load error : File Name Error");

  00656	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@JDAKAEIH@?$FLMapServerMng?$FN?5CMapServerManager@
  0065b	e8 00 00 00 00	 call	 ?MsgBox@@YAXPADZZ	; MsgBox
  00660	83 c4 04	 add	 esp, 4
$LN139@LoadData:

; 86   : 		return FALSE;

  00663	33 c0		 xor	 eax, eax

; 340  : }

  00665	8b 4d f0	 mov	 ecx, DWORD PTR __$SEHRec$[ebp+8]
  00668	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0066f	59		 pop	 ecx
  00670	5f		 pop	 edi
  00671	5e		 pop	 esi
  00672	5b		 pop	 ebx
  00673	8b e5		 mov	 esp, ebp
  00675	5d		 pop	 ebp
  00676	c2 04 00	 ret	 4
?LoadData@CMapServerManager@@QAEHPAD@Z ENDP		; CMapServerManager::LoadData
_TEXT	ENDS
PUBLIC	??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ ; `string'
PUBLIC	?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z	; CMapServerManager::CheckMoveMapSvr
EXTRN	_rand:PROC
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT ??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	SEGMENT
??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] :'
	DB	' MAP-%d / SVR-%d (State Map:%d X:%d Y:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - Unknown MapMove Info [%s][%s]'
	DB	' : MAP-%d / INFO-%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] :'
	DB	' MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - lpMapSvrData->m_bIN_USE == FA'
	DB	'LSE [%s][%s] : %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - m_lpThisMapSvrData == NULL [%'
	DB	's][%s] : %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
CONST	SEGMENT
??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@ DB '[Ma'
	DB	'pServerMng] CheckMoveMapSvr() - Map Index doesn''t exist [%s]'
	DB	'[%s] : %d', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z$0
__ehfuncinfo$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
xdata$x	ENDS
;	COMDAT ?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
_TEXT	SEGMENT
_vtMapSvrData$155283 = -40				; size = 16
_sMAP_MOVE_INFO$ = -24					; size = 2
$T161325 = -24						; size = 4
$T161320 = -24						; size = 4
$T161329 = -20						; size = 4
_it$155327 = -20					; size = 4
_it$154933 = -20					; size = 4
tv1275 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iIndex$ = 8						; size = 4
_iMAP_NUM$ = 12						; size = 4
_it$155376 = 16						; size = 4
_it$155348 = 16						; size = 4
_it$155297 = 16						; size = 4
_sSVR_CODE_BEFORE$ = 16					; size = 2
?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z PROC	; CMapServerManager::CheckMoveMapSvr, COMDAT
; _this$ = ecx

; 374  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 375  : 	if ( this->m_bMapDataLoadOk == FALSE )

  0002a	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0

; 376  : 		return gGameServerCode;

  0002e	0f 84 ff 04 00
	00		 je	 $LN269@CheckMoveM

; 377  : 
; 378  : 	if ( !gObjIsConnected(iIndex))

  00034	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  00037	57		 push	 edi
  00038	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0003d	83 c4 04	 add	 esp, 4
  00040	85 c0		 test	 eax, eax

; 379  : 		return gGameServerCode;

  00042	0f 84 eb 04 00
	00		 je	 $LN269@CheckMoveM

; 380  : 
; 381  : 	if ( !MapNumberCheck(iMAP_NUM))

  00048	8b 5d 0c	 mov	 ebx, DWORD PTR _iMAP_NUM$[ebp]
  0004b	53		 push	 ebx
  0004c	e8 00 00 00 00	 call	 ?MapNumberCheck@@YAHH@Z	; MapNumberCheck
  00051	83 c4 04	 add	 esp, 4
  00054	85 c0		 test	 eax, eax
  00056	75 2b		 jne	 SHORT $LN37@CheckMoveM

; 382  : 	{
; 383  : 		LogAdd(LOG_RED,  "[MapServerMng] CheckMoveMapSvr() - Map Index doesn't exist [%s][%s] : %d",
; 384  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM);

  00058	8b c7		 mov	 eax, edi
  0005a	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00060	53		 push	 ebx
  00061	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  00067	51		 push	 ecx
  00068	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@EFCOMEEG@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  00074	6a 01		 push	 1
  00076	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0007b	83 c4 14	 add	 esp, 20			; 00000014H

; 385  : 
; 386  : 		return gGameServerCode;

  0007e	e9 b0 04 00 00	 jmp	 $LN269@CheckMoveM
$LN37@CheckMoveM:

; 387  : 	}
; 388  : 
; 389  : 	_MAPSVR_DATA * lpMapSvrData = this->m_lpThisMapSvrData;

  00083	8b 86 80 af 00
	00		 mov	 eax, DWORD PTR [esi+44928]

; 390  : 
; 391  : 	if ( lpMapSvrData == NULL )

  00089	85 c0		 test	 eax, eax
  0008b	75 2b		 jne	 SHORT $LN36@CheckMoveM

; 392  : 	{
; 393  : 		LogAdd(LOG_RED,  "[MapServerMng] CheckMoveMapSvr() - m_lpThisMapSvrData == NULL [%s][%s] : %d",
; 394  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM);

  0008d	8b c7		 mov	 eax, edi
  0008f	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00095	53		 push	 ebx
  00096	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  0009c	51		 push	 ecx
  0009d	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  000a3	52		 push	 edx
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@BGAAFCHD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  000a9	6a 01		 push	 1
  000ab	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  000b0	83 c4 14	 add	 esp, 20			; 00000014H

; 395  : 
; 396  : 		return gGameServerCode;

  000b3	e9 7b 04 00 00	 jmp	 $LN269@CheckMoveM
$LN36@CheckMoveM:

; 397  : 	}
; 398  : 
; 399  : 	if ( lpMapSvrData->m_bIN_USE == FALSE )

  000b8	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  000bc	75 2b		 jne	 SHORT $LN35@CheckMoveM

; 400  : 	{
; 401  : 		LogAdd(LOG_RED,  "[MapServerMng] CheckMoveMapSvr() - lpMapSvrData->m_bIN_USE == FALSE [%s][%s] : %d",
; 402  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM);

  000be	8b c7		 mov	 eax, edi
  000c0	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  000c6	53		 push	 ebx
  000c7	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  000cd	51		 push	 ecx
  000ce	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  000d4	52		 push	 edx
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@MPBANOIK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  000da	6a 01		 push	 1
  000dc	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  000e1	83 c4 14	 add	 esp, 20			; 00000014H

; 403  : 
; 404  : 		return gGameServerCode;

  000e4	e9 4a 04 00 00	 jmp	 $LN269@CheckMoveM
$LN35@CheckMoveM:

; 405  : 	}
; 406  : 
; 407  : 	short sMAP_MOVE_INFO = lpMapSvrData->m_sMAP_MOVE[iMAP_NUM];

  000e9	0f b7 44 58 1e	 movzx	 eax, WORD PTR [eax+ebx*2+30]

; 408  : 
; 409  : 	switch ( sMAP_MOVE_INFO )

  000ee	0f bf f8	 movsx	 edi, ax
  000f1	89 45 e8	 mov	 DWORD PTR _sMAP_MOVE_INFO$[ebp], eax
  000f4	83 ff fd	 cmp	 edi, -3			; fffffffdH
  000f7	0f 84 ef 03 00
	00		 je	 $LN11@CheckMoveM
  000fd	83 ff fe	 cmp	 edi, -2			; fffffffeH
  00100	0f 84 d6 02 00
	00		 je	 $LN21@CheckMoveM
  00106	83 ff ff	 cmp	 edi, -1
  00109	0f 84 57 01 00
	00		 je	 $LN32@CheckMoveM

; 534  : 			break;
; 535  : 
; 536  : 		default:
; 537  : 			if ( sMAP_MOVE_INFO > -1 )

  0010f	66 83 f8 ff	 cmp	 ax, -1
  00113	0f 8e 20 01 00
	00		 jle	 $LN9@CheckMoveM

; 538  : 			{
; 539  : 				_MAPSVR_DATA * lpDestMapSvrData = NULL;
; 540  : 
; 541  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  00119	8d 86 68 af 00
	00		 lea	 eax, DWORD PTR [esi+44904]
  0011f	50		 push	 eax
  00120	33 db		 xor	 ebx, ebx
  00122	89 45 f0	 mov	 DWORD PTR tv1275[ebp], eax
  00125	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 542  : 
; 543  : 				std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sMAP_MOVE_INFO);

  0012b	8d 45 ec	 lea	 eax, DWORD PTR $T161329[ebp]
  0012e	50		 push	 eax
  0012f	8d 4d 10	 lea	 ecx, DWORD PTR _it$155376[ebp]
  00132	51		 push	 ecx
  00133	8d 8e 58 af 00
	00		 lea	 ecx, DWORD PTR [esi+44888]
  00139	89 7d ec	 mov	 DWORD PTR $T161329[ebp], edi
  0013c	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 544  : 
; 545  : 				if ( it != this->m_mapSVRCODE_MAP.end() )

  00141	8b 45 10	 mov	 eax, DWORD PTR _it$155376[ebp]
  00144	3b 86 5c af 00
	00		 cmp	 eax, DWORD PTR [esi+44892]
  0014a	74 03		 je	 SHORT $LN8@CheckMoveM

; 546  : 				{
; 547  : 					lpDestMapSvrData = it->second;

  0014c	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
$LN8@CheckMoveM:

; 548  : 				}
; 549  : 
; 550  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  0014f	8b 7d f0	 mov	 edi, DWORD PTR tv1275[ebp]
  00152	57		 push	 edi
  00153	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 551  : 
; 552  : 				if ( lpDestMapSvrData != NULL &&
; 553  : 					 lpDestMapSvrData->m_bIN_USE == TRUE &&
; 554  : 					 lpDestMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  00159	85 db		 test	 ebx, ebx
  0015b	74 29		 je	 SHORT $LN7@CheckMoveM
  0015d	83 7b 04 01	 cmp	 DWORD PTR [ebx+4], 1
  00161	75 23		 jne	 SHORT $LN7@CheckMoveM
  00163	8b 55 0c	 mov	 edx, DWORD PTR _iMAP_NUM$[ebp]
  00166	66 83 7c 53 1e
	fd		 cmp	 WORD PTR [ebx+edx*2+30], -3 ; fffffffdH
  0016c	75 18		 jne	 SHORT $LN7@CheckMoveM

; 555  : 				{
; 556  : 					return sMAP_MOVE_INFO;

  0016e	66 8b 45 e8	 mov	 ax, WORD PTR _sMAP_MOVE_INFO$[ebp]

; 592  : 			}
; 593  : 	}
; 594  : 
; 595  : 	return gGameServerCode;
; 596  : }

  00172	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00175	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0017c	59		 pop	 ecx
  0017d	5f		 pop	 edi
  0017e	5e		 pop	 esi
  0017f	5b		 pop	 ebx
  00180	8b e5		 mov	 esp, ebp
  00182	5d		 pop	 ebp
  00183	c2 0c 00	 ret	 12			; 0000000cH
$LN7@CheckMoveM:

; 557  : 				}
; 558  : 
; 559  : 				short sDestServerCode = -1;
; 560  : 
; 561  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  00186	57		 push	 edi
  00187	83 cb ff	 or	 ebx, -1
  0018a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 562  : 
; 563  : 				for ( it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  00190	8b b6 5c af 00
	00		 mov	 esi, DWORD PTR [esi+44892]
  00196	8b 06		 mov	 eax, DWORD PTR [esi]
  00198	89 45 10	 mov	 DWORD PTR _it$155376[ebp], eax
  0019b	3b c6		 cmp	 eax, esi
  0019d	74 2c		 je	 SHORT $LN4@CheckMoveM
  0019f	90		 npad	 1
$LL233@CheckMoveM:

; 564  : 				{
; 565  : 					_MAPSVR_DATA * lpTempMapSvrData = it->second;

  001a0	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 566  : 
; 567  : 					if ( lpTempMapSvrData != NULL &&
; 568  : 						 lpTempMapSvrData->m_bIN_USE == TRUE &&
; 569  : 						 lpTempMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  001a3	85 c0		 test	 eax, eax
  001a5	74 15		 je	 SHORT $LN5@CheckMoveM
  001a7	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  001ab	75 0f		 jne	 SHORT $LN5@CheckMoveM
  001ad	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  001b0	66 83 7c 48 1e
	fd		 cmp	 WORD PTR [eax+ecx*2+30], -3 ; fffffffdH
  001b6	75 04		 jne	 SHORT $LN5@CheckMoveM

; 570  : 					{
; 571  : 						sDestServerCode = lpTempMapSvrData->m_sSVR_CODE;

  001b8	0f b7 58 0a	 movzx	 ebx, WORD PTR [eax+10]
$LN5@CheckMoveM:

; 562  : 
; 563  : 				for ( it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  001bc	8d 4d 10	 lea	 ecx, DWORD PTR _it$155376[ebp]
  001bf	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
  001c4	8b 45 10	 mov	 eax, DWORD PTR _it$155376[ebp]
  001c7	3b c6		 cmp	 eax, esi
  001c9	75 d5		 jne	 SHORT $LL233@CheckMoveM
$LN4@CheckMoveM:

; 572  : 					}
; 573  : 				}
; 574  : 				
; 575  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  001cb	57		 push	 edi
  001cc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 576  : 
; 577  : 				if ( sDestServerCode != -1 )

  001d2	66 83 fb ff	 cmp	 bx, -1
  001d6	0f 84 57 03 00
	00		 je	 $LN269@CheckMoveM

; 578  : 				{
; 579  : 					LogAdd(LOG_BLACK, "[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)",
; 580  : 						gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sDestServerCode,
; 581  : 						gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  001dc	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  001df	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  001e5	0f bf 90 06 01
	00 00		 movsx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+262]
  001ec	0f bf 88 04 01
	00 00		 movsx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+260]
  001f3	52		 push	 edx
  001f4	0f b6 90 09 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+265]
  001fb	51		 push	 ecx
  001fc	52		 push	 edx
  001fd	8b 55 0c	 mov	 edx, DWORD PTR _iMAP_NUM$[ebp]
  00200	0f bf cb	 movsx	 ecx, bx
  00203	51		 push	 ecx
  00204	52		 push	 edx
  00205	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  0020b	51		 push	 ecx
  0020c	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  00212	52		 push	 edx
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  00218	6a 00		 push	 0
  0021a	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0021f	83 c4 24	 add	 esp, 36			; 00000024H

; 582  : 
; 583  : 					return sDestServerCode;

  00222	66 8b c3	 mov	 ax, bx

; 592  : 			}
; 593  : 	}
; 594  : 
; 595  : 	return gGameServerCode;
; 596  : }

  00225	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00228	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0022f	59		 pop	 ecx
  00230	5f		 pop	 edi
  00231	5e		 pop	 esi
  00232	5b		 pop	 ebx
  00233	8b e5		 mov	 esp, ebp
  00235	5d		 pop	 ebp
  00236	c2 0c 00	 ret	 12			; 0000000cH
$LN9@CheckMoveM:

; 584  : 				}
; 585  : 			}
; 586  : 			else
; 587  : 			{
; 588  : 				LogAdd(LOG_RED,  "[MapServerMng] CheckMoveMapSvr() - Unknown MapMove Info [%s][%s] : MAP-%d / INFO-%d",
; 589  : 					gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sMAP_MOVE_INFO);

  00239	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0023c	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00242	57		 push	 edi
  00243	53		 push	 ebx
  00244	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  0024a	51		 push	 ecx
  0024b	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  00251	52		 push	 edx
  00252	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@HMFMELGB@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  00257	6a 01		 push	 1
  00259	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0025e	83 c4 18	 add	 esp, 24			; 00000018H

; 590  : 
; 591  : 				return gGameServerCode;

  00261	e9 cd 02 00 00	 jmp	 $LN269@CheckMoveM
$LN32@CheckMoveM:

; 410  : 	{
; 411  : 		case -1:
; 412  : 			{
; 413  : 				_MAPSVR_DATA * lpDestMapSvrData = NULL;

  00266	33 db		 xor	 ebx, ebx

; 414  : 
; 415  : 				if ( sSVR_CODE_BEFORE != -1 )

  00268	66 83 7d 10 ff	 cmp	 WORD PTR _sSVR_CODE_BEFORE$[ebp], -1
  0026d	74 63		 je	 SHORT $LN28@CheckMoveM

; 416  : 				{
; 417  : 					EnterCriticalSection(&this->m_critSVRCODE_MAP);

  0026f	8d be 68 af 00
	00		 lea	 edi, DWORD PTR [esi+44904]
  00275	57		 push	 edi
  00276	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 418  : 
; 419  : 					std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sSVR_CODE_BEFORE);

  0027c	0f bf 45 10	 movsx	 eax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  00280	8d 4d e8	 lea	 ecx, DWORD PTR $T161320[ebp]
  00283	51		 push	 ecx
  00284	8d 55 ec	 lea	 edx, DWORD PTR _it$154933[ebp]
  00287	52		 push	 edx
  00288	8d 8e 58 af 00
	00		 lea	 ecx, DWORD PTR [esi+44888]
  0028e	89 45 e8	 mov	 DWORD PTR $T161320[ebp], eax
  00291	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 420  : 
; 421  : 					if ( it != this->m_mapSVRCODE_MAP.end() )

  00296	8b 4d ec	 mov	 ecx, DWORD PTR _it$154933[ebp]
  00299	3b 8e 5c af 00
	00		 cmp	 ecx, DWORD PTR [esi+44892]
  0029f	74 03		 je	 SHORT $LN30@CheckMoveM

; 422  : 					{
; 423  : 						lpDestMapSvrData = it->second;

  002a1	8b 59 10	 mov	 ebx, DWORD PTR [ecx+16]
$LN30@CheckMoveM:

; 424  : 					}
; 425  : 
; 426  : 					LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  002a4	57		 push	 edi
  002a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 427  : 
; 428  : 					if ( lpDestMapSvrData != NULL )

  002ab	85 db		 test	 ebx, ebx
  002ad	74 23		 je	 SHORT $LN28@CheckMoveM

; 429  : 					{
; 430  : 						if ( lpDestMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3 )

  002af	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  002b2	66 83 7c 43 1e
	fd		 cmp	 WORD PTR [ebx+eax*2+30], -3 ; fffffffdH
  002b8	75 18		 jne	 SHORT $LN28@CheckMoveM
$LN270@CheckMoveM:

; 431  : 						{
; 432  : 							return sSVR_CODE_BEFORE;

  002ba	66 8b 45 10	 mov	 ax, WORD PTR _sSVR_CODE_BEFORE$[ebp]

; 592  : 			}
; 593  : 	}
; 594  : 
; 595  : 	return gGameServerCode;
; 596  : }

  002be	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  002c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  002c8	59		 pop	 ecx
  002c9	5f		 pop	 edi
  002ca	5e		 pop	 esi
  002cb	5b		 pop	 ebx
  002cc	8b e5		 mov	 esp, ebp
  002ce	5d		 pop	 ebp
  002cf	c2 0c 00	 ret	 12			; 0000000cH
$LN28@CheckMoveM:

; 433  : 						}
; 434  : 					}
; 435  : 				}
; 436  : 
; 437  : 				std::vector<_MAPSVR_DATA *> vtMapSvrData;

  002d2	33 ff		 xor	 edi, edi
  002d4	33 db		 xor	 ebx, ebx
  002d6	89 5d d8	 mov	 DWORD PTR _vtMapSvrData$155283[ebp], ebx
  002d9	89 7d dc	 mov	 DWORD PTR _vtMapSvrData$155283[ebp+4], edi
  002dc	89 7d e0	 mov	 DWORD PTR _vtMapSvrData$155283[ebp+8], edi

; 438  : 
; 439  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  002df	8d 86 68 af 00
	00		 lea	 eax, DWORD PTR [esi+44904]
  002e5	50		 push	 eax
  002e6	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  002e9	89 45 f0	 mov	 DWORD PTR tv1275[ebp], eax
  002ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 440  : 
; 441  : 				for ( std::map<int ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  002f2	8b 8e 5c af 00
	00		 mov	 ecx, DWORD PTR [esi+44892]
  002f8	8b 01		 mov	 eax, DWORD PTR [ecx]
  002fa	89 45 10	 mov	 DWORD PTR _it$155297[ebp], eax
  002fd	3b c1		 cmp	 eax, ecx
  002ff	74 3c		 je	 SHORT $LN25@CheckMoveM
$LL91@CheckMoveM:

; 442  : 				{
; 443  : 					_MAPSVR_DATA * lpTempMapSvrData = it->second;

  00301	8d 48 10	 lea	 ecx, DWORD PTR [eax+16]
  00304	8b 01		 mov	 eax, DWORD PTR [ecx]

; 444  : 
; 445  : 					if ( lpTempMapSvrData != NULL &&
; 446  : 						 lpTempMapSvrData->m_bIN_USE == TRUE &&
; 447  : 						 lpTempMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  00306	85 c0		 test	 eax, eax
  00308	74 1a		 je	 SHORT $LN26@CheckMoveM
  0030a	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  0030e	75 14		 jne	 SHORT $LN26@CheckMoveM
  00310	8b 55 0c	 mov	 edx, DWORD PTR _iMAP_NUM$[ebp]
  00313	66 83 7c 50 1e
	fd		 cmp	 WORD PTR [eax+edx*2+30], -3 ; fffffffdH
  00319	75 09		 jne	 SHORT $LN26@CheckMoveM

; 448  : 					{
; 449  : 						vtMapSvrData.push_back(it->second);

  0031b	51		 push	 ecx
  0031c	8d 4d d8	 lea	 ecx, DWORD PTR _vtMapSvrData$155283[ebp]
  0031f	e8 00 00 00 00	 call	 ?push_back@?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAEXABQAU_MAPSVR_DATA@@@Z ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::push_back
$LN26@CheckMoveM:

; 440  : 
; 441  : 				for ( std::map<int ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  00324	8d 4d 10	 lea	 ecx, DWORD PTR _it$155297[ebp]
  00327	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
  0032c	8b 45 10	 mov	 eax, DWORD PTR _it$155297[ebp]
  0032f	3b 86 5c af 00
	00		 cmp	 eax, DWORD PTR [esi+44892]
  00335	75 ca		 jne	 SHORT $LL91@CheckMoveM
  00337	8b 7d dc	 mov	 edi, DWORD PTR _vtMapSvrData$155283[ebp+4]
  0033a	8b 5d d8	 mov	 ebx, DWORD PTR _vtMapSvrData$155283[ebp]
$LN25@CheckMoveM:

; 450  : 					}
; 451  : 				}
; 452  : 
; 453  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  0033d	8b 45 f0	 mov	 eax, DWORD PTR tv1275[ebp]
  00340	50		 push	 eax
  00341	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 454  : 
; 455  : 				short sDestServerCode = -1;
; 456  : 
; 457  : 				if ( vtMapSvrData.empty() == 0 )

  00347	3b df		 cmp	 ebx, edi
  00349	0f 84 80 00 00
	00		 je	 $LN22@CheckMoveM

; 458  : 				{
; 459  : 					sDestServerCode = vtMapSvrData[rand()%vtMapSvrData.size()]->m_sSVR_CODE;

  0034f	e8 00 00 00 00	 call	 _rand
  00354	2b fb		 sub	 edi, ebx
  00356	c1 ff 02	 sar	 edi, 2
  00359	33 d2		 xor	 edx, edx
  0035b	f7 f7		 div	 edi
  0035d	8b 0c 93	 mov	 ecx, DWORD PTR [ebx+edx*4]
  00360	0f b7 71 0a	 movzx	 esi, WORD PTR [ecx+10]

; 460  : 				}
; 461  : 
; 462  : 				if ( sDestServerCode != -1 )

  00364	66 83 fe ff	 cmp	 si, -1
  00368	74 65		 je	 SHORT $LN22@CheckMoveM

; 463  : 				{
; 464  : 					LogAdd(LOG_BLACK, "[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)",
; 465  : 						gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sDestServerCode,
; 466  : 						gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  0036a	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  0036d	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00373	0f bf 90 06 01
	00 00		 movsx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+262]
  0037a	0f bf 88 04 01
	00 00		 movsx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+260]
  00381	52		 push	 edx
  00382	0f b6 90 09 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+265]
  00389	51		 push	 ecx
  0038a	52		 push	 edx
  0038b	8b 55 0c	 mov	 edx, DWORD PTR _iMAP_NUM$[ebp]
  0038e	0f bf ce	 movsx	 ecx, si
  00391	51		 push	 ecx
  00392	52		 push	 edx
  00393	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  00399	51		 push	 ecx
  0039a	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  003a0	52		 push	 edx
  003a1	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  003a6	6a 00		 push	 0
  003a8	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  003ad	83 c4 24	 add	 esp, 36			; 00000024H

; 467  : 
; 468  : 					return sDestServerCode;

  003b0	8d 4d d8	 lea	 ecx, DWORD PTR _vtMapSvrData$155283[ebp]
  003b3	e8 00 00 00 00	 call	 ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
  003b8	66 8b c6	 mov	 ax, si

; 592  : 			}
; 593  : 	}
; 594  : 
; 595  : 	return gGameServerCode;
; 596  : }

  003bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  003be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  003c5	59		 pop	 ecx
  003c6	5f		 pop	 edi
  003c7	5e		 pop	 esi
  003c8	5b		 pop	 ebx
  003c9	8b e5		 mov	 esp, ebp
  003cb	5d		 pop	 ebp
  003cc	c2 0c 00	 ret	 12			; 0000000cH
$LN22@CheckMoveM:

; 469  : 				}
; 470  : 			}

  003cf	8d 4d d8	 lea	 ecx, DWORD PTR _vtMapSvrData$155283[ebp]
  003d2	e8 00 00 00 00	 call	 ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >

; 471  : 			break;

  003d7	e9 57 01 00 00	 jmp	 $LN269@CheckMoveM
$LN21@CheckMoveM:

; 472  : 
; 473  : 		case -2:
; 474  : 			{
; 475  : 				_MAPSVR_DATA * lpDestMapSvrData = NULL;

  003dc	33 db		 xor	 ebx, ebx

; 476  : 
; 477  : 				if ( sSVR_CODE_BEFORE != -1 )

  003de	66 83 7d 10 ff	 cmp	 WORD PTR _sSVR_CODE_BEFORE$[ebp], -1
  003e3	74 4f		 je	 SHORT $LN17@CheckMoveM

; 478  : 				{
; 479  : 					EnterCriticalSection(&this->m_critSVRCODE_MAP);

  003e5	8d be 68 af 00
	00		 lea	 edi, DWORD PTR [esi+44904]
  003eb	57		 push	 edi
  003ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 480  : 
; 481  : 					std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(sSVR_CODE_BEFORE);

  003f2	0f bf 45 10	 movsx	 eax, WORD PTR _sSVR_CODE_BEFORE$[ebp]
  003f6	8d 4d e8	 lea	 ecx, DWORD PTR $T161325[ebp]
  003f9	51		 push	 ecx
  003fa	8d 55 ec	 lea	 edx, DWORD PTR _it$155327[ebp]
  003fd	52		 push	 edx
  003fe	8d 8e 58 af 00
	00		 lea	 ecx, DWORD PTR [esi+44888]
  00404	89 45 e8	 mov	 DWORD PTR $T161325[ebp], eax
  00407	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 482  : 
; 483  : 					if ( it != this->m_mapSVRCODE_MAP.end() )

  0040c	8b 45 ec	 mov	 eax, DWORD PTR _it$155327[ebp]
  0040f	3b 86 5c af 00
	00		 cmp	 eax, DWORD PTR [esi+44892]
  00415	74 03		 je	 SHORT $LN19@CheckMoveM

; 484  : 					{
; 485  : 						lpDestMapSvrData = it->second;

  00417	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
$LN19@CheckMoveM:

; 486  : 					}
; 487  : 
; 488  : 					LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  0041a	57		 push	 edi
  0041b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 489  : 
; 490  : 					if ( lpDestMapSvrData != NULL )

  00421	85 db		 test	 ebx, ebx
  00423	74 0f		 je	 SHORT $LN17@CheckMoveM

; 491  : 					{
; 492  : 						if ( lpDestMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3 )

  00425	8b 45 0c	 mov	 eax, DWORD PTR _iMAP_NUM$[ebp]
  00428	66 83 7c 43 1e
	fd		 cmp	 WORD PTR [ebx+eax*2+30], -3 ; fffffffdH

; 493  : 						{
; 494  : 							return sSVR_CODE_BEFORE;

  0042e	0f 84 86 fe ff
	ff		 je	 $LN270@CheckMoveM
$LN17@CheckMoveM:

; 495  : 						}
; 496  : 					}
; 497  : 				}
; 498  : 				
; 499  : 				short sDestServerCode = -1;
; 500  : 
; 501  : 				EnterCriticalSection(&this->m_critSVRCODE_MAP);

  00434	8d 9e 68 af 00
	00		 lea	 ebx, DWORD PTR [esi+44904]
  0043a	53		 push	 ebx
  0043b	83 cf ff	 or	 edi, -1
  0043e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 502  : 
; 503  : 				for ( std::map<int ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  00444	8b b6 5c af 00
	00		 mov	 esi, DWORD PTR [esi+44892]
  0044a	8b 06		 mov	 eax, DWORD PTR [esi]
  0044c	89 45 10	 mov	 DWORD PTR _it$155348[ebp], eax
  0044f	3b c6		 cmp	 eax, esi
  00451	74 2b		 je	 SHORT $LN14@CheckMoveM
$LL169@CheckMoveM:

; 504  : 				{
; 505  : 					_MAPSVR_DATA * lpTempMapSvrData = it->second;

  00453	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 506  : 
; 507  : 					if ( lpTempMapSvrData != NULL &&
; 508  : 						 lpTempMapSvrData->m_bIN_USE == TRUE &&
; 509  : 						 lpTempMapSvrData->m_sMAP_MOVE[iMAP_NUM] == -3)

  00456	85 c0		 test	 eax, eax
  00458	74 15		 je	 SHORT $LN15@CheckMoveM
  0045a	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  0045e	75 0f		 jne	 SHORT $LN15@CheckMoveM
  00460	8b 4d 0c	 mov	 ecx, DWORD PTR _iMAP_NUM$[ebp]
  00463	66 83 7c 48 1e
	fd		 cmp	 WORD PTR [eax+ecx*2+30], -3 ; fffffffdH
  00469	75 04		 jne	 SHORT $LN15@CheckMoveM

; 510  : 					{
; 511  : 						sDestServerCode = lpTempMapSvrData->m_sSVR_CODE;

  0046b	0f b7 78 0a	 movzx	 edi, WORD PTR [eax+10]
$LN15@CheckMoveM:

; 502  : 
; 503  : 				for ( std::map<int ,_MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.begin() ; it != this->m_mapSVRCODE_MAP.end() ;it++)

  0046f	8d 4d 10	 lea	 ecx, DWORD PTR _it$155348[ebp]
  00472	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >,std::_Iterator_base0>::operator++
  00477	8b 45 10	 mov	 eax, DWORD PTR _it$155348[ebp]
  0047a	3b c6		 cmp	 eax, esi
  0047c	75 d5		 jne	 SHORT $LL169@CheckMoveM
$LN14@CheckMoveM:

; 512  : 					}
; 513  : 				}
; 514  : 
; 515  : 				LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  0047e	53		 push	 ebx
  0047f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 516  : 
; 517  : 				if ( sDestServerCode != -1 )

  00485	66 83 ff ff	 cmp	 di, -1
  00489	0f 84 a4 00 00
	00		 je	 $LN269@CheckMoveM

; 518  : 				{
; 519  : 					LogAdd(LOG_BLACK, "[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d(State Map:%d X:%d Y:%d)",
; 520  : 						gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, sDestServerCode,
; 521  : 						gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  0048f	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  00492	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00498	0f bf 90 06 01
	00 00		 movsx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+262]
  0049f	0f bf 88 04 01
	00 00		 movsx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+260]
  004a6	52		 push	 edx
  004a7	0f b6 90 09 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+265]
  004ae	51		 push	 ecx
  004af	52		 push	 edx
  004b0	8b 55 0c	 mov	 edx, DWORD PTR _iMAP_NUM$[ebp]
  004b3	0f bf cf	 movsx	 ecx, di
  004b6	51		 push	 ecx
  004b7	52		 push	 edx
  004b8	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  004be	51		 push	 ecx
  004bf	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  004c5	52		 push	 edx
  004c6	68 00 00 00 00	 push	 OFFSET ??_C@_0GJ@HAGGDALD@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  004cb	6a 00		 push	 0
  004cd	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  004d2	83 c4 24	 add	 esp, 36			; 00000024H

; 522  : 
; 523  : 					return sDestServerCode;

  004d5	66 8b c7	 mov	 ax, di

; 592  : 			}
; 593  : 	}
; 594  : 
; 595  : 	return gGameServerCode;
; 596  : }

  004d8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  004db	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  004e2	59		 pop	 ecx
  004e3	5f		 pop	 edi
  004e4	5e		 pop	 esi
  004e5	5b		 pop	 ebx
  004e6	8b e5		 mov	 esp, ebp
  004e8	5d		 pop	 ebp
  004e9	c2 0c 00	 ret	 12			; 0000000cH
$LN11@CheckMoveM:

; 524  : 				}
; 525  : 			}
; 526  : 			break;
; 527  : 
; 528  : 		case -3:
; 529  : 			LogAdd(LOG_BLACK, "[MapServerMng] CheckMoveMapSvr() - MapServer Check OK [%s][%s] : MAP-%d / SVR-%d (State Map:%d X:%d Y:%d)",
; 530  : 				gObj[iIndex].AccountID, gObj[iIndex].Name, iMAP_NUM, gGameServerCode,
; 531  : 				gObj[iIndex].MapNumber, gObj[iIndex].X, gObj[iIndex].Y);

  004ec	8b 45 08	 mov	 eax, DWORD PTR _iIndex$[ebp]
  004ef	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  004f5	0f bf 88 06 01
	00 00		 movsx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+262]
  004fc	0f bf 90 04 01
	00 00		 movsx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+260]
  00503	51		 push	 ecx
  00504	0f b6 88 09 01
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+265]
  0050b	52		 push	 edx
  0050c	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00513	51		 push	 ecx
  00514	52		 push	 edx
  00515	53		 push	 ebx
  00516	8d 88 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  0051c	51		 push	 ecx
  0051d	8d 90 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  00523	52		 push	 edx
  00524	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@EEMBMNOK@?$FLMapServerMng?$FN?5CheckMoveMapSvr?$CI?$CJ@
  00529	6a 00		 push	 0
  0052b	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00530	83 c4 24	 add	 esp, 36			; 00000024H
$LN269@CheckMoveM:

; 532  : 
; 533  : 			return gGameServerCode;

  00533	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode

; 592  : 			}
; 593  : 	}
; 594  : 
; 595  : 	return gGameServerCode;
; 596  : }

  00539	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0053c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00543	59		 pop	 ecx
  00544	5f		 pop	 edi
  00545	5e		 pop	 esi
  00546	5b		 pop	 ebx
  00547	8b e5		 mov	 esp, ebp
  00549	5d		 pop	 ebp
  0054a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _vtMapSvrData$155283[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@PAU_MAPSVR_DATA@@V?$allocator@PAU_MAPSVR_DATA@@@std@@@std@@QAE@XZ ; std::vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >::~vector<_MAPSVR_DATA *,std::allocator<_MAPSVR_DATA *> >
__ehhandler$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckMoveMapSvr@CMapServerManager@@QAEFHHF@Z ENDP	; CMapServerManager::CheckMoveMapSvr
PUBLIC	?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ; CMapServerManager::GetSvrCodeData
; Function compile flags: /Ogtp
;	COMDAT ?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
$T162019 = 8						; size = 4
_wServerCode$ = 8					; size = 2
_lpszIpAddress$ = 12					; size = 4
_lpwPort$ = 16						; size = 4
?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z PROC	; CMapServerManager::GetSvrCodeData, COMDAT
; _this$ = ecx

; 599  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 600  : 	if ( !lpszIpAddress || !lpwPort )

  00004	83 7d 0c 00	 cmp	 DWORD PTR _lpszIpAddress$[ebp], 0
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	0f 84 81 00 00
	00		 je	 $LN3@GetSvrCode
  00011	83 7d 10 00	 cmp	 DWORD PTR _lpwPort$[ebp], 0
  00015	74 7b		 je	 SHORT $LN3@GetSvrCode

; 602  : 
; 603  : 	_MAPSVR_DATA * lpMapSvrData = NULL;
; 604  : 
; 605  : 	EnterCriticalSection(&this->m_critSVRCODE_MAP);

  00017	53		 push	 ebx
  00018	57		 push	 edi
  00019	8d be 68 af 00
	00		 lea	 edi, DWORD PTR [esi+44904]
  0001f	57		 push	 edi
  00020	33 db		 xor	 ebx, ebx
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4

; 606  : 
; 607  : 	std::map<int, _MAPSVR_DATA *>::iterator it = this->m_mapSVRCODE_MAP.find(wServerCode);

  00028	0f b7 45 08	 movzx	 eax, WORD PTR _wServerCode$[ebp]
  0002c	8d 4d 08	 lea	 ecx, DWORD PTR $T162019[ebp]
  0002f	51		 push	 ecx
  00030	8d 55 fc	 lea	 edx, DWORD PTR _it$[ebp]
  00033	52		 push	 edx
  00034	8d 8e 58 af 00
	00		 lea	 ecx, DWORD PTR [esi+44888]
  0003a	89 45 08	 mov	 DWORD PTR $T162019[ebp], eax
  0003d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::find

; 608  : 
; 609  : 	if ( it != this->m_mapSVRCODE_MAP.end() )

  00042	8b 45 fc	 mov	 eax, DWORD PTR _it$[ebp]
  00045	3b 86 5c af 00
	00		 cmp	 eax, DWORD PTR [esi+44892]
  0004b	74 03		 je	 SHORT $LN2@GetSvrCode

; 610  : 	{
; 611  : 		lpMapSvrData = it->second;

  0004d	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
$LN2@GetSvrCode:

; 612  : 	}
; 613  : 
; 614  : 	LeaveCriticalSection(&this->m_critSVRCODE_MAP);

  00050	57		 push	 edi
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4

; 615  : 
; 616  : 	if ( lpMapSvrData == NULL )

  00057	85 db		 test	 ebx, ebx
  00059	75 0b		 jne	 SHORT $LN1@GetSvrCode

; 617  : 		return FALSE;

  0005b	5f		 pop	 edi
  0005c	5b		 pop	 ebx
  0005d	33 c0		 xor	 eax, eax
  0005f	5e		 pop	 esi

; 623  : }

  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 0c 00	 ret	 12			; 0000000cH
$LN1@GetSvrCode:

; 618  : 
; 619  : 	strcpy(lpszIpAddress, lpMapSvrData->m_cIPADDR);

  00066	8b 55 0c	 mov	 edx, DWORD PTR _lpszIpAddress$[ebp]
  00069	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  0006c	2b d0		 sub	 edx, eax
  0006e	8b ff		 npad	 2
$LL7@GetSvrCode:
  00070	8a 08		 mov	 cl, BYTE PTR [eax]
  00072	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00075	40		 inc	 eax
  00076	84 c9		 test	 cl, cl
  00078	75 f6		 jne	 SHORT $LL7@GetSvrCode

; 620  : 	*lpwPort = lpMapSvrData->m_wPORT;

  0007a	66 8b 43 1c	 mov	 ax, WORD PTR [ebx+28]
  0007e	8b 4d 10	 mov	 ecx, DWORD PTR _lpwPort$[ebp]
  00081	5f		 pop	 edi
  00082	5b		 pop	 ebx
  00083	66 89 01	 mov	 WORD PTR [ecx], ax

; 621  : 
; 622  : 	return TRUE;

  00086	b8 01 00 00 00	 mov	 eax, 1
  0008b	5e		 pop	 esi

; 623  : }

  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetSvrCode:

; 601  : 		return FALSE;

  00092	33 c0		 xor	 eax, eax
  00094	5e		 pop	 esi

; 623  : }

  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 0c 00	 ret	 12			; 0000000cH
?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ENDP	; CMapServerManager::GetSvrCodeData
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T162191 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T162191[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase

; 792  : 		}

  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
PUBLIC	??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::~map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T162374 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::~map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T162374[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
__ehhandler$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::~map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
PUBLIC	??_7CMapServerManager@@6B@			; CMapServerManager::`vftable'
PUBLIC	??1CMapServerManager@@UAE@XZ			; CMapServerManager::~CMapServerManager
PUBLIC	??_R4CMapServerManager@@6B@			; CMapServerManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMapServerManager@@@8			; CMapServerManager `RTTI Type Descriptor'
PUBLIC	??_R3CMapServerManager@@8			; CMapServerManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapServerManager@@8			; CMapServerManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMapServerManager@@8		; CMapServerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	??_ECMapServerManager@@UAEPAXI@Z:PROC		; CMapServerManager::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CMapServerManager@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapServerManager@@8 DD FLAT:??_R0?AVCMapServerManager@@@8 ; CMapServerManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapServerManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapServerManager@@8
rdata$r	SEGMENT
??_R2CMapServerManager@@8 DD FLAT:??_R1A@?0A@EA@CMapServerManager@@8 ; CMapServerManager::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CMapServerManager@@8
rdata$r	SEGMENT
??_R3CMapServerManager@@8 DD 00H			; CMapServerManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CMapServerManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapServerManager@@@8
_DATA	SEGMENT
??_R0?AVCMapServerManager@@@8 DD FLAT:??_7type_info@@6B@ ; CMapServerManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapServerManager@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMapServerManager@@6B@
rdata$r	SEGMENT
??_R4CMapServerManager@@6B@ DD 00H			; CMapServerManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMapServerManager@@@8
	DD	FLAT:??_R3CMapServerManager@@8
rdata$r	ENDS
;	COMDAT ??_7CMapServerManager@@6B@
CONST	SEGMENT
??_7CMapServerManager@@6B@ DD FLAT:??_R4CMapServerManager@@6B@ ; CMapServerManager::`vftable'
	DD	FLAT:??_ECMapServerManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMapServerManager@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMapServerManager@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CMapServerManager@@UAE@XZ$3
__ehfuncinfo$??1CMapServerManager@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CMapServerManager@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
xdata$x	ENDS
;	COMDAT ??1CMapServerManager@@UAE@XZ
_TEXT	SEGMENT
$T162595 = -24						; size = 4
$T162626 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMapServerManager@@UAE@XZ PROC			; CMapServerManager::~CMapServerManager, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMapServerManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
  00029	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMapServerManager@@6B@

; 59   : 	DeleteCriticalSection(&this->m_critSVRCODE_MAP);

  00032	8d 86 68 af 00
	00		 lea	 eax, DWORD PTR [esi+44904]
  00038	50		 push	 eax
  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4

; 60   : }

  00046	8d be 58 af 00
	00		 lea	 edi, DWORD PTR [esi+44888]
  0004c	89 7d ec	 mov	 DWORD PTR $T162626[ebp], edi
  0004f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00052	8b 08		 mov	 ecx, DWORD PTR [eax]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	8d 4d e8	 lea	 ecx, DWORD PTR $T162595[ebp]
  00059	51		 push	 ecx
  0005a	8b cf		 mov	 ecx, edi
  0005c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00060	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::erase
  00065	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00068	57		 push	 edi
  00069	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006e	83 c4 04	 add	 esp, 4
  00071	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00076	68 90 01 00 00	 push	 400			; 00000190H
  0007b	6a 70		 push	 112			; 00000070H
  0007d	83 c6 08	 add	 esi, 8
  00080	56		 push	 esi
  00081	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00088	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMapServerManager@@UAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00005	68 90 01 00 00	 push	 400			; 00000190H
  0000a	6a 70		 push	 112			; 00000070H
  0000c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00018	c3		 ret	 0
__unwindfunclet$??1CMapServerManager@@UAE@XZ$3:
  00019	8b 4d ec	 mov	 ecx, DWORD PTR $T162626[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> >,0> >
__ehhandler$??1CMapServerManager@@UAE@XZ:
  00021	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00025	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00028	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMapServerManager@@UAE@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMapServerManager@@UAE@XZ ENDP			; CMapServerManager::~CMapServerManager
PUBLIC	??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T162786 = -16						; size = 12
$T162679 = -4						; size = 4
??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	6a 18		 push	 24			; 00000018H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 26		 je	 SHORT $LN25@map
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 14	 mov	 BYTE PTR [ecx+20], al
  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 15	 mov	 BYTE PTR [edx+21], al

; 107  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0

; 106  : 		{	// construct empty map from defaults

$LN25@map:
  00044	8d 45 fc	 lea	 eax, DWORD PTR $T162679[ebp]
  00047	50		 push	 eax
  00048	8d 4d f0	 lea	 ecx, DWORD PTR $T162786[ebp]
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T162679[ebp], 0
  00052	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00057	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005c	8d 4d f0	 lea	 ecx, DWORD PTR $T162786[ebp]
  0005f	51		 push	 ecx
  00060	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T162786[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00067	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN49@map:
$LN48@map:
  0006c	cc		 int	 3
??0?$map@HPAU_MAPSVR_DATA@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_MAPSVR_DATA@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >::map<int,_MAPSVR_DATA *,std::less<int>,std::allocator<std::pair<int const ,_MAPSVR_DATA *> > >
_TEXT	ENDS
PUBLIC	??0CMapServerManager@@QAE@XZ			; CMapServerManager::CMapServerManager
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	_srand:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
xdata$x	SEGMENT
__unwindtable$??0CMapServerManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMapServerManager@@QAE@XZ$0
__ehfuncinfo$??0CMapServerManager@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMapServerManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.cpp
xdata$x	ENDS
;	COMDAT ??0CMapServerManager@@QAE@XZ
_TEXT	SEGMENT
$T162992 = -32						; size = 12
_this$ = -20						; size = 4
$T162853 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CMapServerManager@@QAE@XZ PROC			; CMapServerManager::CMapServerManager, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CMapServerManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
  00029	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  0002c	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00031	68 00 00 00 00	 push	 OFFSET ??0_MAPSVR_DATA@@QAE@XZ ; _MAPSVR_DATA::_MAPSVR_DATA
  00036	68 90 01 00 00	 push	 400			; 00000190H
  0003b	6a 70		 push	 112			; 00000070H
  0003d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00040	50		 push	 eax
  00041	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMapServerManager@@6B@
  00047	e8 00 00 00 00	 call	 ??_L@YGXPAXIHP6EX0@Z1@Z
  0004c	33 ff		 xor	 edi, edi
  0004e	6a 18		 push	 24			; 00000018H
  00050	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  00053	89 be 60 af 00
	00		 mov	 DWORD PTR [esi+44896], edi
  00059	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0005e	83 c4 04	 add	 esp, 4
  00061	3b c7		 cmp	 eax, edi
  00063	74 66		 je	 SHORT $LN29@CMapServer
  00065	89 86 5c af 00
	00		 mov	 DWORD PTR [esi+44892], eax
  0006b	89 00		 mov	 DWORD PTR [eax], eax
  0006d	8b 86 5c af 00
	00		 mov	 eax, DWORD PTR [esi+44892]
  00073	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00076	8b 86 5c af 00
	00		 mov	 eax, DWORD PTR [esi+44892]
  0007c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0007f	8b 8e 5c af 00
	00		 mov	 ecx, DWORD PTR [esi+44892]
  00085	b0 01		 mov	 al, 1
  00087	88 41 14	 mov	 BYTE PTR [ecx+20], al
  0008a	8b 96 5c af 00
	00		 mov	 edx, DWORD PTR [esi+44892]

; 49   : 	srand(time(NULL)); 

  00090	57		 push	 edi
  00091	88 42 15	 mov	 BYTE PTR [edx+21], al
  00094	e8 00 00 00 00	 call	 __time64
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _srand
  0009f	83 c4 08	 add	 esp, 8

; 50   : 	this->m_bMapDataLoadOk=FALSE;
; 51   : 	this->m_lpThisMapSvrData = NULL;
; 52   : 
; 53   : 	InitializeCriticalSection(&this->m_critSVRCODE_MAP);

  000a2	8d 86 68 af 00
	00		 lea	 eax, DWORD PTR [esi+44904]
  000a8	50		 push	 eax
  000a9	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  000ac	89 be 80 af 00
	00		 mov	 DWORD PTR [esi+44928], edi
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4

; 54   : }

  000b8	8b c6		 mov	 eax, esi
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0

; 48   : {

$LN29@CMapServer:
  000cb	8d 4d f0	 lea	 ecx, DWORD PTR $T162853[ebp]
  000ce	51		 push	 ecx
  000cf	8d 4d e0	 lea	 ecx, DWORD PTR $T162992[ebp]
  000d2	89 7d f0	 mov	 DWORD PTR $T162853[ebp], edi
  000d5	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  000da	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  000df	8d 55 e0	 lea	 edx, DWORD PTR $T162992[ebp]
  000e2	52		 push	 edx
  000e3	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T162992[ebp], OFFSET ??_7bad_alloc@std@@6B@
  000ea	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN57@CMapServer:
$LN56@CMapServer:
  000ef	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMapServerManager@@QAE@XZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ??1_MAPSVR_DATA@@UAE@XZ ; _MAPSVR_DATA::~_MAPSVR_DATA
  00005	68 90 01 00 00	 push	 400			; 00000190H
  0000a	6a 70		 push	 112			; 00000070H
  0000c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	83 c0 08	 add	 eax, 8
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??_M@YGXPAXIHP6EX0@Z@Z
  00018	c3		 ret	 0
__ehhandler$??0CMapServerManager@@QAE@XZ:
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CMapServerManager@@QAE@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CMapServerManager@@QAE@XZ ENDP			; CMapServerManager::CMapServerManager
; Function compile flags: /Ogtp
;	COMDAT ??_GCMapServerManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMapServerManager@@UAEPAXI@Z PROC			; CMapServerManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMapServerManager@@UAE@XZ ; CMapServerManager::~CMapServerManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar@3:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCMapServerManager@@UAEPAXI@Z ENDP			; CMapServerManager::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_MapServerManager@@YAXXZ
text$yc	SEGMENT
??__Eg_MapServerManager@@YAXXZ PROC			; `dynamic initializer for 'g_MapServerManager'', COMDAT

; 625  : CMapServerManager g_MapServerManager;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  00005	e8 00 00 00 00	 call	 ??0CMapServerManager@@QAE@XZ ; CMapServerManager::CMapServerManager
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_MapServerManager@@YAXXZ ; `dynamic atexit destructor for 'g_MapServerManager''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_MapServerManager@@YAXXZ ENDP			; `dynamic initializer for 'g_MapServerManager''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_MapServerManager@@YAXXZ
text$yd	SEGMENT
??__Fg_MapServerManager@@YAXXZ PROC			; `dynamic atexit destructor for 'g_MapServerManager'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  00005	e9 00 00 00 00	 jmp	 ??1CMapServerManager@@UAE@XZ ; CMapServerManager::~CMapServerManager
??__Fg_MapServerManager@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_MapServerManager''
text$yd	ENDS
PUBLIC	?g_MapServerManager@@3VCMapServerManager@@A	; g_MapServerManager
_BSS	SEGMENT
?g_MapServerManager@@3VCMapServerManager@@A DB 0af84H DUP (?) ; g_MapServerManager
_BSS	ENDS
CRT$XCU	SEGMENT
_g_MapServerManager$initializer$ DD FLAT:??__Eg_MapServerManager@@YAXXZ
CRT$XCU	ENDS
END
