; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\JewelMixSystem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_g_JewelMixInfo DD 0aH
	DD	07a120H
	DD	01c0dH
	DD	0181eH
	DD	014H
	DD	0f4240H
	DD	01c0dH
	DD	0181eH
	DD	01eH
	DD	016e360H
	DD	01c0dH
	DD	0181eH
	DD	0aH
	DD	07a120H
	DD	01c0eH
	DD	0181fH
	DD	014H
	DD	0f4240H
	DD	01c0eH
	DD	0181fH
	DD	01eH
	DD	016e360H
	DD	01c0eH
	DD	0181fH
CONST	ENDS
PUBLIC	??_7CJewelMixSystem@@6B@			; CJewelMixSystem::`vftable'
PUBLIC	??0CJewelMixSystem@@QAE@XZ			; CJewelMixSystem::CJewelMixSystem
PUBLIC	??_R4CJewelMixSystem@@6B@			; CJewelMixSystem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCJewelMixSystem@@@8			; CJewelMixSystem `RTTI Type Descriptor'
PUBLIC	??_R3CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CJewelMixSystem@@8				; CJewelMixSystem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CJewelMixSystem@@8		; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECJewelMixSystem@@UAEPAXI@Z:PROC		; CJewelMixSystem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CJewelMixSystem@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\jewelmixsystem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CJewelMixSystem@@8 DD FLAT:??_R0?AVCJewelMixSystem@@@8 ; CJewelMixSystem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R2CJewelMixSystem@@8
rdata$r	SEGMENT
??_R2CJewelMixSystem@@8 DD FLAT:??_R1A@?0A@EA@CJewelMixSystem@@8 ; CJewelMixSystem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CJewelMixSystem@@8
rdata$r	SEGMENT
??_R3CJewelMixSystem@@8 DD 00H				; CJewelMixSystem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCJewelMixSystem@@@8
_DATA	SEGMENT
??_R0?AVCJewelMixSystem@@@8 DD FLAT:??_7type_info@@6B@	; CJewelMixSystem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCJewelMixSystem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CJewelMixSystem@@6B@
rdata$r	SEGMENT
??_R4CJewelMixSystem@@6B@ DD 00H			; CJewelMixSystem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCJewelMixSystem@@@8
	DD	FLAT:??_R3CJewelMixSystem@@8
rdata$r	ENDS
;	COMDAT ??_7CJewelMixSystem@@6B@
CONST	SEGMENT
??_7CJewelMixSystem@@6B@ DD FLAT:??_R4CJewelMixSystem@@6B@ ; CJewelMixSystem::`vftable'
	DD	FLAT:??_ECJewelMixSystem@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CJewelMixSystem@@QAE@XZ
_TEXT	SEGMENT
??0CJewelMixSystem@@QAE@XZ PROC				; CJewelMixSystem::CJewelMixSystem, COMDAT
; _this$ = ecx

; 17   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CJewelMixSystem@@6B@

; 18   : 	return;
; 19   : }

  00008	c3		 ret	 0
??0CJewelMixSystem@@QAE@XZ ENDP				; CJewelMixSystem::CJewelMixSystem
_TEXT	ENDS
PUBLIC	??1CJewelMixSystem@@UAE@XZ			; CJewelMixSystem::~CJewelMixSystem
; Function compile flags: /Ogtp
;	COMDAT ??1CJewelMixSystem@@UAE@XZ
_TEXT	SEGMENT
??1CJewelMixSystem@@UAE@XZ PROC				; CJewelMixSystem::~CJewelMixSystem, COMDAT
; _this$ = ecx

; 22   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CJewelMixSystem@@6B@

; 23   : 	return;
; 24   : }

  00006	c3		 ret	 0
??1CJewelMixSystem@@UAE@XZ ENDP				; CJewelMixSystem::~CJewelMixSystem
_TEXT	ENDS
PUBLIC	?GetJewelCount@CJewelMixSystem@@SAHHH@Z		; CJewelMixSystem::GetJewelCount
EXTRN	?gObjGetItemCountInIventory@@YAHHH@Z:PROC	; gObjGetItemCountInIventory
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
; Function compile flags: /Ogtp
;	COMDAT ?GetJewelCount@CJewelMixSystem@@SAHHH@Z
_TEXT	SEGMENT
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
?GetJewelCount@CJewelMixSystem@@SAHHH@Z PROC		; CJewelMixSystem::GetJewelCount, COMDAT

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 28   : 	if ( !gObjIsConnected(iIndex) )

  00004	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0000d	83 c4 04	 add	 esp, 4
  00010	85 c0		 test	 eax, eax
  00012	75 06		 jne	 SHORT $LN6@GetJewelCo
$LN9@GetJewelCo:

; 29   : 		return -1;

  00014	83 c8 ff	 or	 eax, -1
  00017	5e		 pop	 esi

; 46   : 	return iItemCount;
; 47   : }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
$LN6@GetJewelCo:

; 30   : 
; 31   : 	int iItemType;
; 32   : 
; 33   : 	switch ( iJewelType )

  0001a	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  0001d	83 e8 00	 sub	 eax, 0
  00020	74 15		 je	 SHORT $LN3@GetJewelCo
  00022	48		 dec	 eax

; 37   : 			break;
; 38   : 		case 1:
; 39   : 			iItemType = ITEMGET(14,14);
; 40   : 			break;
; 41   : 		default:
; 42   : 			return -1;

  00023	75 ef		 jne	 SHORT $LN9@GetJewelCo

; 43   : 	}	
; 44   : 	
; 45   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00025	b8 0e 1c 00 00	 mov	 eax, 7182		; 00001c0eH
  0002a	50		 push	 eax
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  00031	83 c4 08	 add	 esp, 8
  00034	5e		 pop	 esi

; 46   : 	return iItemCount;
; 47   : }

  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
$LN3@GetJewelCo:

; 34   : 	{
; 35   : 		case 0:
; 36   : 			iItemType = ITEMGET(14,13);

  00037	b8 0d 1c 00 00	 mov	 eax, 7181		; 00001c0dH

; 43   : 	}	
; 44   : 	
; 45   : 	int iItemCount = gObjGetItemCountInIventory(iIndex, iItemType);

  0003c	50		 push	 eax
  0003d	56		 push	 esi
  0003e	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  00043	83 c4 08	 add	 esp, 8
  00046	5e		 pop	 esi

; 46   : 	return iItemCount;
; 47   : }

  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?GetJewelCount@CJewelMixSystem@@SAHHH@Z ENDP		; CJewelMixSystem::GetJewelCount
_TEXT	ENDS
PUBLIC	?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z	; CJewelMixSystem::GetJewelCountPerLevel
; Function compile flags: /Ogtp
;	COMDAT ?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z
_TEXT	SEGMENT
_iJewelType$ = 8					; size = 4
_iJewelLevel$ = 12					; size = 4
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z PROC	; CJewelMixSystem::GetJewelCountPerLevel, COMDAT

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 69   : 	if ( !CHECK_LIMIT(iJewelLevel, 3) )

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	78 0c		 js	 SHORT $LN11@GetJewelCo@2
  0000a	33 c9		 xor	 ecx, ecx
  0000c	83 f8 02	 cmp	 eax, 2
  0000f	0f 9e c1	 setle	 cl
  00012	85 c9		 test	 ecx, ecx
  00014	75 05		 jne	 SHORT $LN6@GetJewelCo@2
$LN11@GetJewelCo@2:

; 70   : 		return -1;

  00016	83 c8 ff	 or	 eax, -1

; 84   : 	}
; 85   : 
; 86   : 	return iJewelCount;
; 87   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN6@GetJewelCo@2:

; 71   : 
; 72   : 	int iJewelCount = 0;
; 73   : 
; 74   : 	switch ( iJewelType )

  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _iJewelType$[ebp]
  0001e	83 e9 00	 sub	 ecx, 0
  00021	74 0e		 je	 SHORT $LN3@GetJewelCo@2
  00023	49		 dec	 ecx

; 81   : 			break;
; 82   : 		default:
; 83   : 			return -1;

  00024	75 f0		 jne	 SHORT $LN11@GetJewelCo@2

; 78   : 			break;
; 79   : 		case 1:
; 80   : 			iJewelCount = g_JewelMixInfo[1][iJewelLevel].m_iJewelCount;

  00026	c1 e0 04	 shl	 eax, 4
  00029	8b 80 30 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax+48]

; 84   : 	}
; 85   : 
; 86   : 	return iJewelCount;
; 87   : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN3@GetJewelCo@2:

; 75   : 	{
; 76   : 		case 0:
; 77   : 			iJewelCount = g_JewelMixInfo[0][iJewelLevel].m_iJewelCount;

  00031	c1 e0 04	 shl	 eax, 4
  00034	8b 80 00 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax]

; 84   : 	}
; 85   : 
; 86   : 	return iJewelCount;
; 87   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?GetJewelCountPerLevel@CJewelMixSystem@@SAHHH@Z ENDP	; CJewelMixSystem::GetJewelCountPerLevel
_TEXT	ENDS
PUBLIC	??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ ; `string'
PUBLIC	??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ ; `string'
PUBLIC	??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ ; `string'
PUBLIC	??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ ; `string'
PUBLIC	??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ ; `string'
PUBLIC	??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ ; `string'
PUBLIC	??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ ; `string'
PUBLIC	?MixJewel@CJewelMixSystem@@SAHHHH@Z		; CJewelMixSystem::MixJewel
EXTRN	?GCMoneySend@@YAXHK@Z:PROC			; GCMoneySend
EXTRN	?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z:PROC	; ItemSerialCreateSend
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?Clear@CItem@@QAEXXZ:PROC			; CItem::Clear
EXTRN	?gObjInventoryItemSet@@YAXHHE@Z:PROC		; gObjInventoryItemSet
EXTRN	?IsItem@CItem@@QAEHXZ:PROC			; CItem::IsItem
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	?GCAnsJewelMix@@YAXHH@Z:PROC			; GCAnsJewelMix
EXTRN	?MsgOutput@@YAXHPADZZ:PROC			; MsgOutput
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
EXTRN	?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z:PROC ; gObjCheckInventorySerial0Item
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
;	COMDAT ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
CONST	SEGMENT
??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@ DB '['
	DB	'JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCoun'
	DB	't:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / '
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
CONST	SEGMENT
??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@ DB '['
	DB	'JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Ser'
	DB	'ial:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
CONST	SEGMENT
??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@ DB '['
	DB	'JewelMix] [%s][%s] lack of jewel to mix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
CONST	SEGMENT
??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@ DB '['
	DB	'JewelMix] [%s][%s] iMixType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
CONST	SEGMENT
??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@ DB '['
	DB	'JewelMix] [%s][%s] Mix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
CONST	SEGMENT
??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@ DB '['
	DB	'JewelMix] [%s][%s] Chaos Mix is already working', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
CONST	SEGMENT
??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?MixJewel@CJewelMixSystem@@SAHHHH@Z
_TEXT	SEGMENT
_iChangeType$ = -28					; size = 4
_bItemDelOK$ = -24					; size = 4
_iItemType$ = -20					; size = 4
_iMixMoney$ = -16					; size = 4
_iJewelCount$ = -12					; size = 4
_iDelJewelCount$ = -8					; size = 4
_x$153524 = -4						; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iMixType$ = 16						; size = 4
?MixJewel@CJewelMixSystem@@SAHHHH@Z PROC		; CJewelMixSystem::MixJewel, COMDAT

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	57		 push	 edi

; 92   : 	if ( !gObjIsConnected(iIndex))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN15@MixJewel
  00017	5f		 pop	 edi

; 229  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN15@MixJewel:
  0001c	56		 push	 esi

; 93   : 		return FALSE;
; 94   : 
; 95   : 	if ( gObjCheckInventorySerial0Item(&gObj[iIndex]))

  0001d	8b f7		 mov	 esi, edi
  0001f	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  00025	8d 86 00 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00031	83 c4 04	 add	 esp, 4
  00034	85 c0		 test	 eax, eax
  00036	74 43		 je	 SHORT $LN14@MixJewel

; 96   : 	{
; 97   : 		MsgOutput(iIndex, lMsg.Get(MSGGET(13,26)));

  00038	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00042	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00047	50		 push	 eax
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

; 98   : 		GCAnsJewelMix(iIndex, 4);

  0004e	6a 04		 push	 4
  00050	57		 push	 edi
  00051	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 99   : 
; 100  : 		LogAdd(LOG_BLACK, "[ANTI-HACK][Serial 0 Item] [Mix Jewel] (%s)(%s)",
; 101  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00056	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0005c	51		 push	 ecx
  0005d	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00063	52		 push	 edx
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OJHOMLLG@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLMix?5@
  00069	6a 00		 push	 0
  0006b	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00070	83 c4 20	 add	 esp, 32			; 00000020H
  00073	5e		 pop	 esi

; 102  : 
; 103  : 		return FALSE;

  00074	33 c0		 xor	 eax, eax
  00076	5f		 pop	 edi

; 229  : }

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN14@MixJewel:

; 104  : 	}
; 105  : 
; 106  : 	if ( gObj[iIndex].ChaosLock == TRUE )

  0007b	b8 01 00 00 00	 mov	 eax, 1
  00080	39 86 ec 0c 00
	00		 cmp	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], eax
  00086	75 2d		 jne	 SHORT $LN13@MixJewel

; 107  : 	{
; 108  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] Chaos Mix is already working",
; 109  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00088	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0008e	50		 push	 eax
  0008f	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00095	51		 push	 ecx
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  0009b	6a 00		 push	 0
  0009d	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 110  : 
; 111  : 		GCAnsJewelMix(iIndex, 0);

  000a2	6a 00		 push	 0
  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  000aa	83 c4 18	 add	 esp, 24			; 00000018H
  000ad	5e		 pop	 esi

; 112  : 		return FALSE;

  000ae	33 c0		 xor	 eax, eax
  000b0	5f		 pop	 edi

; 229  : }

  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
$LN13@MixJewel:

; 113  : 	}
; 114  : 
; 115  : 	gObj[iIndex].ChaosLock = TRUE;
; 116  : 
; 117  : 	if ( !CHECK_LIMIT(iJewelType, 2) )

  000b5	8b 4d 0c	 mov	 ecx, DWORD PTR _iJewelType$[ebp]
  000b8	53		 push	 ebx
  000b9	33 db		 xor	 ebx, ebx
  000bb	89 86 ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], eax
  000c1	3b cb		 cmp	 ecx, ebx
  000c3	7c 0b		 jl	 SHORT $LN25@MixJewel
  000c5	33 d2		 xor	 edx, edx
  000c7	3b c8		 cmp	 ecx, eax
  000c9	0f 9e c2	 setle	 dl
  000cc	3b d3		 cmp	 edx, ebx
  000ce	75 34		 jne	 SHORT $LN12@MixJewel
$LN25@MixJewel:

; 118  : 	{
; 119  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] Mix iJewelType is out of bound : %d",
; 120  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);

  000d0	51		 push	 ecx
  000d1	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  000d7	50		 push	 eax
  000d8	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  000de	51		 push	 ecx
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0DI@EAGHMBJE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5iJewelTy@
  000e4	53		 push	 ebx
  000e5	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 121  : 
; 122  : 		gObj[iIndex].ChaosLock = FALSE;
; 123  : 		GCAnsJewelMix(iIndex, 2);

  000ea	6a 02		 push	 2
  000ec	57		 push	 edi
  000ed	89 9e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ebx
  000f3	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  000f8	83 c4 1c	 add	 esp, 28			; 0000001cH
  000fb	5b		 pop	 ebx
  000fc	5e		 pop	 esi

; 124  : 		return FALSE;

  000fd	33 c0		 xor	 eax, eax
  000ff	5f		 pop	 edi

; 229  : }

  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c3		 ret	 0
$LN12@MixJewel:

; 125  : 	}
; 126  : 
; 127  : 	if ( !CHECK_LIMIT(iMixType, 3))

  00104	8b 45 10	 mov	 eax, DWORD PTR _iMixType$[ebp]
  00107	3b c3		 cmp	 eax, ebx
  00109	7c 0c		 jl	 SHORT $LN26@MixJewel
  0010b	33 d2		 xor	 edx, edx
  0010d	83 f8 02	 cmp	 eax, 2
  00110	0f 9e c2	 setle	 dl
  00113	3b d3		 cmp	 edx, ebx
  00115	75 34		 jne	 SHORT $LN11@MixJewel
$LN26@MixJewel:

; 128  : 	{
; 129  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] iMixType is out of bound : %d",
; 130  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iMixType);

  00117	50		 push	 eax
  00118	8d 96 6f 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0011e	52		 push	 edx
  0011f	8d 86 64 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00125	50		 push	 eax
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DMKIAJAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iMixType?5is?5@
  0012b	53		 push	 ebx
  0012c	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 131  : 
; 132  : 		gObj[iIndex].ChaosLock = FALSE;
; 133  : 		GCAnsJewelMix(iIndex, 3);

  00131	6a 03		 push	 3
  00133	57		 push	 edi
  00134	89 9e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ebx
  0013a	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0013f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00142	5b		 pop	 ebx
  00143	5e		 pop	 esi

; 134  : 		return FALSE;

  00144	33 c0		 xor	 eax, eax
  00146	5f		 pop	 edi

; 229  : }

  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
$LN11@MixJewel:

; 135  : 	}
; 136  : 
; 137  : 	int iItemType = g_JewelMixInfo[iJewelType][iMixType].m_iSourceType;

  0014b	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0014e	03 c1		 add	 eax, ecx
  00150	c1 e0 04	 shl	 eax, 4

; 138  : 	int iJewelCount = g_JewelMixInfo[iJewelType][iMixType].m_iJewelCount;

  00153	8b 98 00 00 00
	00		 mov	 ebx, DWORD PTR _g_JewelMixInfo[eax]
  00159	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR _g_JewelMixInfo[eax+8]

; 139  : 	int iMixMoney = g_JewelMixInfo[iJewelType][iMixType].m_iMixMoney;

  0015f	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR _g_JewelMixInfo[eax+4]

; 140  : 	int iChangeType = g_JewelMixInfo[iJewelType][iMixType].m_iChangeType;

  00165	8b 80 0c 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax+12]
  0016b	89 4d ec	 mov	 DWORD PTR _iItemType$[ebp], ecx
  0016e	89 5d f4	 mov	 DWORD PTR _iJewelCount$[ebp], ebx
  00171	89 55 f0	 mov	 DWORD PTR _iMixMoney$[ebp], edx
  00174	89 45 e4	 mov	 DWORD PTR _iChangeType$[ebp], eax

; 141  : 
; 142  : 	if ( iJewelCount <= 0 )

  00177	85 db		 test	 ebx, ebx
  00179	7f 1e		 jg	 SHORT $LN10@MixJewel

; 143  : 	{
; 144  : 		gObj[iIndex].ChaosLock = FALSE;
; 145  : 		GCAnsJewelMix(iIndex, 0);

  0017b	6a 00		 push	 0
  0017d	57		 push	 edi
  0017e	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00188	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0018d	83 c4 08	 add	 esp, 8
  00190	5b		 pop	 ebx
  00191	5e		 pop	 esi

; 146  : 		return FALSE;

  00192	33 c0		 xor	 eax, eax
  00194	5f		 pop	 edi

; 229  : }

  00195	8b e5		 mov	 esp, ebp
  00197	5d		 pop	 ebp
  00198	c3		 ret	 0
$LN10@MixJewel:

; 147  : 	}
; 148  : 
; 149  : 	int iUserJewelCount = gObjGetItemCountInIventory(iIndex, iItemType);

  00199	51		 push	 ecx
  0019a	57		 push	 edi
  0019b	e8 00 00 00 00	 call	 ?gObjGetItemCountInIventory@@YAHHH@Z ; gObjGetItemCountInIventory
  001a0	83 c4 08	 add	 esp, 8

; 150  : 
; 151  : 	if ( iJewelCount > iUserJewelCount )

  001a3	3b d8		 cmp	 ebx, eax
  001a5	7e 3a		 jle	 SHORT $LN9@MixJewel

; 152  : 	{
; 153  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] lack of jewel to mix : %d / %d",
; 154  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 155  : 			iUserJewelCount, iJewelCount);

  001a7	53		 push	 ebx
  001a8	50		 push	 eax
  001a9	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  001af	51		 push	 ecx
  001b0	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  001b6	52		 push	 edx
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@MDOHHKOF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  001bc	6a 00		 push	 0
  001be	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 156  : 
; 157  : 		gObj[iIndex].ChaosLock = FALSE;
; 158  : 		GCAnsJewelMix(iIndex, 4);

  001c3	6a 04		 push	 4
  001c5	57		 push	 edi
  001c6	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  001d0	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  001d5	83 c4 20	 add	 esp, 32			; 00000020H
  001d8	5b		 pop	 ebx
  001d9	5e		 pop	 esi

; 159  : 		return FALSE;

  001da	33 c0		 xor	 eax, eax
  001dc	5f		 pop	 edi

; 229  : }

  001dd	8b e5		 mov	 esp, ebp
  001df	5d		 pop	 ebp
  001e0	c3		 ret	 0
$LN9@MixJewel:

; 160  : 	}
; 161  : 
; 162  : 	if ( iMixMoney > gObj[iIndex].Money )

  001e1	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176]
  001e7	8b 4d f0	 mov	 ecx, DWORD PTR _iMixMoney$[ebp]
  001ea	3b c8		 cmp	 ecx, eax
  001ec	7e 3a		 jle	 SHORT $LN8@MixJewel

; 163  : 	{
; 164  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] lack of money to mix : %d / %d",
; 165  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 166  : 			gObj[iIndex].Money, iMixMoney);

  001ee	51		 push	 ecx
  001ef	50		 push	 eax
  001f0	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  001f6	50		 push	 eax
  001f7	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  001fd	51		 push	 ecx
  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@POEJCDHP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  00203	6a 00		 push	 0
  00205	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 167  : 
; 168  : 		gObj[iIndex].ChaosLock = FALSE;
; 169  : 		GCAnsJewelMix(iIndex, 5);

  0020a	6a 05		 push	 5
  0020c	57		 push	 edi
  0020d	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00217	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0021c	83 c4 20	 add	 esp, 32			; 00000020H
  0021f	5b		 pop	 ebx
  00220	5e		 pop	 esi

; 170  : 		return FALSE;

  00221	33 c0		 xor	 eax, eax
  00223	5f		 pop	 edi

; 229  : }

  00224	8b e5		 mov	 esp, ebp
  00226	5d		 pop	 ebp
  00227	c3		 ret	 0
$LN8@MixJewel:

; 171  : 	}
; 172  : 
; 173  : 	int iDelJewelCount = 0;

  00228	33 c0		 xor	 eax, eax
  0022a	89 45 f8	 mov	 DWORD PTR _iDelJewelCount$[ebp], eax

; 174  : 	BOOL bItemDelOK = FALSE;

  0022d	89 45 e8	 mov	 DWORD PTR _bItemDelOK$[ebp], eax

; 175  : 
; 176  : 	for ( int x= INVETORY_WEAR_SIZE ; x< MAIN_INVENTORY_SIZE; x++)

  00230	c7 45 fc 0c 00
	00 00		 mov	 DWORD PTR _x$153524[ebp], 12 ; 0000000cH
  00237	bb e0 07 00 00	 mov	 ebx, 2016		; 000007e0H
  0023c	8d 64 24 00	 npad	 4
$LL7@MixJewel:

; 177  : 	{
; 178  : 		if ( gObj[iIndex].pInventory[x].IsItem() == TRUE )

  00240	8b 8e 8c 0c 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3212]
  00246	03 cb		 add	 ecx, ebx
  00248	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  0024d	83 f8 01	 cmp	 eax, 1
  00250	75 61		 jne	 SHORT $LN6@MixJewel

; 179  : 		{
; 180  : 			if ( gObj[iIndex].pInventory[x].m_Type == iItemType )

  00252	8b 96 8c 0c 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3212]
  00258	0f bf 4c 13 06	 movsx	 ecx, WORD PTR [ebx+edx+6]
  0025d	8d 04 13	 lea	 eax, DWORD PTR [ebx+edx]
  00260	3b 4d ec	 cmp	 ecx, DWORD PTR _iItemType$[ebp]
  00263	75 4e		 jne	 SHORT $LN6@MixJewel

; 181  : 			{
; 182  : 				LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] Mix - Delete Jewel, Type:%d, Level:%d, Serial:%d",
; 183  : 					gObj[iIndex].AccountID, gObj[iIndex].Name,
; 184  : 					gObj[iIndex].pInventory[x].m_Type,
; 185  : 					gObj[iIndex].pInventory[x].m_Level,
; 186  : 					gObj[iIndex].pInventory[x].m_Number);

  00265	8b 10		 mov	 edx, DWORD PTR [eax]
  00267	0f bf 40 08	 movsx	 eax, WORD PTR [eax+8]
  0026b	52		 push	 edx
  0026c	50		 push	 eax
  0026d	51		 push	 ecx
  0026e	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  00274	51		 push	 ecx
  00275	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  0027b	52		 push	 edx
  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JFAKFOHK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Mix?5?9?5Delete@
  00281	6a 00		 push	 0
  00283	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 187  : 
; 188  : 				gObjInventoryItemSet(iIndex, x, 0xFF);

  00288	8b 45 fc	 mov	 eax, DWORD PTR _x$153524[ebp]
  0028b	68 ff 00 00 00	 push	 255			; 000000ffH
  00290	50		 push	 eax
  00291	57		 push	 edi
  00292	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 189  : 				gObj[iIndex].pInventory[x].Clear();

  00297	8b 8e 8c 0c 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3212]
  0029d	83 c4 28	 add	 esp, 40			; 00000028H
  002a0	03 cb		 add	 ecx, ebx
  002a2	e8 00 00 00 00	 call	 ?Clear@CItem@@QAEXXZ	; CItem::Clear

; 190  : 				iDelJewelCount++;

  002a7	8b 45 f8	 mov	 eax, DWORD PTR _iDelJewelCount$[ebp]
  002aa	40		 inc	 eax
  002ab	89 45 f8	 mov	 DWORD PTR _iDelJewelCount$[ebp], eax

; 191  : 
; 192  : 				if ( iJewelCount <= iDelJewelCount )

  002ae	39 45 f4	 cmp	 DWORD PTR _iJewelCount$[ebp], eax
  002b1	7e 1a		 jle	 SHORT $LN23@MixJewel
$LN6@MixJewel:

; 175  : 
; 176  : 	for ( int x= INVETORY_WEAR_SIZE ; x< MAIN_INVENTORY_SIZE; x++)

  002b3	ff 45 fc	 inc	 DWORD PTR _x$153524[ebp]
  002b6	81 c3 a8 00 00
	00		 add	 ebx, 168		; 000000a8H
  002bc	81 fb e0 31 00
	00		 cmp	 ebx, 12768		; 000031e0H
  002c2	0f 8c 78 ff ff
	ff		 jl	 $LL7@MixJewel

; 191  : 
; 192  : 				if ( iJewelCount <= iDelJewelCount )

  002c8	8b 5d e8	 mov	 ebx, DWORD PTR _bItemDelOK$[ebp]
  002cb	eb 05		 jmp	 SHORT $LN5@MixJewel
$LN23@MixJewel:

; 193  : 				{
; 194  : 					bItemDelOK = TRUE;

  002cd	bb 01 00 00 00	 mov	 ebx, 1
$LN5@MixJewel:

; 195  : 					break;
; 196  : 				}
; 197  : 			}
; 198  : 		}
; 199  : 	}
; 200  : 
; 201  : 	GCItemListSend(iIndex);

  002d2	57		 push	 edi
  002d3	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend
  002d8	83 c4 04	 add	 esp, 4

; 202  : 
; 203  : 	if ( bItemDelOK == FALSE )

  002db	85 db		 test	 ebx, ebx
  002dd	75 3a		 jne	 SHORT $LN1@MixJewel

; 204  : 	{
; 205  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] lack of jewel to mix (in deleting) : %d / %d",
; 206  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 207  : 			iDelJewelCount, iJewelCount);

  002df	8b 4d f4	 mov	 ecx, DWORD PTR _iJewelCount$[ebp]
  002e2	8b 55 f8	 mov	 edx, DWORD PTR _iDelJewelCount$[ebp]
  002e5	51		 push	 ecx
  002e6	52		 push	 edx
  002e7	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  002ed	50		 push	 eax
  002ee	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  002f4	51		 push	 ecx
  002f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@CGBJCOEC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5jewe@
  002fa	53		 push	 ebx
  002fb	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 208  : 
; 209  : 		gObj[iIndex].ChaosLock = FALSE;
; 210  : 		GCAnsJewelMix(iIndex, 0);

  00300	53		 push	 ebx
  00301	57		 push	 edi
  00302	89 9e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ebx
  00308	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix
  0030d	83 c4 20	 add	 esp, 32			; 00000020H
  00310	5b		 pop	 ebx
  00311	5e		 pop	 esi

; 211  : 		return FALSE;

  00312	33 c0		 xor	 eax, eax
  00314	5f		 pop	 edi

; 229  : }

  00315	8b e5		 mov	 esp, ebp
  00317	5d		 pop	 ebp
  00318	c3		 ret	 0
$LN1@MixJewel:

; 212  : 	}
; 213  : 
; 214  : 	ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X,
; 215  : 						gObj[iIndex].Y, iChangeType,
; 216  : 						iMixType, 0, 0, 0, 0,
; 217  : 						iIndex, 0, 0);

  00319	8b 55 10	 mov	 edx, DWORD PTR _iMixType$[ebp]
  0031c	8b 45 e4	 mov	 eax, DWORD PTR _iChangeType$[ebp]
  0031f	0f b6 8e 06 01
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+262]
  00326	6a 00		 push	 0
  00328	6a 00		 push	 0
  0032a	57		 push	 edi
  0032b	6a 00		 push	 0
  0032d	6a 00		 push	 0
  0032f	6a 00		 push	 0
  00331	6a 00		 push	 0
  00333	52		 push	 edx
  00334	0f b6 96 04 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+260]
  0033b	50		 push	 eax
  0033c	51		 push	 ecx
  0033d	52		 push	 edx
  0033e	68 eb 00 00 00	 push	 235			; 000000ebH
  00343	57		 push	 edi
  00344	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

; 218  : 
; 219  : 	gObj[iIndex].ChaosLock = FALSE;
; 220  : 	gObj[iIndex].Money -= iMixMoney;

  00349	8b 45 f0	 mov	 eax, DWORD PTR _iMixMoney$[ebp]
  0034c	29 86 b0 00 00
	00		 sub	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176], eax
  00352	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176]

; 221  : 	GCMoneySend(iIndex, gObj[iIndex].Money);

  00358	50		 push	 eax
  00359	57		 push	 edi
  0035a	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00364	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 222  : 	GCAnsJewelMix(iIndex, 1);

  00369	6a 01		 push	 1
  0036b	57		 push	 edi
  0036c	e8 00 00 00 00	 call	 ?GCAnsJewelMix@@YAXHH@Z	; GCAnsJewelMix

; 223  : 
; 224  : 	LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] jewel mix succeed : ItemType:%d, JewelCount:%d",
; 225  : 		gObj[iIndex].AccountID, gObj[iIndex].Name,
; 226  : 		iItemType, iJewelCount);

  00371	8b 4d f4	 mov	 ecx, DWORD PTR _iJewelCount$[ebp]
  00374	8b 55 ec	 mov	 edx, DWORD PTR _iItemType$[ebp]
  00377	83 c4 44	 add	 esp, 68			; 00000044H
  0037a	51		 push	 ecx
  0037b	52		 push	 edx
  0037c	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  00382	50		 push	 eax
  00383	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00389	51		 push	 ecx
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@HHDMIPHA@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5mix?5su@
  0038f	6a 00		 push	 0
  00391	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00396	83 c4 18	 add	 esp, 24			; 00000018H
  00399	5b		 pop	 ebx
  0039a	5e		 pop	 esi

; 227  : 
; 228  : 	return TRUE;

  0039b	b8 01 00 00 00	 mov	 eax, 1
  003a0	5f		 pop	 edi

; 229  : }

  003a1	8b e5		 mov	 esp, ebp
  003a3	5d		 pop	 ebp
  003a4	c3		 ret	 0
?MixJewel@CJewelMixSystem@@SAHHHH@Z ENDP		; CJewelMixSystem::MixJewel
_TEXT	ENDS
PUBLIC	??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ ; `string'
PUBLIC	??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ ; `string'
PUBLIC	??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ ; `string'
PUBLIC	??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ ; `string'
PUBLIC	??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ ; `string'
PUBLIC	??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ ; `string'
PUBLIC	??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ ; `string'
PUBLIC	??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ ; `string'
PUBLIC	??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ ; `string'
PUBLIC	??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ ; `string'
PUBLIC	??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ ; `string'
PUBLIC	?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z		; CJewelMixSystem::UnMixJewel
EXTRN	?GCInventoryItemDeleteSend@@YAXHEE@Z:PROC	; GCInventoryItemDeleteSend
EXTRN	?gObjInventoryDeleteItem@@YAEHH@Z:PROC		; gObjInventoryDeleteItem
EXTRN	?GCAnsJewelUnMix@@YAXHH@Z:PROC			; GCAnsJewelUnMix
;	COMDAT ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
CONST	SEGMENT
??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@ DB '['
	DB	'JewelMix] [%s][%s] Item to unmix is not exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
CONST	SEGMENT
??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@ DB '['
	DB	'JewelMix] [%s][%s] iJewelLevel is different from request : %d'
	DB	' / %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCou'
	DB	'nt:%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
CONST	SEGMENT
??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@ DB '['
	DB	'JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCo'
	DB	'unt:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
CONST	SEGMENT
??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@ DB '['
	DB	'JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, S'
	DB	'erial:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
CONST	SEGMENT
??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@ DB '['
	DB	'JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
CONST	SEGMENT
??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@ DB '['
	DB	'JewelMix] [%s][%s] lack of money to unmix : %d / %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
CONST	SEGMENT
??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@ DB '['
	DB	'JewelMix] [%s][%s] iItemType is different from request : %d /'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
CONST	SEGMENT
??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
CONST	SEGMENT
??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@ DB '['
	DB	'JewelMix] [%s][%s] iInventoryPos is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
CONST	SEGMENT
??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@ DB '['
	DB	'JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
CONST	SEGMENT
??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@ DB '['
	DB	'ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z
_TEXT	SEGMENT
_iChangeType$ = -28					; size = 4
tv549 = -24						; size = 4
tv548 = -20						; size = 4
_iItemType$ = -16					; size = 4
tv564 = -12						; size = 4
_bItemCrtOK$ = -12					; size = 4
tv574 = -8						; size = 4
_x$153578 = -8						; size = 4
_iJewelCount$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_iJewelType$ = 12					; size = 4
_iJewelLevel$ = 16					; size = 4
_iInventoryPos$ = 20					; size = 4
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z PROC		; CJewelMixSystem::UnMixJewel, COMDAT

; 233  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	57		 push	 edi

; 234  : 	if ( !gObjIsConnected(iIndex))

  00007	8b 7d 08	 mov	 edi, DWORD PTR _iIndex$[ebp]
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00010	83 c4 04	 add	 esp, 4
  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $LN24@UnMixJewel
  00017	5f		 pop	 edi

; 421  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN24@UnMixJewel:
  0001c	56		 push	 esi

; 235  : 		return FALSE;
; 236  : 
; 237  : 	if ( gObjCheckInventorySerial0Item(&gObj[iIndex]))

  0001d	8b f7		 mov	 esi, edi
  0001f	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  00025	8d 86 00 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?gObjCheckInventorySerial0Item@@YAHPAUOBJECTSTRUCT@@@Z ; gObjCheckInventorySerial0Item
  00031	83 c4 04	 add	 esp, 4
  00034	85 c0		 test	 eax, eax
  00036	74 43		 je	 SHORT $LN23@UnMixJewel

; 238  : 	{
; 239  : 		MsgOutput(iIndex, lMsg.Get(MSGGET(13,26)));

  00038	68 1a 0d 00 00	 push	 3354			; 00000d1aH
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00042	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00047	50		 push	 eax
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 ?MsgOutput@@YAXHPADZZ	; MsgOutput

; 240  : 		GCAnsJewelUnMix(iIndex, 0);

  0004e	6a 00		 push	 0
  00050	57		 push	 edi
  00051	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix

; 241  : 
; 242  : 		LogAdd(LOG_BLACK, "[ANTI-HACK][Serial 0 Item] [UnMix Jewel] (%s)(%s)",
; 243  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00056	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0005c	51		 push	 ecx
  0005d	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00063	52		 push	 edx
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@GMJDADNJ@?$FLANTI?9HACK?$FN?$FLSerial?50?5Item?$FN?5?$FLUnMi@
  00069	6a 00		 push	 0
  0006b	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00070	83 c4 20	 add	 esp, 32			; 00000020H
  00073	5e		 pop	 esi

; 244  : 
; 245  : 		return FALSE;

  00074	33 c0		 xor	 eax, eax
  00076	5f		 pop	 edi

; 421  : }

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN23@UnMixJewel:

; 246  : 	}
; 247  : 
; 248  : 	if ( gObj[iIndex].ChaosLock == TRUE )

  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	39 8e ec 0c 00
	00		 cmp	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ecx
  00086	75 2d		 jne	 SHORT $LN22@UnMixJewel

; 249  : 	{
; 250  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] Chaos Mix is already working",
; 251  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00088	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0008e	50		 push	 eax
  0008f	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00095	51		 push	 ecx
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@PNODFJDP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Chaos?5Mix?5is@
  0009b	6a 00		 push	 0
  0009d	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 252  : 
; 253  : 		GCAnsJewelUnMix(iIndex, 0);

  000a2	6a 00		 push	 0
  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  000aa	83 c4 18	 add	 esp, 24			; 00000018H
  000ad	5e		 pop	 esi

; 254  : 		return FALSE;

  000ae	33 c0		 xor	 eax, eax
  000b0	5f		 pop	 edi

; 421  : }

  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
$LN22@UnMixJewel:

; 255  : 	}
; 256  : 
; 257  : 	gObj[iIndex].ChaosLock = TRUE;
; 258  : 
; 259  : 	if ( !CHECK_LIMIT(iJewelType, 2) )

  000b5	8b 45 0c	 mov	 eax, DWORD PTR _iJewelType$[ebp]
  000b8	53		 push	 ebx
  000b9	33 db		 xor	 ebx, ebx
  000bb	89 8e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ecx
  000c1	3b c3		 cmp	 eax, ebx
  000c3	7c 0b		 jl	 SHORT $LN42@UnMixJewel
  000c5	33 d2		 xor	 edx, edx
  000c7	3b c1		 cmp	 eax, ecx
  000c9	0f 9e c2	 setle	 dl
  000cc	3b d3		 cmp	 edx, ebx
  000ce	75 34		 jne	 SHORT $LN21@UnMixJewel
$LN42@UnMixJewel:

; 260  : 	{
; 261  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] UnMix iJewelType is out of bound : %d",
; 262  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iJewelType);

  000d0	50		 push	 eax
  000d1	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  000d7	50		 push	 eax
  000d8	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  000de	51		 push	 ecx
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MGPJIBIK@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5iJewel@
  000e4	53		 push	 ebx
  000e5	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 263  : 
; 264  : 		gObj[iIndex].ChaosLock = FALSE;
; 265  : 		GCAnsJewelUnMix(iIndex, 2);

  000ea	6a 02		 push	 2
  000ec	57		 push	 edi
  000ed	89 9e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ebx
  000f3	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  000f8	83 c4 1c	 add	 esp, 28			; 0000001cH
  000fb	5b		 pop	 ebx
  000fc	5e		 pop	 esi

; 307  : 		return FALSE;

  000fd	33 c0		 xor	 eax, eax
  000ff	5f		 pop	 edi

; 421  : }

  00100	8b e5		 mov	 esp, ebp
  00102	5d		 pop	 ebp
  00103	c3		 ret	 0
$LN21@UnMixJewel:

; 266  : 		return FALSE;
; 267  : 	}
; 268  : 
; 269  : 	if ( !CHECK_LIMIT(iInventoryPos, MAIN_INVENTORY_SIZE))

  00104	8b 45 14	 mov	 eax, DWORD PTR _iInventoryPos$[ebp]
  00107	3b c3		 cmp	 eax, ebx
  00109	7c 0c		 jl	 SHORT $LN43@UnMixJewel
  0010b	33 c9		 xor	 ecx, ecx
  0010d	83 f8 4b	 cmp	 eax, 75			; 0000004bH
  00110	0f 9e c1	 setle	 cl
  00113	3b cb		 cmp	 ecx, ebx
  00115	75 34		 jne	 SHORT $LN20@UnMixJewel
$LN43@UnMixJewel:

; 270  : 	{
; 271  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] iInventoryPos is out of bound : %d",
; 272  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryPos);

  00117	50		 push	 eax
  00118	8d 96 6f 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0011e	52		 push	 edx
  0011f	8d 86 64 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00125	50		 push	 eax
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@EGBEHFFJ@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryPo@
  0012b	53		 push	 ebx
  0012c	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 273  : 
; 274  : 		gObj[iIndex].ChaosLock = FALSE;
; 275  : 		GCAnsJewelUnMix(iIndex, 5);

  00131	6a 05		 push	 5
  00133	57		 push	 edi
  00134	89 9e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ebx
  0013a	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0013f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00142	5b		 pop	 ebx
  00143	5e		 pop	 esi

; 307  : 		return FALSE;

  00144	33 c0		 xor	 eax, eax
  00146	5f		 pop	 edi

; 421  : }

  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
$LN20@UnMixJewel:

; 276  : 		return FALSE;
; 277  : 	}
; 278  : 
; 279  : 	int iInventoryItemType;
; 280  : 	int iInventoryItemLevel;
; 281  : 
; 282  : 	if ( gObj[iIndex].pInventory[iInventoryPos].IsItem() == TRUE )

  0014b	8b 8e 8c 0c 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3212]
  00151	8b d8		 mov	 ebx, eax
  00153	69 db a8 00 00
	00		 imul	 ebx, 168		; 000000a8H
  00159	03 cb		 add	 ecx, ebx
  0015b	e8 00 00 00 00	 call	 ?IsItem@CItem@@QAEHXZ	; CItem::IsItem
  00160	83 f8 01	 cmp	 eax, 1
  00163	0f 85 f8 02 00
	00		 jne	 $LN19@UnMixJewel

; 283  : 	{
; 284  : 		if ( gObj[iIndex].pInventory[iInventoryPos].m_Level == iJewelLevel )

  00169	03 9e 8c 0c 00
	00		 add	 ebx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3212]
  0016f	8b 45 10	 mov	 eax, DWORD PTR _iJewelLevel$[ebp]
  00172	0f bf 53 08	 movsx	 edx, WORD PTR [ebx+8]
  00176	89 5d f4	 mov	 DWORD PTR tv564[ebp], ebx
  00179	3b d0		 cmp	 edx, eax
  0017b	0f 85 a6 02 00
	00		 jne	 $LN18@UnMixJewel

; 285  : 		{
; 286  : 			iInventoryItemType = gObj[iIndex].pInventory[iInventoryPos].m_Type;

  00181	0f bf 43 06	 movsx	 eax, WORD PTR [ebx+6]
  00185	89 45 f8	 mov	 DWORD PTR tv574[ebp], eax

; 308  : 	}
; 309  : 
; 310  : 	if ( !CHECK_LIMIT(iInventoryItemLevel, 3))

  00188	85 d2		 test	 edx, edx
  0018a	78 0c		 js	 SHORT $LN44@UnMixJewel
  0018c	33 c0		 xor	 eax, eax
  0018e	83 fa 02	 cmp	 edx, 2
  00191	0f 9e c0	 setle	 al
  00194	85 c0		 test	 eax, eax
  00196	75 39		 jne	 SHORT $LN15@UnMixJewel
$LN44@UnMixJewel:

; 311  : 	{
; 312  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] iInventoryItemLevel is out of bound : %d",
; 313  : 			gObj[iIndex].AccountID, gObj[iIndex].Name, iInventoryItemLevel);

  00198	52		 push	 edx
  00199	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0019f	51		 push	 ecx
  001a0	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  001a6	52		 push	 edx
  001a7	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@DCFEGEBM@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iInventoryIt@
  001ac	6a 00		 push	 0
  001ae	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 314  : 
; 315  : 		gObj[iIndex].ChaosLock = FALSE;
; 316  : 		GCAnsJewelUnMix(iIndex, 3);

  001b3	6a 03		 push	 3
  001b5	57		 push	 edi
  001b6	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  001c0	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  001c5	83 c4 1c	 add	 esp, 28			; 0000001cH
  001c8	5b		 pop	 ebx
  001c9	5e		 pop	 esi
  001ca	33 c0		 xor	 eax, eax
  001cc	5f		 pop	 edi

; 421  : }

  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c3		 ret	 0
$LN15@UnMixJewel:

; 317  : 		return FALSE;
; 318  : 	}
; 319  : 
; 320  : 	int iItemType = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iChangeType;

  001d1	8b 4d 0c	 mov	 ecx, DWORD PTR _iJewelType$[ebp]
  001d4	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  001d7	03 c1		 add	 eax, ecx
  001d9	c1 e0 04	 shl	 eax, 4
  001dc	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR _g_JewelMixInfo[eax+12]

; 321  : 	int iJewelCount = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iJewelCount;

  001e2	8b 98 00 00 00
	00		 mov	 ebx, DWORD PTR _g_JewelMixInfo[eax]

; 322  : 	int iChangeType = g_JewelMixInfo[iJewelType][iInventoryItemLevel].m_iSourceType;

  001e8	8b 80 08 00 00
	00		 mov	 eax, DWORD PTR _g_JewelMixInfo[eax+8]
  001ee	89 45 e4	 mov	 DWORD PTR _iChangeType$[ebp], eax

; 323  : 	int iMixMoney = 1000000;
; 324  : 
; 325  : 	if ( iInventoryItemType != iItemType )

  001f1	8b 45 f8	 mov	 eax, DWORD PTR tv574[ebp]
  001f4	89 4d f0	 mov	 DWORD PTR _iItemType$[ebp], ecx
  001f7	89 5d fc	 mov	 DWORD PTR _iJewelCount$[ebp], ebx
  001fa	3b c1		 cmp	 eax, ecx
  001fc	74 3a		 je	 SHORT $LN14@UnMixJewel

; 326  : 	{
; 327  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] iItemType is different from request : %d / %d",
; 328  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 329  : 			iInventoryItemType, iItemType);

  001fe	51		 push	 ecx
  001ff	50		 push	 eax
  00200	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  00206	51		 push	 ecx
  00207	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  0020d	52		 push	 edx
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0EC@KDMDKBJP@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iItemType?5is@
  00213	6a 00		 push	 0
  00215	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 330  : 
; 331  : 		gObj[iIndex].ChaosLock = FALSE;
; 332  : 		GCAnsJewelUnMix(iIndex, 6);

  0021a	6a 06		 push	 6
  0021c	57		 push	 edi
  0021d	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00227	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0022c	83 c4 20	 add	 esp, 32			; 00000020H
  0022f	5b		 pop	 ebx
  00230	5e		 pop	 esi
  00231	33 c0		 xor	 eax, eax
  00233	5f		 pop	 edi

; 421  : }

  00234	8b e5		 mov	 esp, ebp
  00236	5d		 pop	 ebp
  00237	c3		 ret	 0
$LN14@UnMixJewel:

; 333  : 		return FALSE;
; 334  : 	}
; 335  : 
; 336  : 	if ( iMixMoney > gObj[iIndex].Money )

  00238	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176]
  0023e	3d 40 42 0f 00	 cmp	 eax, 1000000		; 000f4240H
  00243	7d 3e		 jge	 SHORT $LN13@UnMixJewel

; 337  : 	{
; 338  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] lack of money to unmix : %d / %d",
; 339  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 340  : 			gObj[iIndex].Money, iMixMoney);

  00245	68 40 42 0f 00	 push	 1000000			; 000f4240H
  0024a	50		 push	 eax
  0024b	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  00251	50		 push	 eax
  00252	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00258	51		 push	 ecx
  00259	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@DKECPOAO@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5mone@
  0025e	6a 00		 push	 0
  00260	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 341  : 
; 342  : 		gObj[iIndex].ChaosLock = FALSE;
; 343  : 		GCAnsJewelUnMix(iIndex, 8);

  00265	6a 08		 push	 8
  00267	57		 push	 edi
  00268	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00272	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00277	83 c4 20	 add	 esp, 32			; 00000020H
  0027a	5b		 pop	 ebx
  0027b	5e		 pop	 esi
  0027c	33 c0		 xor	 eax, eax
  0027e	5f		 pop	 edi

; 421  : }

  0027f	8b e5		 mov	 esp, ebp
  00281	5d		 pop	 ebp
  00282	c3		 ret	 0
$LN13@UnMixJewel:

; 344  : 		return FALSE;
; 345  : 	}
; 346  : 
; 347  : 	int iEmptyCount = 0;

  00283	8b 86 90 0c 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3216]
  00289	33 c9		 xor	 ecx, ecx
  0028b	83 c0 02	 add	 eax, 2
  0028e	8d 59 10	 lea	 ebx, DWORD PTR [ecx+16]
$LL12@UnMixJewel:

; 350  : 	{
; 351  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  00291	80 78 fe ff	 cmp	 BYTE PTR [eax-2], 255	; 000000ffH
  00295	75 01		 jne	 SHORT $LN11@UnMixJewel

; 352  : 		{
; 353  : 			iEmptyCount++;

  00297	41		 inc	 ecx
$LN11@UnMixJewel:

; 350  : 	{
; 351  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  00298	80 78 ff ff	 cmp	 BYTE PTR [eax-1], 255	; 000000ffH
  0029c	75 01		 jne	 SHORT $LN39@UnMixJewel

; 352  : 		{
; 353  : 			iEmptyCount++;

  0029e	41		 inc	 ecx
$LN39@UnMixJewel:

; 350  : 	{
; 351  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  0029f	80 38 ff	 cmp	 BYTE PTR [eax], 255	; 000000ffH
  002a2	75 01		 jne	 SHORT $LN40@UnMixJewel

; 352  : 		{
; 353  : 			iEmptyCount++;

  002a4	41		 inc	 ecx
$LN40@UnMixJewel:

; 350  : 	{
; 351  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  002a5	80 78 01 ff	 cmp	 BYTE PTR [eax+1], 255	; 000000ffH
  002a9	75 01		 jne	 SHORT $LN41@UnMixJewel

; 352  : 		{
; 353  : 			iEmptyCount++;

  002ab	41		 inc	 ecx
$LN41@UnMixJewel:

; 344  : 		return FALSE;
; 345  : 	}
; 346  : 
; 347  : 	int iEmptyCount = 0;

  002ac	83 c0 04	 add	 eax, 4

; 348  : 
; 349  : 	for ( int x=0;x<(MAIN_INVENTORY_SIZE-INVETORY_WEAR_SIZE);x++)

  002af	4b		 dec	 ebx
  002b0	75 df		 jne	 SHORT $LL12@UnMixJewel

; 354  : 		}
; 355  : 	}
; 356  : 
; 357  : 	if ( iEmptyCount < iJewelCount )

  002b2	8b 45 fc	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  002b5	3b c8		 cmp	 ecx, eax
  002b7	7d 35		 jge	 SHORT $LN8@UnMixJewel

; 358  : 	{
; 359  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] lack of empty slot to unmix : %d / %d",
; 360  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 361  : 			iEmptyCount, iJewelCount);

  002b9	50		 push	 eax
  002ba	51		 push	 ecx
  002bb	8d 96 6f 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  002c1	52		 push	 edx
  002c2	8d 86 64 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  002c8	50		 push	 eax
  002c9	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@KLGGGOBD@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5lack?5of?5empt@
  002ce	53		 push	 ebx
  002cf	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 362  : 
; 363  : 		gObj[iIndex].ChaosLock = FALSE;
; 364  : 		GCAnsJewelUnMix(iIndex, 7);

  002d4	6a 07		 push	 7
  002d6	57		 push	 edi
  002d7	89 9e ec 0c 00
	00		 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], ebx
  002dd	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  002e2	83 c4 20	 add	 esp, 32			; 00000020H
  002e5	5b		 pop	 ebx
  002e6	5e		 pop	 esi
  002e7	33 c0		 xor	 eax, eax
  002e9	5f		 pop	 edi

; 421  : }

  002ea	8b e5		 mov	 esp, ebp
  002ec	5d		 pop	 ebp
  002ed	c3		 ret	 0
$LN8@UnMixJewel:

; 365  : 		return FALSE;
; 366  : 	}
; 367  : 
; 368  : 	LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] UnMix - Delete Jewel, Type:%d, Level:%d, Serial:%d",
; 369  : 		gObj[iIndex].AccountID, gObj[iIndex].Name,
; 370  : 		gObj[iIndex].pInventory[iInventoryPos].m_Type,
; 371  : 		gObj[iIndex].pInventory[iInventoryPos].m_Level,
; 372  : 		gObj[iIndex].pInventory[iInventoryPos].m_Number);

  002ee	8b 5d f4	 mov	 ebx, DWORD PTR tv564[ebp]
  002f1	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  002f3	53		 push	 ebx
  002f4	52		 push	 edx
  002f5	8b 55 f8	 mov	 edx, DWORD PTR tv574[ebp]
  002f8	52		 push	 edx
  002f9	8d 86 6f 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  002ff	50		 push	 eax
  00300	8d 8e 64 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00306	51		 push	 ecx
  00307	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@ILPCOAPE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5UnMix?5?9?5Dele@
  0030c	6a 00		 push	 0
  0030e	89 45 ec	 mov	 DWORD PTR tv548[ebp], eax
  00311	89 4d e8	 mov	 DWORD PTR tv549[ebp], ecx
  00314	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 373  : 
; 374  : 	gObjInventoryItemSet(iIndex, iInventoryPos, 0xFF);

  00319	8b 5d 14	 mov	 ebx, DWORD PTR _iInventoryPos$[ebp]
  0031c	68 ff 00 00 00	 push	 255			; 000000ffH
  00321	53		 push	 ebx
  00322	57		 push	 edi
  00323	e8 00 00 00 00	 call	 ?gObjInventoryItemSet@@YAXHHE@Z ; gObjInventoryItemSet

; 375  : 	gObjInventoryDeleteItem(iIndex, iInventoryPos);

  00328	53		 push	 ebx
  00329	57		 push	 edi
  0032a	e8 00 00 00 00	 call	 ?gObjInventoryDeleteItem@@YAEHH@Z ; gObjInventoryDeleteItem

; 376  : 	GCInventoryItemDeleteSend(iIndex, iInventoryPos, 1);

  0032f	6a 01		 push	 1
  00331	53		 push	 ebx
  00332	57		 push	 edi
  00333	e8 00 00 00 00	 call	 ?GCInventoryItemDeleteSend@@YAXHEE@Z ; GCInventoryItemDeleteSend
  00338	83 c4 3c	 add	 esp, 60			; 0000003cH

; 377  : 
; 378  : 	int iCrtJewelCount = 0;

  0033b	33 db		 xor	 ebx, ebx

; 379  : 	BOOL bItemCrtOK = FALSE;

  0033d	33 c0		 xor	 eax, eax
  0033f	89 45 f4	 mov	 DWORD PTR _bItemCrtOK$[ebp], eax

; 380  : 
; 381  : 	for (int x=0;x<(MAIN_INVENTORY_SIZE-INVETORY_WEAR_SIZE);x++)

  00342	89 45 f8	 mov	 DWORD PTR _x$153578[ebp], eax
  00345	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL48@UnMixJewel:

; 382  : 	{
; 383  : 		if ( gObj[iIndex].pInventoryMap[x] == 0xFF )

  00350	8b 8e 90 0c 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3216]
  00356	80 3c 08 ff	 cmp	 BYTE PTR [eax+ecx], 255	; 000000ffH
  0035a	75 3c		 jne	 SHORT $LN6@UnMixJewel

; 384  : 		{
; 385  : 			ItemSerialCreateSend(iIndex, 235, gObj[iIndex].X, gObj[iIndex].Y,
; 386  : 								iChangeType, 0, 0, 0, 0, 0,
; 387  : 								iIndex, 0, 0);

  0035c	8b 55 e4	 mov	 edx, DWORD PTR _iChangeType$[ebp]
  0035f	0f b6 86 06 01
	00 00		 movzx	 eax, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+262]
  00366	0f b6 8e 04 01
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+260]
  0036d	6a 00		 push	 0
  0036f	6a 00		 push	 0
  00371	57		 push	 edi
  00372	6a 00		 push	 0
  00374	6a 00		 push	 0
  00376	6a 00		 push	 0
  00378	6a 00		 push	 0
  0037a	6a 00		 push	 0
  0037c	52		 push	 edx
  0037d	50		 push	 eax
  0037e	51		 push	 ecx
  0037f	68 eb 00 00 00	 push	 235			; 000000ebH
  00384	57		 push	 edi
  00385	e8 00 00 00 00	 call	 ?ItemSerialCreateSend@@YAXHEEEHEEEEEHEE@Z ; ItemSerialCreateSend

; 388  : 
; 389  : 			iCrtJewelCount++;
; 390  : 
; 391  : 			if ( iJewelCount <= iCrtJewelCount )

  0038a	8b 45 fc	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  0038d	43		 inc	 ebx
  0038e	83 c4 34	 add	 esp, 52			; 00000034H
  00391	3b c3		 cmp	 eax, ebx
  00393	7e 11		 jle	 SHORT $LN35@UnMixJewel
  00395	8b 45 f8	 mov	 eax, DWORD PTR _x$153578[ebp]
$LN6@UnMixJewel:

; 380  : 
; 381  : 	for (int x=0;x<(MAIN_INVENTORY_SIZE-INVETORY_WEAR_SIZE);x++)

  00398	40		 inc	 eax
  00399	89 45 f8	 mov	 DWORD PTR _x$153578[ebp], eax
  0039c	83 f8 40	 cmp	 eax, 64			; 00000040H
  0039f	7c af		 jl	 SHORT $LL48@UnMixJewel

; 388  : 
; 389  : 			iCrtJewelCount++;
; 390  : 
; 391  : 			if ( iJewelCount <= iCrtJewelCount )

  003a1	8b 45 fc	 mov	 eax, DWORD PTR _iJewelCount$[ebp]
  003a4	eb 07		 jmp	 SHORT $LN5@UnMixJewel
$LN35@UnMixJewel:

; 392  : 			{
; 393  : 				bItemCrtOK = TRUE;

  003a6	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _bItemCrtOK$[ebp], 1
$LN5@UnMixJewel:

; 394  : 				break;
; 395  : 			}
; 396  : 		}
; 397  : 	}
; 398  : 
; 399  : 	gObj[iIndex].ChaosLock = FALSE;
; 400  : 
; 401  : 	if ( bItemCrtOK == TRUE )

  003ad	83 7d f4 01	 cmp	 DWORD PTR _bItemCrtOK$[ebp], 1

; 402  : 	{
; 403  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] jewel unmix succeed : ItemType:%d, JewelCount:%d",
; 404  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 405  : 			iItemType, iJewelCount);

  003b1	8b 55 f0	 mov	 edx, DWORD PTR _iItemType$[ebp]
  003b4	8b 4d e8	 mov	 ecx, DWORD PTR tv549[ebp]
  003b7	50		 push	 eax
  003b8	8b 45 ec	 mov	 eax, DWORD PTR tv548[ebp]
  003bb	52		 push	 edx
  003bc	50		 push	 eax
  003bd	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  003c7	51		 push	 ecx
  003c8	75 3a		 jne	 SHORT $LN2@UnMixJewel
  003ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@GPAMOLKC@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  003cf	6a 00		 push	 0
  003d1	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 406  : 
; 407  : 		gObj[iIndex].Money -= iMixMoney;

  003d6	81 86 b0 00 00
	00 c0 bd f0 ff	 add	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176], -1000000 ; fff0bdc0H
  003e0	8b b6 b0 00 00
	00		 mov	 esi, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176]

; 408  : 		GCMoneySend(iIndex, gObj[iIndex].Money);

  003e6	56		 push	 esi
  003e7	57		 push	 edi
  003e8	e8 00 00 00 00	 call	 ?GCMoneySend@@YAXHK@Z	; GCMoneySend

; 409  : 		GCAnsJewelUnMix(iIndex, 1);

  003ed	6a 01		 push	 1
  003ef	57		 push	 edi
  003f0	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  003f5	83 c4 28	 add	 esp, 40			; 00000028H
  003f8	5b		 pop	 ebx
  003f9	5e		 pop	 esi

; 418  : 	}
; 419  : 
; 420  : 	return TRUE;

  003fa	b8 01 00 00 00	 mov	 eax, 1
  003ff	5f		 pop	 edi

; 421  : }

  00400	8b e5		 mov	 esp, ebp
  00402	5d		 pop	 ebp
  00403	c3		 ret	 0
$LN2@UnMixJewel:

; 410  : 	}
; 411  : 	else
; 412  : 	{
; 413  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] jewel unmix failed : ItemType:%d, JewelCount:%d",
; 414  : 			gObj[iIndex].AccountID, gObj[iIndex].Name,
; 415  : 			iItemType, iJewelCount);

  00404	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@FJDCDOLF@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5jewel?5unmix?5@
  00409	6a 00		 push	 0
  0040b	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 416  : 
; 417  : 		GCAnsJewelUnMix(iIndex, 0);

  00410	6a 00		 push	 0
  00412	57		 push	 edi
  00413	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00418	83 c4 20	 add	 esp, 32			; 00000020H
  0041b	5b		 pop	 ebx
  0041c	5e		 pop	 esi

; 418  : 	}
; 419  : 
; 420  : 	return TRUE;

  0041d	b8 01 00 00 00	 mov	 eax, 1
  00422	5f		 pop	 edi

; 421  : }

  00423	8b e5		 mov	 esp, ebp
  00425	5d		 pop	 ebp
  00426	c3		 ret	 0
$LN18@UnMixJewel:

; 287  : 			iInventoryItemLevel = gObj[iIndex].pInventory[iInventoryPos].m_Level;
; 288  : 		}
; 289  : 		else
; 290  : 		{
; 291  : 			LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] iJewelLevel is different from request : %d / %d",
; 292  : 				gObj[iIndex].AccountID, gObj[iIndex].Name,
; 293  : 				gObj[iIndex].pInventory[iInventoryPos].m_Level, iJewelLevel);

  00427	50		 push	 eax
  00428	52		 push	 edx
  00429	8d 96 6f 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  0042f	52		 push	 edx
  00430	8d 86 64 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  00436	50		 push	 eax
  00437	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@MLHPPKDE@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5iJewelLevel?5@
  0043c	6a 00		 push	 0
  0043e	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 294  : 
; 295  : 			gObj[iIndex].ChaosLock = FALSE;
; 296  : 			GCAnsJewelUnMix(iIndex, 3);

  00443	6a 03		 push	 3
  00445	57		 push	 edi
  00446	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00450	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  00455	83 c4 20	 add	 esp, 32			; 00000020H
  00458	5b		 pop	 ebx
  00459	5e		 pop	 esi

; 307  : 		return FALSE;

  0045a	33 c0		 xor	 eax, eax
  0045c	5f		 pop	 edi

; 421  : }

  0045d	8b e5		 mov	 esp, ebp
  0045f	5d		 pop	 ebp
  00460	c3		 ret	 0
$LN19@UnMixJewel:

; 297  : 			return FALSE;
; 298  : 		}
; 299  : 	}
; 300  : 	else
; 301  : 	{
; 302  : 		LogAdd(LOG_BLACK, "[JewelMix] [%s][%s] Item to unmix is not exist",
; 303  : 			gObj[iIndex].AccountID, gObj[iIndex].Name);

  00461	8d 8e 6f 00 00
	00		 lea	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+111]
  00467	51		 push	 ecx
  00468	8d 96 64 00 00
	00		 lea	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+100]
  0046e	52		 push	 edx
  0046f	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PIEHHLAL@?$FLJewelMix?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5Item?5to?5unmi@
  00474	6a 00		 push	 0
  00476	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 304  : 	
; 305  : 		gObj[iIndex].ChaosLock = FALSE;
; 306  : 		GCAnsJewelUnMix(iIndex, 4);

  0047b	6a 04		 push	 4
  0047d	57		 push	 edi
  0047e	c7 86 ec 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+3308], 0
  00488	e8 00 00 00 00	 call	 ?GCAnsJewelUnMix@@YAXHH@Z ; GCAnsJewelUnMix
  0048d	83 c4 18	 add	 esp, 24			; 00000018H
  00490	5b		 pop	 ebx
  00491	5e		 pop	 esi

; 307  : 		return FALSE;

  00492	33 c0		 xor	 eax, eax
  00494	5f		 pop	 edi

; 421  : }

  00495	8b e5		 mov	 esp, ebp
  00497	5d		 pop	 ebp
  00498	c3		 ret	 0
?UnMixJewel@CJewelMixSystem@@SAHHHHH@Z ENDP		; CJewelMixSystem::UnMixJewel
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCJewelMixSystem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCJewelMixSystem@@UAEPAXI@Z PROC			; CJewelMixSystem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CJewelMixSystem@@UAE@XZ ; CJewelMixSystem::~CJewelMixSystem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCJewelMixSystem@@UAEPAXI@Z ENDP			; CJewelMixSystem::`scalar deleting destructor'
_TEXT	ENDS
END
