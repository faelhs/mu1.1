; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\Tips.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gTips@@3VCTips@@A				; gTips
_BSS	SEGMENT
?gTips@@3VCTips@@A DB 01e84H DUP (?)			; gTips
_BSS	ENDS
PUBLIC	?CheckProcent@CTips@@QAEXPAD@Z			; CTips::CheckProcent
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\tips.cpp
;	COMDAT ?CheckProcent@CTips@@QAEXPAD@Z
_TEXT	SEGMENT
_szMsg$ = 8						; size = 4
?CheckProcent@CTips@@QAEXPAD@Z PROC			; CTips::CheckProcent, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 31   : 	for(int i = 0; i <= strlen(szMsg); i++)

  00005	8b 7d 08	 mov	 edi, DWORD PTR _szMsg$[ebp]
  00008	33 d2		 xor	 edx, edx
  0000a	8d 9b 00 00 00
	00		 npad	 6
$LL7@CheckProce:

; 32   : 	{                          						   
; 33   : 		if(szMsg[i] == '%')		  

  00010	80 3c 3a 25	 cmp	 BYTE PTR [edx+edi], 37	; 00000025H
  00014	75 2a		 jne	 SHORT $LN6@CheckProce

; 34   : 		{
; 35   : 			for(int x = strlen(szMsg); x >= i; x--)	

  00016	8b c7		 mov	 eax, edi
  00018	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0001b	eb 03 8d 49 00	 npad	 5
$LL14@CheckProce:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $LL14@CheckProce
  00027	2b c6		 sub	 eax, esi
  00029	3b c2		 cmp	 eax, edx
  0002b	7c 12		 jl	 SHORT $LN1@CheckProce
  0002d	8d 4c 38 01	 lea	 ecx, DWORD PTR [eax+edi+1]
  00031	2b c2		 sub	 eax, edx
  00033	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL3@CheckProce:

; 36   : 			{
; 37   : 				szMsg[x + 1] = szMsg[x];

  00036	8a 41 ff	 mov	 al, BYTE PTR [ecx-1]
  00039	88 01		 mov	 BYTE PTR [ecx], al
  0003b	49		 dec	 ecx
  0003c	4e		 dec	 esi
  0003d	75 f7		 jne	 SHORT $LL3@CheckProce
$LN1@CheckProce:

; 38   : 			}
; 39   : 			// ---
; 40   : 			i++;

  0003f	42		 inc	 edx
$LN6@CheckProce:

; 31   : 	for(int i = 0; i <= strlen(szMsg); i++)

  00040	8b c7		 mov	 eax, edi
  00042	42		 inc	 edx
  00043	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL15@CheckProce:
  00046	8a 08		 mov	 cl, BYTE PTR [eax]
  00048	40		 inc	 eax
  00049	84 c9		 test	 cl, cl
  0004b	75 f9		 jne	 SHORT $LL15@CheckProce
  0004d	2b c6		 sub	 eax, esi
  0004f	3b d0		 cmp	 edx, eax
  00051	76 bd		 jbe	 SHORT $LL7@CheckProce
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi

; 41   : 		}
; 42   : 	}
; 43   : }

  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?CheckProcent@CTips@@QAEXPAD@Z ENDP			; CTips::CheckProcent
_TEXT	ENDS
PUBLIC	?Init@CTips@@SAXPAX@Z				; CTips::Init
EXTRN	__endthread:PROC
EXTRN	?SendMsg@CToolKit@@QAAXHPADZZ:PROC		; CToolKit::SendMsg
EXTRN	?gToolKit@@3VCToolKit@@A:BYTE			; gToolKit
EXTRN	__imp__Sleep@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Init@CTips@@SAXPAX@Z
_TEXT	SEGMENT
_lpParam$ = 8						; size = 4
?Init@CTips@@SAXPAX@Z PROC				; CTips::Init, COMDAT

; 46   : 	while(gTips.iEnabled)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gTips@@3VCTips@@A, 0
  00007	74 5d		 je	 SHORT $LN4@Init
  00009	a1 04 00 00 00	 mov	 eax, DWORD PTR ?gTips@@3VCTips@@A+4
  0000e	53		 push	 ebx
  0000f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__Sleep@4
  00015	56		 push	 esi
  00016	57		 push	 edi
$LL5@Init:

; 47   :     {
; 48   :         for(int i = 1; i <= gTips.iSections; i++)

  00017	bf 01 00 00 00	 mov	 edi, 1
  0001c	3b c7		 cmp	 eax, edi
  0001e	7c 3a		 jl	 SHORT $LN1@Init
  00020	be ac 00 00 00	 mov	 esi, OFFSET ?gTips@@3VCTips@@A+172
$LL3@Init:

; 49   :         {
; 50   : 			Sleep(gTips.iInterval);

  00025	a1 08 00 00 00	 mov	 eax, DWORD PTR ?gTips@@3VCTips@@A+8
  0002a	50		 push	 eax
  0002b	ff d3		 call	 ebx

; 51   : 			// ---
; 52   : 			gTips.CheckProcent(gTips.m_Data[i].szMessage);

  0002d	56		 push	 esi
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gTips@@3VCTips@@A ; gTips
  00033	e8 00 00 00 00	 call	 ?CheckProcent@CTips@@QAEXPAD@Z ; CTips::CheckProcent

; 53   : 			// ---
; 54   : 			gToolKit.SendMsg(gTips.m_Data[i].iColor, gTips.m_Data[i].szMessage);

  00038	8b 4e fc	 mov	 ecx, DWORD PTR [esi-4]
  0003b	56		 push	 esi
  0003c	51		 push	 ecx
  0003d	68 00 00 00 00	 push	 OFFSET ?gToolKit@@3VCToolKit@@A ; gToolKit
  00042	e8 00 00 00 00	 call	 ?SendMsg@CToolKit@@QAAXHPADZZ ; CToolKit::SendMsg
  00047	a1 04 00 00 00	 mov	 eax, DWORD PTR ?gTips@@3VCTips@@A+4
  0004c	47		 inc	 edi
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	81 c6 9c 00 00
	00		 add	 esi, 156		; 0000009cH
  00056	3b f8		 cmp	 edi, eax
  00058	7e cb		 jle	 SHORT $LL3@Init
$LN1@Init:

; 46   : 	while(gTips.iEnabled)

  0005a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gTips@@3VCTips@@A, 0
  00061	75 b4		 jne	 SHORT $LL5@Init
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
$LN4@Init:

; 55   :         }
; 56   :     }
; 57   : 	// ---
; 58   :     _endthread();

  00066	e9 00 00 00 00	 jmp	 __endthread
?Init@CTips@@SAXPAX@Z ENDP				; CTips::Init
_TEXT	ENDS
PUBLIC	??_C@_0BI@IDDKNPHM@?$FLTIPS?5FILE?$FN?5Carregado?5?$CB?$AA@ ; `string'
PUBLIC	??_C@_05PDOBBJNA@Color?$AA@			; `string'
PUBLIC	??_C@_06ENNEIMBA@String?$AA@			; `string'
PUBLIC	??_C@_09MOJGCJNP@Section?$CFd?$AA@		; `string'
PUBLIC	??_C@_0L@JOFGPDLF@IsInterval?$AA@		; `string'
PUBLIC	??_C@_0L@GMAGKDFH@IsSections?$AA@		; `string'
PUBLIC	??_C@_04OCIDJLAF@Tips?$AA@			; `string'
PUBLIC	??_C@_09BDCHKIMD@IsEnabled?$AA@			; `string'
PUBLIC	??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Load@CTips@@QAEXXZ				; CTips::Load
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	__beginthread:PROC
EXTRN	__imp__GetPrivateProfileStringA@24:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BI@IDDKNPHM@?$FLTIPS?5FILE?$FN?5Carregado?5?$CB?$AA@
CONST	SEGMENT
??_C@_0BI@IDDKNPHM@?$FLTIPS?5FILE?$FN?5Carregado?5?$CB?$AA@ DB '[TIPS FIL'
	DB	'E] Carregado !', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDOBBJNA@Color?$AA@
CONST	SEGMENT
??_C@_05PDOBBJNA@Color?$AA@ DB 'Color', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ENNEIMBA@String?$AA@
CONST	SEGMENT
??_C@_06ENNEIMBA@String?$AA@ DB 'String', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MOJGCJNP@Section?$CFd?$AA@
CONST	SEGMENT
??_C@_09MOJGCJNP@Section?$CFd?$AA@ DB 'Section%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JOFGPDLF@IsInterval?$AA@
CONST	SEGMENT
??_C@_0L@JOFGPDLF@IsInterval?$AA@ DB 'IsInterval', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GMAGKDFH@IsSections?$AA@
CONST	SEGMENT
??_C@_0L@GMAGKDFH@IsSections?$AA@ DB 'IsSections', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OCIDJLAF@Tips?$AA@
CONST	SEGMENT
??_C@_04OCIDJLAF@Tips?$AA@ DB 'Tips', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BDCHKIMD@IsEnabled?$AA@
CONST	SEGMENT
??_C@_09BDCHKIMD@IsEnabled?$AA@ DB 'IsEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@
CONST	SEGMENT
??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@ DB '.\Customs'
	DB	'\Systems\Hgt_Tips.ini', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@CTips@@QAEXXZ
_TEXT	SEGMENT
_szBuffer$ = -56					; size = 50
__$ArrayPad$ = -4					; size = 4
?Load@CTips@@QAEXXZ PROC				; CTips::Load, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi

; 8    : 	this->iEnabled	= GetPrivateProfileInt("Tips", "IsEnabled", NULL, TIPS_FILE);

  00012	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@
  0001d	6a 00		 push	 0
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_09BDCHKIMD@IsEnabled?$AA@
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_04OCIDJLAF@Tips?$AA@
  00029	8b d9		 mov	 ebx, ecx
  0002b	ff d6		 call	 esi

; 9    : 	this->iSections = GetPrivateProfileInt("Tips", "IsSections", NULL, TIPS_FILE);

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@
  00032	6a 00		 push	 0
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GMAGKDFH@IsSections?$AA@
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_04OCIDJLAF@Tips?$AA@
  0003e	89 03		 mov	 DWORD PTR [ebx], eax
  00040	ff d6		 call	 esi

; 10   : 	this->iInterval = GetPrivateProfileInt("Tips", "IsInterval", NULL, TIPS_FILE) * 60000;

  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@
  00047	6a 00		 push	 0
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JOFGPDLF@IsInterval?$AA@
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_04OCIDJLAF@Tips?$AA@
  00053	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00056	ff d6		 call	 esi
  00058	69 c0 60 ea 00
	00		 imul	 eax, 60000		; 0000ea60H

; 11   : 	// ---
; 12   : 	char szBuffer[50] = {0};

  0005e	6a 31		 push	 49			; 00000031H
  00060	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00063	8d 45 c9	 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00066	6a 00		 push	 0
  00068	50		 push	 eax
  00069	c6 45 c8 00	 mov	 BYTE PTR _szBuffer$[ebp], 0
  0006d	e8 00 00 00 00	 call	 _memset

; 13   : 	// ---
; 14   : 	ZeroMemory(this->m_Data, sizeof(this->m_Data));

  00072	68 78 1e 00 00	 push	 7800			; 00001e78H
  00077	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  0007a	6a 00		 push	 0
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 _memset

; 15   : 	// ---
; 16   : 	for(int i = 1; i <= this->iSections; i++)

  00082	be 01 00 00 00	 mov	 esi, 1
  00087	83 c4 18	 add	 esp, 24			; 00000018H
  0008a	39 73 04	 cmp	 DWORD PTR [ebx+4], esi
  0008d	7c 5e		 jl	 SHORT $LN1@Load

; 19   : 		// ---
; 20   :         GetPrivateProfileString(szBuffer, "String", NULL, this->m_Data[i].szMessage, 150, TIPS_FILE);

  0008f	57		 push	 edi
  00090	8d bb a8 00 00
	00		 lea	 edi, DWORD PTR [ebx+168]
$LL3@Load:

; 17   :     {
; 18   :         wsprintf(szBuffer, "Section%d", i);

  00096	56		 push	 esi
  00097	8d 55 c8	 lea	 edx, DWORD PTR _szBuffer$[ebp]
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_09MOJGCJNP@Section?$CFd?$AA@
  0009f	52		 push	 edx
  000a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 19   : 		// ---
; 20   :         GetPrivateProfileString(szBuffer, "String", NULL, this->m_Data[i].szMessage, 150, TIPS_FILE);

  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@
  000ae	68 96 00 00 00	 push	 150			; 00000096H
  000b3	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  000b6	50		 push	 eax
  000b7	6a 00		 push	 0
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_06ENNEIMBA@String?$AA@
  000be	8d 4d c8	 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  000c1	51		 push	 ecx
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 21   : 		this->m_Data[i].iColor	= GetPrivateProfileInt(szBuffer, "Color", NULL, TIPS_FILE);

  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@IFBKJFBA@?4?2Customs?2Systems?2Hgt_Tips?4ini?$AA@
  000cd	6a 00		 push	 0
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_05PDOBBJNA@Color?$AA@
  000d4	8d 55 c8	 lea	 edx, DWORD PTR _szBuffer$[ebp]
  000d7	52		 push	 edx
  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileIntA@16
  000de	89 07		 mov	 DWORD PTR [edi], eax
  000e0	46		 inc	 esi
  000e1	81 c7 9c 00 00
	00		 add	 edi, 156		; 0000009cH
  000e7	3b 73 04	 cmp	 esi, DWORD PTR [ebx+4]
  000ea	7e aa		 jle	 SHORT $LL3@Load
  000ec	5f		 pop	 edi
$LN1@Load:

; 22   :     }
; 23   : 	// ---
; 24   : 	_beginthread(this->Init, NULL, NULL);

  000ed	6a 00		 push	 0
  000ef	6a 00		 push	 0
  000f1	68 00 00 00 00	 push	 OFFSET ?Init@CTips@@SAXPAX@Z ; CTips::Init
  000f6	e8 00 00 00 00	 call	 __beginthread

; 25   : 	// ---
; 26   : 	LogAdd(LOG_GOLD, "[TIPS FILE] Carregado !");

  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IDDKNPHM@?$FLTIPS?5FILE?$FN?5Carregado?5?$CB?$AA@
  00100	6a 05		 push	 5
  00102	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 27   : }

  00107	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010a	83 c4 14	 add	 esp, 20			; 00000014H
  0010d	5e		 pop	 esi
  0010e	33 cd		 xor	 ecx, ebp
  00110	5b		 pop	 ebx
  00111	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c3		 ret	 0
?Load@CTips@@QAEXXZ ENDP				; CTips::Load
_TEXT	ENDS
END
