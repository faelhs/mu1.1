; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\ViewportGuild.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CViewportGuild@@6B@				; CViewportGuild::`vftable'
PUBLIC	??0CViewportGuild@@QAE@XZ			; CViewportGuild::CViewportGuild
PUBLIC	??_R4CViewportGuild@@6B@			; CViewportGuild::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCViewportGuild@@@8			; CViewportGuild `RTTI Type Descriptor'
PUBLIC	??_R3CViewportGuild@@8				; CViewportGuild::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CViewportGuild@@8				; CViewportGuild::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CViewportGuild@@8			; CViewportGuild::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECViewportGuild@@UAEPAXI@Z:PROC		; CViewportGuild::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CViewportGuild@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\viewportguild.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CViewportGuild@@8 DD FLAT:??_R0?AVCViewportGuild@@@8 ; CViewportGuild::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CViewportGuild@@8
rdata$r	ENDS
;	COMDAT ??_R2CViewportGuild@@8
rdata$r	SEGMENT
??_R2CViewportGuild@@8 DD FLAT:??_R1A@?0A@EA@CViewportGuild@@8 ; CViewportGuild::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CViewportGuild@@8
rdata$r	SEGMENT
??_R3CViewportGuild@@8 DD 00H				; CViewportGuild::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CViewportGuild@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCViewportGuild@@@8
_DATA	SEGMENT
??_R0?AVCViewportGuild@@@8 DD FLAT:??_7type_info@@6B@	; CViewportGuild `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCViewportGuild@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CViewportGuild@@6B@
rdata$r	SEGMENT
??_R4CViewportGuild@@6B@ DD 00H				; CViewportGuild::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCViewportGuild@@@8
	DD	FLAT:??_R3CViewportGuild@@8
rdata$r	ENDS
;	COMDAT ??_7CViewportGuild@@6B@
CONST	SEGMENT
??_7CViewportGuild@@6B@ DD FLAT:??_R4CViewportGuild@@6B@ ; CViewportGuild::`vftable'
	DD	FLAT:??_ECViewportGuild@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0CViewportGuild@@QAE@XZ
_TEXT	SEGMENT
??0CViewportGuild@@QAE@XZ PROC				; CViewportGuild::CViewportGuild, COMDAT
; _this$ = ecx

; 15   : {

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CViewportGuild@@6B@

; 16   : 	return;
; 17   : }

  00008	c3		 ret	 0
??0CViewportGuild@@QAE@XZ ENDP				; CViewportGuild::CViewportGuild
_TEXT	ENDS
PUBLIC	??1CViewportGuild@@UAE@XZ			; CViewportGuild::~CViewportGuild
; Function compile flags: /Ogtp
;	COMDAT ??1CViewportGuild@@UAE@XZ
_TEXT	SEGMENT
??1CViewportGuild@@UAE@XZ PROC				; CViewportGuild::~CViewportGuild, COMDAT
; _this$ = ecx

; 21   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CViewportGuild@@6B@

; 22   : 	return;
; 23   : }

  00006	c3		 ret	 0
??1CViewportGuild@@UAE@XZ ENDP				; CViewportGuild::~CViewportGuild
_TEXT	ENDS
PUBLIC	?Init@CViewportGuild@@QAEXXZ			; CViewportGuild::Init
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Init@CViewportGuild@@QAEXXZ
_TEXT	SEGMENT
?Init@CViewportGuild@@QAEXXZ PROC			; CViewportGuild::Init, COMDAT
; _this$ = ecx

; 26   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 27   : 	memset(&this->m_GuildNumber , 0, sizeof(this->m_GuildNumber ) );

  00003	68 96 00 00 00	 push	 150			; 00000096H
  00008	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0000b	6a 00		 push	 0
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 _memset

; 28   : 	this->m_GuildCount =0;

  00013	33 c9		 xor	 ecx, ecx
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
  00018	66 89 8e 9a 00
	00 00		 mov	 WORD PTR [esi+154], cx
  0001f	5e		 pop	 esi

; 29   : }

  00020	c3		 ret	 0
?Init@CViewportGuild@@QAEXXZ ENDP			; CViewportGuild::Init
_TEXT	ENDS
PUBLIC	?Add@CViewportGuild@@QAEHHH@Z			; CViewportGuild::Add
; Function compile flags: /Ogtp
;	COMDAT ?Add@CViewportGuild@@QAEHHH@Z
_TEXT	SEGMENT
_number$ = 8						; size = 4
_TargetObj$ = 12					; size = 4
?Add@CViewportGuild@@QAEHHH@Z PROC			; CViewportGuild::Add, COMDAT
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 33   : 	int blank=-1;
; 34   : 	int n;
; 35   : 
; 36   : 	if (number < 1)

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _number$[ebp]
  00007	57		 push	 edi
  00008	83 cf ff	 or	 edi, -1

; 37   : 	{
; 38   : 		return 0;

  0000b	33 c0		 xor	 eax, eax
  0000d	83 fb 01	 cmp	 ebx, 1
  00010	7c 16		 jl	 SHORT $LN11@Add

; 39   : 	}
; 40   : 
; 41   : 	for (n=0;n<MAX_VIEWPORT;n++)

  00012	56		 push	 esi
  00013	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
$LL9@Add:

; 42   : 	{
; 43   : 		if (this->m_GuildNumber[n] > 0)

  00016	0f b7 16	 movzx	 edx, WORD PTR [esi]
  00019	66 85 d2	 test	 dx, dx
  0001c	7e 10		 jle	 SHORT $LN6@Add

; 44   : 		{
; 45   : 			if (this->m_GuildNumber[n] == number)

  0001e	0f bf d2	 movsx	 edx, dx
  00021	3b d3		 cmp	 edx, ebx
  00023	75 0f		 jne	 SHORT $LN8@Add
$LN1@Add:

; 65   : 		return 1;
; 66   : 	}
; 67   : 	return 0;

  00025	33 c0		 xor	 eax, eax
  00027	5e		 pop	 esi
$LN11@Add:
  00028	5f		 pop	 edi
  00029	5b		 pop	 ebx

; 68   : }

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
$LN6@Add:

; 46   : 			{
; 47   : 				return 0;
; 48   : 			}
; 49   : 		}
; 50   : 		else if (blank < 0)

  0002e	85 ff		 test	 edi, edi
  00030	79 02		 jns	 SHORT $LN8@Add

; 51   : 		{
; 52   : 			blank=n;

  00032	8b f8		 mov	 edi, eax
$LN8@Add:

; 39   : 	}
; 40   : 
; 41   : 	for (n=0;n<MAX_VIEWPORT;n++)

  00034	40		 inc	 eax
  00035	83 c6 02	 add	 esi, 2
  00038	83 f8 4b	 cmp	 eax, 75			; 0000004bH
  0003b	7c d9		 jl	 SHORT $LL9@Add

; 53   : 		}
; 54   : 	}
; 55   : 
; 56   : 	if (blank < 0)

  0003d	85 ff		 test	 edi, edi

; 57   : 	{
; 58   : 		return 0;

  0003f	78 e4		 js	 SHORT $LN1@Add

; 59   : 	}
; 60   : 
; 61   : 	if (this->m_GuildNumber[blank] == 0)

  00041	66 83 7c 79 04
	00		 cmp	 WORD PTR [ecx+edi*2+4], 0
  00047	75 dc		 jne	 SHORT $LN1@Add

; 62   : 	{
; 63   : 		this->m_GuildNumber[blank]=number;

  00049	66 89 5c 79 04	 mov	 WORD PTR [ecx+edi*2+4], bx
  0004e	5e		 pop	 esi

; 64   : 		this->m_GuildCount ++;

  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	66 01 81 9a 00
	00 00		 add	 WORD PTR [ecx+154], ax
  0005b	5f		 pop	 edi
  0005c	5b		 pop	 ebx

; 68   : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
?Add@CViewportGuild@@QAEHHH@Z ENDP			; CViewportGuild::Add
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCViewportGuild@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCViewportGuild@@UAEPAXI@Z PROC			; CViewportGuild::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CViewportGuild@@UAE@XZ ; CViewportGuild::~CViewportGuild
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCViewportGuild@@UAEPAXI@Z ENDP			; CViewportGuild::`scalar deleting destructor'
_TEXT	ENDS
END
