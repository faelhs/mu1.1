; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\ToolKit.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gToolKit@@3VCToolKit@@A			; gToolKit
_BSS	SEGMENT
?gToolKit@@3VCToolKit@@A DB 01H DUP (?)			; gToolKit
_BSS	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Refresh@CToolKit@@QAEXK@Z			; CToolKit::Refresh
EXTRN	?gObjCalCharacter@@YAXH@Z:PROC			; gObjCalCharacter
EXTRN	?FriendListRequest@@YAXH@Z:PROC			; FriendListRequest
EXTRN	?DGGuildMemberInfoRequest@@YAXH@Z:PROC		; DGGuildMemberInfoRequest
EXTRN	?CGRequestQuestInfo@@YAXH@Z:PROC		; CGRequestQuestInfo
EXTRN	?GCMagicListMultiSend@@YAXPAUOBJECTSTRUCT@@E@Z:PROC ; GCMagicListMultiSend
EXTRN	?GCItemListSend@@YAXH@Z:PROC			; GCItemListSend
EXTRN	?gObjTeleport@@YAXHHHH@Z:PROC			; gObjTeleport
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\toolkit.cpp
;	COMDAT ?Refresh@CToolKit@@QAEXK@Z
_TEXT	SEGMENT
tv586 = -92						; size = 4
tv584 = -92						; size = 4
tv579 = -92						; size = 4
tv577 = -92						; size = 4
tv570 = -92						; size = 4
tv568 = -92						; size = 4
tv563 = -92						; size = 4
tv561 = -92						; size = 4
tv547 = -92						; size = 4
tv545 = -92						; size = 4
tv538 = -92						; size = 4
tv536 = -92						; size = 4
tv589 = -86						; size = 2
tv582 = -86						; size = 2
tv573 = -86						; size = 2
tv566 = -86						; size = 2
tv550 = -86						; size = 2
tv541 = -86						; size = 2
_lpMsg$ = -84						; size = 56
_pMsg$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
?Refresh@CToolKit@@QAEXK@Z PROC				; CToolKit::Refresh, COMDAT
; _this$ = ecx

; 9    : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 10   : 	PMSG_REFRESH_CHAR lpMsg = {0};

  00015	6a 37		 push	 55			; 00000037H
  00017	8d 45 ad	 lea	 eax, DWORD PTR _lpMsg$[ebp+1]
  0001a	6a 00		 push	 0
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _memset

; 11   : 	// ---
; 12   : 	lpMsg.h.c			= 0xC3;
; 13   : 	lpMsg.h.headcode	= 0xF3;
; 14   : 	lpMsg.h.size		= sizeof(PMSG_REFRESH_CHAR);
; 15   : 	lpMsg.subcode		= 0x03;
; 16   : 	// ---
; 17   : 	lpMsg.MapX			= gObj[aIndex].X;
; 18   : 	lpMsg.MapY			= gObj[aIndex].Y;
; 19   : 	lpMsg.MapNumber		= gObj[aIndex].MapNumber;
; 20   : 	lpMsg.Dir			= gObj[aIndex].Dir;
; 21   : 	lpMsg.Exp			= gObj[aIndex].Experience;
; 22   : 	lpMsg.NextExp		= gObj[aIndex].NextExp;
; 23   : 	lpMsg.LevelUpPoint	= gObj[aIndex].LevelUpPoint;
; 24   : 	lpMsg.Str			= gObj[aIndex].Strength;
; 25   : 	lpMsg.Dex			= gObj[aIndex].Dexterity;
; 26   : 	lpMsg.Vit			= gObj[aIndex].Vitality;
; 27   : 	lpMsg.Energy		= gObj[aIndex].Energy;
; 28   : 	lpMsg.Money			= gObj[aIndex].Money;
; 29   : 	lpMsg.PkLevel		= gObj[aIndex].m_PK_Level;
; 30   : 	lpMsg.Life			= (short)gObj[aIndex].Life;

  00022	d9 7d aa	 fnstcw	 WORD PTR tv589[ebp]
  00025	8b f7		 mov	 esi, edi
  00027	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  0002d	0f b6 86 09 01
	00 00		 movzx	 eax, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+265]
  00034	d9 86 bc 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+188]
  0003a	0f b6 96 06 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+262]
  00041	88 45 b2	 mov	 BYTE PTR _lpMsg$[ebp+6], al
  00044	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+172]
  0004a	89 45 b8	 mov	 DWORD PTR _lpMsg$[ebp+12], eax
  0004d	0f b7 86 b6 00
	00 00		 movzx	 eax, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+182]
  00054	66 89 45 c0	 mov	 WORD PTR _lpMsg$[ebp+20], ax
  00058	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176]
  0005e	89 45 d4	 mov	 DWORD PTR _lpMsg$[ebp+40], eax
  00061	0f b7 45 aa	 movzx	 eax, WORD PTR tv589[ebp]
  00065	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0006a	89 45 a4	 mov	 DWORD PTR tv586[ebp], eax
  0006d	88 55 b1	 mov	 BYTE PTR _lpMsg$[ebp+5], dl
  00070	8b 96 a8 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+168]
  00076	d9 6d a4	 fldcw	 WORD PTR tv586[ebp]
  00079	89 55 b4	 mov	 DWORD PTR _lpMsg$[ebp+8], edx
  0007c	0f b7 96 b4 00
	00 00		 movzx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+180]
  00083	66 89 55 be	 mov	 WORD PTR _lpMsg$[ebp+18], dx
  00087	0f b7 96 ba 00
	00 00		 movzx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+186]
  0008e	db 5d a4	 fistp	 DWORD PTR tv584[ebp]
  00091	0f b6 8e 04 01
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+260]
  00098	d9 6d aa	 fldcw	 WORD PTR tv589[ebp]
  0009b	66 89 55 c4	 mov	 WORD PTR _lpMsg$[ebp+24], dx
  0009f	0f b7 55 a4	 movzx	 edx, WORD PTR tv584[ebp]
  000a3	88 4d b0	 mov	 BYTE PTR _lpMsg$[ebp+4], cl
  000a6	0f b6 8e 08 01
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+264]

; 31   : 	lpMsg.MaxLife		= (short)((double)gObj[aIndex].AddLife + gObj[aIndex].MaxLife);

  000ad	d9 86 c0 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+192]
  000b3	da 86 0c 01 00
	00		 fiadd	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+268]
  000b9	88 4d b3	 mov	 BYTE PTR _lpMsg$[ebp+7], cl
  000bc	0f b7 8e a0 00
	00 00		 movzx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+160]
  000c3	d9 7d aa	 fnstcw	 WORD PTR tv582[ebp]
  000c6	66 89 4d bc	 mov	 WORD PTR _lpMsg$[ebp+16], cx
  000ca	0f b7 45 aa	 movzx	 eax, WORD PTR tv582[ebp]
  000ce	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  000d3	89 45 a4	 mov	 DWORD PTR tv579[ebp], eax
  000d6	0f b7 8e b8 00
	00 00		 movzx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+184]
  000dd	d9 6d a4	 fldcw	 WORD PTR tv579[ebp]
  000e0	66 89 4d c2	 mov	 WORD PTR _lpMsg$[ebp+22], cx
  000e4	0f b6 8e fd 00
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+253]
  000eb	db 5d a4	 fistp	 DWORD PTR tv577[ebp]
  000ee	88 4d d8	 mov	 BYTE PTR _lpMsg$[ebp+44], cl
  000f1	0f b7 45 a4	 movzx	 eax, WORD PTR tv577[ebp]
  000f5	66 89 45 c8	 mov	 WORD PTR _lpMsg$[ebp+28], ax
  000f9	66 89 55 c6	 mov	 WORD PTR _lpMsg$[ebp+26], dx
  000fd	d9 6d aa	 fldcw	 WORD PTR tv582[ebp]
  00100	c6 45 ac c3	 mov	 BYTE PTR _lpMsg$[ebp], 195 ; 000000c3H
  00104	66 c7 45 ad 38
	f3		 mov	 WORD PTR _lpMsg$[ebp+1], 62264 ; 0000f338H
  0010a	c6 45 af 03	 mov	 BYTE PTR _lpMsg$[ebp+3], 3

; 32   : 	lpMsg.Mana			= (short)gObj[aIndex].Mana;

  0010e	d9 86 d0 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+208]
  00114	d9 7d aa	 fnstcw	 WORD PTR tv573[ebp]
  00117	0f b7 45 aa	 movzx	 eax, WORD PTR tv573[ebp]
  0011b	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  00120	89 45 a4	 mov	 DWORD PTR tv570[ebp], eax
  00123	d9 6d a4	 fldcw	 WORD PTR tv570[ebp]
  00126	db 5d a4	 fistp	 DWORD PTR tv568[ebp]
  00129	0f b7 4d a4	 movzx	 ecx, WORD PTR tv568[ebp]
  0012d	66 89 4d ca	 mov	 WORD PTR _lpMsg$[ebp+30], cx
  00131	d9 6d aa	 fldcw	 WORD PTR tv573[ebp]

; 33   : 	lpMsg.MaxMana		= (short)((double)gObj[aIndex].AddMana + gObj[aIndex].MaxMana);

  00134	d9 86 d4 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+212]
  0013a	da 86 10 01 00
	00		 fiadd	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+272]
  00140	d9 7d aa	 fnstcw	 WORD PTR tv566[ebp]
  00143	0f b7 45 aa	 movzx	 eax, WORD PTR tv566[ebp]
  00147	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0014c	89 45 a4	 mov	 DWORD PTR tv563[ebp], eax
  0014f	d9 6d a4	 fldcw	 WORD PTR tv563[ebp]
  00152	db 5d a4	 fistp	 DWORD PTR tv561[ebp]
  00155	0f b7 55 a4	 movzx	 edx, WORD PTR tv561[ebp]
  00159	66 89 55 cc	 mov	 WORD PTR _lpMsg$[ebp+32], dx
  0015d	d9 6d aa	 fldcw	 WORD PTR tv566[ebp]

; 34   : 	lpMsg.CtlCode		= (short)gObj[aIndex].Authority;
; 35   : 	lpMsg.BP			= gObj[aIndex].BP;

  00160	0f b7 8e e8 00
	00 00		 movzx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+232]
  00167	0f b6 86 a4 01
	00 00		 movzx	 eax, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+420]

; 36   : 	lpMsg.MaxBP			= gObj[aIndex].AddBP + gObj[aIndex].MaxBP;

  0016e	0f b7 96 ec 00
	00 00		 movzx	 edx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+236]
  00175	66 03 96 f0 00
	00 00		 add	 dx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+240]
  0017c	66 89 4d ce	 mov	 WORD PTR _lpMsg$[ebp+34], cx
  00180	88 45 d9	 mov	 BYTE PTR _lpMsg$[ebp+45], al

; 37   : 	lpMsg.Leadership	= gObj[aIndex].Leadership;

  00183	0f b7 86 d8 00
	00 00		 movzx	 eax, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+216]

; 38   : 	// ---
; 39   : 	DataSend(aIndex, &lpMsg.h.c, (DWORD)lpMsg.h.size);

  0018a	6a 38		 push	 56			; 00000038H
  0018c	8d 4d ac	 lea	 ecx, DWORD PTR _lpMsg$[ebp]
  0018f	51		 push	 ecx
  00190	57		 push	 edi
  00191	66 89 55 d0	 mov	 WORD PTR _lpMsg$[ebp+36], dx
  00195	66 89 45 de	 mov	 WORD PTR _lpMsg$[ebp+50], ax
  00199	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 40   : 	// ---
; 41   : 	PMSG_REFRESH_REGEN pMsg = {0};

  0019e	33 c0		 xor	 eax, eax

; 42   : 	// ---
; 43   : 	pMsg.h.c			= 0xC3;
; 44   : 	pMsg.h.headcode		= 0xF3;
; 45   : 	pMsg.h.size			= sizeof(PMSG_REFRESH_REGEN);
; 46   : 	pMsg.subcode		= 0x04;
; 47   : 	// ---
; 48   : 	pMsg.Dir			= gObj[aIndex].Dir;
; 49   : 	pMsg.MapX			= LOBYTE(gObj[aIndex].X);
; 50   : 	pMsg.MapY			= LOBYTE(gObj[aIndex].Y);
; 51   : 	pMsg.Life			= (float)gObj[aIndex].Life;

  001a0	d9 86 bc 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+188]
  001a6	89 45 e9	 mov	 DWORD PTR _pMsg$[ebp+5], eax
  001a9	89 45 e5	 mov	 DWORD PTR _pMsg$[ebp+1], eax
  001ac	d9 7d aa	 fnstcw	 WORD PTR tv550[ebp]
  001af	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+9], eax
  001b2	89 45 f1	 mov	 DWORD PTR _pMsg$[ebp+13], eax
  001b5	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+17], eax
  001b8	66 89 45 f9	 mov	 WORD PTR _pMsg$[ebp+21], ax
  001bc	88 45 fb	 mov	 BYTE PTR _pMsg$[ebp+23], al
  001bf	0f b6 86 04 01
	00 00		 movzx	 eax, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+260]
  001c6	0f b6 96 08 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+264]
  001cd	88 45 e8	 mov	 BYTE PTR _pMsg$[ebp+4], al
  001d0	0f b7 45 aa	 movzx	 eax, WORD PTR tv550[ebp]
  001d4	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  001d9	89 45 a4	 mov	 DWORD PTR tv547[ebp], eax
  001dc	0f b6 8e 06 01
	00 00		 movzx	 ecx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+262]
  001e3	d9 6d a4	 fldcw	 WORD PTR tv547[ebp]
  001e6	88 55 eb	 mov	 BYTE PTR _pMsg$[ebp+7], dl
  001e9	88 4d e9	 mov	 BYTE PTR _pMsg$[ebp+5], cl

; 52   : 	pMsg.Mana			= (float)gObj[aIndex].Mana;
; 53   : 	pMsg.Exp			= gObj[aIndex].Experience;

  001ec	8b 8e a8 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+168]
  001f2	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+16], ecx
  001f5	db 5d a4	 fistp	 DWORD PTR tv545[ebp]

; 54   : 	pMsg.MapNumber		= gObj[aIndex].MapNumber;
; 55   : 	pMsg.Money			= gObj[aIndex].Money;
; 56   : 	pMsg.BP				= LOWORD(gObj[aIndex].BP);

  001f8	0f b7 8e e8 00
	00 00		 movzx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+232]
  001ff	0f b7 55 a4	 movzx	 edx, WORD PTR tv545[ebp]
  00203	d9 6d aa	 fldcw	 WORD PTR tv550[ebp]
  00206	66 89 55 ec	 mov	 WORD PTR _pMsg$[ebp+8], dx
  0020a	0f b6 96 09 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+265]
  00211	88 55 ea	 mov	 BYTE PTR _pMsg$[ebp+6], dl

; 57   : 	// ---
; 58   : 	gObj[aIndex].PathCount = 0;
; 59   : 	// ---
; 60   : 	DataSend(aIndex, &pMsg.h.c, (DWORD)pMsg.h.size);

  00214	6a 18		 push	 24			; 00000018H
  00216	8d 55 e4	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00219	d9 86 d0 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+208]
  0021f	52		 push	 edx
  00220	d9 7d aa	 fnstcw	 WORD PTR tv541[ebp]
  00223	57		 push	 edi
  00224	0f b7 45 aa	 movzx	 eax, WORD PTR tv541[ebp]
  00228	0d 00 0c 00 00	 or	 eax, 3072		; 00000c00H
  0022d	89 45 a4	 mov	 DWORD PTR tv538[ebp], eax
  00230	c6 45 e4 c3	 mov	 BYTE PTR _pMsg$[ebp], 195 ; 000000c3H
  00234	66 c7 45 e5 18
	f3		 mov	 WORD PTR _pMsg$[ebp+1], 62232 ; 0000f318H
  0023a	d9 6d a4	 fldcw	 WORD PTR tv538[ebp]
  0023d	c6 45 e7 04	 mov	 BYTE PTR _pMsg$[ebp+3], 4
  00241	66 89 4d f0	 mov	 WORD PTR _pMsg$[ebp+12], cx
  00245	c7 86 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+296], 0
  0024f	db 5d a4	 fistp	 DWORD PTR tv536[ebp]
  00252	0f b7 45 a4	 movzx	 eax, WORD PTR tv536[ebp]
  00256	66 89 45 ee	 mov	 WORD PTR _pMsg$[ebp+10], ax
  0025a	8b 86 b0 00 00
	00		 mov	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+176]
  00260	d9 6d aa	 fldcw	 WORD PTR tv541[ebp]
  00263	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+20], eax
  00266	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 61   : 	// ---
; 62   : 	gObjTeleport(aIndex,gObj[aIndex].MapNumber,gObj[aIndex].X,gObj[aIndex].Y);

  0026b	0f bf 86 06 01
	00 00		 movsx	 eax, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+262]
  00272	0f bf 8e 04 01
	00 00		 movsx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+260]
  00279	0f b6 96 09 01
	00 00		 movzx	 edx, BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+265]
  00280	50		 push	 eax
  00281	51		 push	 ecx
  00282	52		 push	 edx
  00283	57		 push	 edi
  00284	e8 00 00 00 00	 call	 ?gObjTeleport@@YAXHHHH@Z ; gObjTeleport

; 63   : 	// ---
; 64   : 	GCItemListSend(aIndex);

  00289	57		 push	 edi
  0028a	e8 00 00 00 00	 call	 ?GCItemListSend@@YAXH@Z	; GCItemListSend

; 65   : 	// ---
; 66   : 	GCMagicListMultiSend(&gObj[aIndex],0);

  0028f	8d 86 00 00 00
	00		 lea	 eax, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi]
  00295	6a 00		 push	 0
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ?GCMagicListMultiSend@@YAXPAUOBJECTSTRUCT@@E@Z ; GCMagicListMultiSend
  0029d	83 c4 40	 add	 esp, 64			; 00000040H

; 67   : 	// ---
; 68   : 	CGRequestQuestInfo(aIndex);

  002a0	57		 push	 edi
  002a1	e8 00 00 00 00	 call	 ?CGRequestQuestInfo@@YAXH@Z ; CGRequestQuestInfo

; 69   : 	// ---
; 70   : 	DGGuildMemberInfoRequest(aIndex);

  002a6	57		 push	 edi
  002a7	e8 00 00 00 00	 call	 ?DGGuildMemberInfoRequest@@YAXH@Z ; DGGuildMemberInfoRequest

; 71   : 	// ---
; 72   : 	FriendListRequest(aIndex);

  002ac	57		 push	 edi
  002ad	e8 00 00 00 00	 call	 ?FriendListRequest@@YAXH@Z ; FriendListRequest

; 73   : 	// ---
; 74   : 	gObjCalCharacter(aIndex);

  002b2	57		 push	 edi
  002b3	e8 00 00 00 00	 call	 ?gObjCalCharacter@@YAXH@Z ; gObjCalCharacter

; 75   : }

  002b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bb	83 c4 10	 add	 esp, 16			; 00000010H
  002be	5f		 pop	 edi
  002bf	33 cd		 xor	 ecx, ebp
  002c1	5e		 pop	 esi
  002c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c7	8b e5		 mov	 esp, ebp
  002c9	5d		 pop	 ebp
  002ca	c2 04 00	 ret	 4
?Refresh@CToolKit@@QAEXK@Z ENDP				; CToolKit::Refresh
_TEXT	ENDS
PUBLIC	??_C@_03GPMPFJHC@?$HO?$CFs?$AA@			; `string'
PUBLIC	??_C@_03HPDLNGOA@?$EA?$CFs?$AA@			; `string'
PUBLIC	??_C@_04MAKOKGKI@?$EA?$EA?$CFs?$AA@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	?SendMsg@CToolKit@@QAAXHPADZZ			; CToolKit::SendMsg
EXTRN	?ChatMsgSend@@YAXPADZZ:PROC			; ChatMsgSend
EXTRN	?ChatWisperServer@@YAXPADZZ:PROC		; ChatWisperServer
;	COMDAT ??_C@_03GPMPFJHC@?$HO?$CFs?$AA@
CONST	SEGMENT
??_C@_03GPMPFJHC@?$HO?$CFs?$AA@ DB '~%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HPDLNGOA@?$EA?$CFs?$AA@
CONST	SEGMENT
??_C@_03HPDLNGOA@?$EA?$CFs?$AA@ DB '@%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MAKOKGKI@?$EA?$EA?$CFs?$AA@
CONST	SEGMENT
??_C@_04MAKOKGKI@?$EA?$EA?$CFs?$AA@ DB '@@%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SendMsg@CToolKit@@QAAXHPADZZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iColor$ = 12						; size = 4
_szMsg$ = 16						; size = 4
?SendMsg@CToolKit@@QAAXHPADZZ PROC			; CToolKit::SendMsg, COMDAT

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	switch(iColor)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _iColor$[ebp]
  00006	48		 dec	 eax
  00007	74 3f		 je	 SHORT $LN4@SendMsg
  00009	48		 dec	 eax
  0000a	74 29		 je	 SHORT $LN3@SendMsg
  0000c	48		 dec	 eax
  0000d	74 13		 je	 SHORT $LN2@SendMsg

; 89   : 	    break;
; 90   : 	default:
; 91   : 		ChatWisperServer("%s", szMsg);

  0000f	8b 45 10	 mov	 eax, DWORD PTR _szMsg$[ebp]
  00012	50		 push	 eax
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  00018	e8 00 00 00 00	 call	 ?ChatWisperServer@@YAXPADZZ ; ChatWisperServer
  0001d	83 c4 08	 add	 esp, 8

; 92   : 		break;
; 93   : 	}
; 94   : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
$LN2@SendMsg:

; 86   : 		break;
; 87   : 	case 3:
; 88   : 		ChatMsgSend("@@%s", szMsg);

  00022	8b 4d 10	 mov	 ecx, DWORD PTR _szMsg$[ebp]
  00025	51		 push	 ecx
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_04MAKOKGKI@?$EA?$EA?$CFs?$AA@
  0002b	e8 00 00 00 00	 call	 ?ChatMsgSend@@YAXPADZZ	; ChatMsgSend
  00030	83 c4 08	 add	 esp, 8

; 92   : 		break;
; 93   : 	}
; 94   : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN3@SendMsg:

; 83   : 		break;
; 84   : 	case 2:
; 85   : 		ChatMsgSend("@%s", szMsg);

  00035	8b 55 10	 mov	 edx, DWORD PTR _szMsg$[ebp]
  00038	52		 push	 edx
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_03HPDLNGOA@?$EA?$CFs?$AA@
  0003e	e8 00 00 00 00	 call	 ?ChatMsgSend@@YAXPADZZ	; ChatMsgSend
  00043	83 c4 08	 add	 esp, 8

; 92   : 		break;
; 93   : 	}
; 94   : }

  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN4@SendMsg:

; 80   : 	{
; 81   : 	case 1:
; 82   : 		ChatMsgSend("~%s", szMsg);

  00048	8b 45 10	 mov	 eax, DWORD PTR _szMsg$[ebp]
  0004b	50		 push	 eax
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_03GPMPFJHC@?$HO?$CFs?$AA@
  00051	e8 00 00 00 00	 call	 ?ChatMsgSend@@YAXPADZZ	; ChatMsgSend
  00056	83 c4 08	 add	 esp, 8

; 92   : 		break;
; 93   : 	}
; 94   : }

  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?SendMsg@CToolKit@@QAAXHPADZZ ENDP			; CToolKit::SendMsg
_TEXT	ENDS
PUBLIC	??_C@_04KHKKIIL@Null?$AA@			; `string'
PUBLIC	??_C@_04CJFIPIII@Aida?$AA@			; `string'
PUBLIC	??_C@_0O@HAMDKAON@Land?5of?5Trial?$AA@		; `string'
PUBLIC	??_C@_0BA@HGKEFBJF@Valley?5of?5Loren?$AA@	; `string'
PUBLIC	??_C@_08GJPEFKKC@Kalima?56?$AA@			; `string'
PUBLIC	??_C@_08ECNJAJGB@Kalima?55?$AA@			; `string'
PUBLIC	??_C@_08FLMCDICA@Kalima?54?$AA@			; `string'
PUBLIC	??_C@_08BEIDKOOH@Kalima?53?$AA@			; `string'
PUBLIC	??_C@_08NJIJPKG@Kalima?52?$AA@			; `string'
PUBLIC	??_C@_08CGLFMMGF@Kalima?51?$AA@			; `string'
PUBLIC	??_C@_0P@LKBGOLON@Chaos?5Castle?56?$AA@		; `string'
PUBLIC	??_C@_0P@JBDLLICO@Chaos?5Castle?55?$AA@		; `string'
PUBLIC	??_C@_0P@IICAIJGP@Chaos?5Castle?54?$AA@		; `string'
PUBLIC	??_C@_0P@MHGBBPKI@Chaos?5Castle?53?$AA@		; `string'
PUBLIC	??_C@_0P@NOHKCOOJ@Chaos?5Castle?52?$AA@		; `string'
PUBLIC	??_C@_0P@PFFHHNCK@Chaos?5Castle?51?$AA@		; `string'
PUBLIC	??_C@_0P@HOHBFDKH@Blood?5Castle?57?$AA@		; `string'
PUBLIC	??_C@_0P@GHGKGCOG@Blood?5Castle?56?$AA@		; `string'
PUBLIC	??_C@_0P@EMEHDBCF@Blood?5Castle?55?$AA@		; `string'
PUBLIC	??_C@_0P@FFFMAAGE@Blood?5Castle?54?$AA@		; `string'
PUBLIC	??_C@_0P@BKBNJGKD@Blood?5Castle?53?$AA@		; `string'
PUBLIC	??_C@_0P@DAGKHOC@Blood?5Castle?52?$AA@		; `string'
PUBLIC	??_C@_0P@CICLPECB@Blood?5Castle?51?$AA@		; `string'
PUBLIC	??_C@_06OCMNLLL@Icarus?$AA@			; `string'
PUBLIC	??_C@_0N@GKBOAPPP@Devil?5Square?$AA@		; `string'
PUBLIC	??_C@_06KLPPBFEJ@Tarkan?$AA@			; `string'
PUBLIC	??_C@_06IJFPNHKO@Atlans?$AA@			; `string'
PUBLIC	??_C@_05DLHMIPMH@Arena?$AA@			; `string'
PUBLIC	??_C@_09PPNHJEI@Losttower?$AA@			; `string'
PUBLIC	??_C@_05JKNLBHIC@Noria?$AA@			; `string'
PUBLIC	??_C@_06PHFFMJMG@Devias?$AA@			; `string'
PUBLIC	??_C@_07CELLBLHP@Dungeon?$AA@			; `string'
PUBLIC	??_C@_08DPCEMNDG@Lorencia?$AA@			; `string'
PUBLIC	?GetMapName@CToolKit@@QAEPADH@Z			; CToolKit::GetMapName
;	COMDAT ??_C@_04KHKKIIL@Null?$AA@
CONST	SEGMENT
??_C@_04KHKKIIL@Null?$AA@ DB 'Null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJFIPIII@Aida?$AA@
CONST	SEGMENT
??_C@_04CJFIPIII@Aida?$AA@ DB 'Aida', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HAMDKAON@Land?5of?5Trial?$AA@
CONST	SEGMENT
??_C@_0O@HAMDKAON@Land?5of?5Trial?$AA@ DB 'Land of Trial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HGKEFBJF@Valley?5of?5Loren?$AA@
CONST	SEGMENT
??_C@_0BA@HGKEFBJF@Valley?5of?5Loren?$AA@ DB 'Valley of Loren', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GJPEFKKC@Kalima?56?$AA@
CONST	SEGMENT
??_C@_08GJPEFKKC@Kalima?56?$AA@ DB 'Kalima 6', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ECNJAJGB@Kalima?55?$AA@
CONST	SEGMENT
??_C@_08ECNJAJGB@Kalima?55?$AA@ DB 'Kalima 5', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FLMCDICA@Kalima?54?$AA@
CONST	SEGMENT
??_C@_08FLMCDICA@Kalima?54?$AA@ DB 'Kalima 4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BEIDKOOH@Kalima?53?$AA@
CONST	SEGMENT
??_C@_08BEIDKOOH@Kalima?53?$AA@ DB 'Kalima 3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJIJPKG@Kalima?52?$AA@
CONST	SEGMENT
??_C@_08NJIJPKG@Kalima?52?$AA@ DB 'Kalima 2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CGLFMMGF@Kalima?51?$AA@
CONST	SEGMENT
??_C@_08CGLFMMGF@Kalima?51?$AA@ DB 'Kalima 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LKBGOLON@Chaos?5Castle?56?$AA@
CONST	SEGMENT
??_C@_0P@LKBGOLON@Chaos?5Castle?56?$AA@ DB 'Chaos Castle 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JBDLLICO@Chaos?5Castle?55?$AA@
CONST	SEGMENT
??_C@_0P@JBDLLICO@Chaos?5Castle?55?$AA@ DB 'Chaos Castle 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IICAIJGP@Chaos?5Castle?54?$AA@
CONST	SEGMENT
??_C@_0P@IICAIJGP@Chaos?5Castle?54?$AA@ DB 'Chaos Castle 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MHGBBPKI@Chaos?5Castle?53?$AA@
CONST	SEGMENT
??_C@_0P@MHGBBPKI@Chaos?5Castle?53?$AA@ DB 'Chaos Castle 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NOHKCOOJ@Chaos?5Castle?52?$AA@
CONST	SEGMENT
??_C@_0P@NOHKCOOJ@Chaos?5Castle?52?$AA@ DB 'Chaos Castle 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PFFHHNCK@Chaos?5Castle?51?$AA@
CONST	SEGMENT
??_C@_0P@PFFHHNCK@Chaos?5Castle?51?$AA@ DB 'Chaos Castle 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOHBFDKH@Blood?5Castle?57?$AA@
CONST	SEGMENT
??_C@_0P@HOHBFDKH@Blood?5Castle?57?$AA@ DB 'Blood Castle 7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHGKGCOG@Blood?5Castle?56?$AA@
CONST	SEGMENT
??_C@_0P@GHGKGCOG@Blood?5Castle?56?$AA@ DB 'Blood Castle 6', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EMEHDBCF@Blood?5Castle?55?$AA@
CONST	SEGMENT
??_C@_0P@EMEHDBCF@Blood?5Castle?55?$AA@ DB 'Blood Castle 5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FFFMAAGE@Blood?5Castle?54?$AA@
CONST	SEGMENT
??_C@_0P@FFFMAAGE@Blood?5Castle?54?$AA@ DB 'Blood Castle 4', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BKBNJGKD@Blood?5Castle?53?$AA@
CONST	SEGMENT
??_C@_0P@BKBNJGKD@Blood?5Castle?53?$AA@ DB 'Blood Castle 3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DAGKHOC@Blood?5Castle?52?$AA@
CONST	SEGMENT
??_C@_0P@DAGKHOC@Blood?5Castle?52?$AA@ DB 'Blood Castle 2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CICLPECB@Blood?5Castle?51?$AA@
CONST	SEGMENT
??_C@_0P@CICLPECB@Blood?5Castle?51?$AA@ DB 'Blood Castle 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCMNLLL@Icarus?$AA@
CONST	SEGMENT
??_C@_06OCMNLLL@Icarus?$AA@ DB 'Icarus', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GKBOAPPP@Devil?5Square?$AA@
CONST	SEGMENT
??_C@_0N@GKBOAPPP@Devil?5Square?$AA@ DB 'Devil Square', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLPPBFEJ@Tarkan?$AA@
CONST	SEGMENT
??_C@_06KLPPBFEJ@Tarkan?$AA@ DB 'Tarkan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IJFPNHKO@Atlans?$AA@
CONST	SEGMENT
??_C@_06IJFPNHKO@Atlans?$AA@ DB 'Atlans', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLHMIPMH@Arena?$AA@
CONST	SEGMENT
??_C@_05DLHMIPMH@Arena?$AA@ DB 'Arena', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PPNHJEI@Losttower?$AA@
CONST	SEGMENT
??_C@_09PPNHJEI@Losttower?$AA@ DB 'Losttower', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JKNLBHIC@Noria?$AA@
CONST	SEGMENT
??_C@_05JKNLBHIC@Noria?$AA@ DB 'Noria', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PHFFMJMG@Devias?$AA@
CONST	SEGMENT
??_C@_06PHFFMJMG@Devias?$AA@ DB 'Devias', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CELLBLHP@Dungeon?$AA@
CONST	SEGMENT
??_C@_07CELLBLHP@Dungeon?$AA@ DB 'Dungeon', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DPCEMNDG@Lorencia?$AA@
CONST	SEGMENT
??_C@_08DPCEMNDG@Lorencia?$AA@ DB 'Lorencia', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?GetMapName@CToolKit@@QAEPADH@Z
_TEXT	SEGMENT
_iMapNumber$ = 8					; size = 4
?GetMapName@CToolKit@@QAEPADH@Z PROC			; CToolKit::GetMapName, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 98   : 	switch(iMapNumber)

  00003	8b 45 08	 mov	 eax, DWORD PTR _iMapNumber$[ebp]
  00006	83 f8 21	 cmp	 eax, 33			; 00000021H
  00009	0f 87 27 01 00
	00		 ja	 $LN34@GetMapName
  0000f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN39@GetMapName[eax*4]
$LN33@GetMapName:

; 99   : 	{
; 100  : 	case MAP_INDEX_LORENCIA:
; 101  : 		return "Lorencia";

  00016	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08DPCEMNDG@Lorencia?$AA@

; 201  : }

  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
$LN32@GetMapName:

; 102  : 		// ---
; 103  : 	case MAP_INDEX_DUNGEON:
; 104  : 		return "Dungeon";

  0001f	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_07CELLBLHP@Dungeon?$AA@

; 201  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
$LN31@GetMapName:

; 105  : 		// ---
; 106  : 	case MAP_INDEX_DEVIAS:
; 107  : 		return "Devias";

  00028	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06PHFFMJMG@Devias?$AA@

; 201  : }

  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
$LN30@GetMapName:

; 108  : 		// ---
; 109  : 	case MAP_INDEX_NORIA:
; 110  : 		return "Noria";

  00031	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05JKNLBHIC@Noria?$AA@

; 201  : }

  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN29@GetMapName:

; 111  : 		// ---
; 112  : 	case MAP_INDEX_LOSTTOWER:
; 113  : 		return "Losttower";

  0003a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_09PPNHJEI@Losttower?$AA@

; 201  : }

  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN27@GetMapName:

; 114  : 		// ---
; 115  : 	case MAP_INDEX_RESERVED:
; 116  : 		return "Null";
; 117  : 		// ---
; 118  : 	case MAP_INDEX_BATTLESOCCER:
; 119  : 		return "Arena";

  00043	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05DLHMIPMH@Arena?$AA@

; 201  : }

  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN26@GetMapName:

; 120  : 		// ---
; 121  : 	case MAP_INDEX_ATHLANSE:
; 122  : 		return "Atlans";

  0004c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06IJFPNHKO@Atlans?$AA@

; 201  : }

  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
$LN25@GetMapName:

; 123  : 		// ---
; 124  : 	case MAP_INDEX_TARKAN:
; 125  : 		return "Tarkan";

  00055	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06KLPPBFEJ@Tarkan?$AA@

; 201  : }

  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
$LN24@GetMapName:

; 126  : 		// ---
; 127  : 	case MAP_INDEX_DEVILSQUARE:
; 128  : 		return "Devil Square";

  0005e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0N@GKBOAPPP@Devil?5Square?$AA@

; 201  : }

  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
$LN23@GetMapName:

; 129  : 		// ---
; 130  : 	case MAP_INDEX_ICARUS:
; 131  : 		return "Icarus";

  00067	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06OCMNLLL@Icarus?$AA@

; 201  : }

  0006c	5d		 pop	 ebp
  0006d	c2 04 00	 ret	 4
$LN22@GetMapName:

; 132  : 		// ---
; 133  : 	case MAP_INDEX_BLOODCASTLE1:
; 134  : 		return "Blood Castle 1";

  00070	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@CICLPECB@Blood?5Castle?51?$AA@

; 201  : }

  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
$LN21@GetMapName:

; 135  : 		// ---
; 136  : 	case MAP_INDEX_BLOODCASTLE2:
; 137  : 		return "Blood Castle 2";

  00079	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@DAGKHOC@Blood?5Castle?52?$AA@

; 201  : }

  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
$LN20@GetMapName:

; 138  : 		// ---
; 139  : 	case MAP_INDEX_BLOODCASTLE3:
; 140  : 		return "Blood Castle 3";

  00082	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@BKBNJGKD@Blood?5Castle?53?$AA@

; 201  : }

  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
$LN19@GetMapName:

; 141  : 		// ---
; 142  : 	case MAP_INDEX_BLOODCASTLE4:
; 143  : 		return "Blood Castle 4";

  0008b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@FFFMAAGE@Blood?5Castle?54?$AA@

; 201  : }

  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
$LN18@GetMapName:

; 144  : 		// ---
; 145  : 	case MAP_INDEX_BLOODCASTLE5:
; 146  : 		return "Blood Castle 5";

  00094	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@EMEHDBCF@Blood?5Castle?55?$AA@

; 201  : }

  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
$LN17@GetMapName:

; 147  : 		// ---
; 148  : 	case MAP_INDEX_BLOODCASTLE6:
; 149  : 		return "Blood Castle 6";

  0009d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@GHGKGCOG@Blood?5Castle?56?$AA@

; 201  : }

  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
$LN16@GetMapName:

; 150  : 		// ---
; 151  : 	case MAP_INDEX_BLOODCASTLE7:
; 152  : 		return "Blood Castle 7";

  000a6	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@HOHBFDKH@Blood?5Castle?57?$AA@

; 201  : }

  000ab	5d		 pop	 ebp
  000ac	c2 04 00	 ret	 4
$LN15@GetMapName:

; 153  : 		// ---
; 154  : 	case MAP_INDEX_CHAOSCASTLE1:
; 155  : 		return "Chaos Castle 1";

  000af	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@PFFHHNCK@Chaos?5Castle?51?$AA@

; 201  : }

  000b4	5d		 pop	 ebp
  000b5	c2 04 00	 ret	 4
$LN14@GetMapName:

; 156  : 		// ---
; 157  : 	case MAP_INDEX_CHAOSCASTLE2:
; 158  : 		return "Chaos Castle 2";

  000b8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@NOHKCOOJ@Chaos?5Castle?52?$AA@

; 201  : }

  000bd	5d		 pop	 ebp
  000be	c2 04 00	 ret	 4
$LN13@GetMapName:

; 159  : 		// ---
; 160  : 	case MAP_INDEX_CHAOSCASTLE3:
; 161  : 		return "Chaos Castle 3";

  000c1	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@MHGBBPKI@Chaos?5Castle?53?$AA@

; 201  : }

  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
$LN12@GetMapName:

; 162  : 		// ---
; 163  : 	case MAP_INDEX_CHAOSCASTLE4:
; 164  : 		return "Chaos Castle 4";

  000ca	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@IICAIJGP@Chaos?5Castle?54?$AA@

; 201  : }

  000cf	5d		 pop	 ebp
  000d0	c2 04 00	 ret	 4
$LN11@GetMapName:

; 165  : 		// ---
; 166  : 	case MAP_INDEX_CHAOSCASTLE5:
; 167  : 		return "Chaos Castle 5";

  000d3	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@JBDLLICO@Chaos?5Castle?55?$AA@

; 201  : }

  000d8	5d		 pop	 ebp
  000d9	c2 04 00	 ret	 4
$LN10@GetMapName:

; 168  : 		// ---
; 169  : 	case MAP_INDEX_CHAOSCASTLE6:
; 170  : 		return "Chaos Castle 6";

  000dc	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0P@LKBGOLON@Chaos?5Castle?56?$AA@

; 201  : }

  000e1	5d		 pop	 ebp
  000e2	c2 04 00	 ret	 4
$LN9@GetMapName:

; 171  : 		// ---
; 172  : 	case MAP_INDEX_KALIMA1:
; 173  : 		return "Kalima 1";

  000e5	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08CGLFMMGF@Kalima?51?$AA@

; 201  : }

  000ea	5d		 pop	 ebp
  000eb	c2 04 00	 ret	 4
$LN8@GetMapName:

; 174  : 		// ---
; 175  : 	case MAP_INDEX_KALIMA2:
; 176  : 		return "Kalima 2";

  000ee	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08NJIJPKG@Kalima?52?$AA@

; 201  : }

  000f3	5d		 pop	 ebp
  000f4	c2 04 00	 ret	 4
$LN7@GetMapName:

; 177  : 		// ---
; 178  : 	case MAP_INDEX_KALIMA3:
; 179  : 		return "Kalima 3";

  000f7	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08BEIDKOOH@Kalima?53?$AA@

; 201  : }

  000fc	5d		 pop	 ebp
  000fd	c2 04 00	 ret	 4
$LN6@GetMapName:

; 180  : 		// ---
; 181  : 	case MAP_INDEX_KALIMA4:
; 182  : 		return "Kalima 4";

  00100	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08FLMCDICA@Kalima?54?$AA@

; 201  : }

  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
$LN5@GetMapName:

; 183  : 		// ---
; 184  : 	case MAP_INDEX_KALIMA5:
; 185  : 		return "Kalima 5";

  00109	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08ECNJAJGB@Kalima?55?$AA@

; 201  : }

  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
$LN4@GetMapName:

; 186  : 		// ---
; 187  : 	case MAP_INDEX_KALIMA6:
; 188  : 		return "Kalima 6";

  00112	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08GJPEFKKC@Kalima?56?$AA@

; 201  : }

  00117	5d		 pop	 ebp
  00118	c2 04 00	 ret	 4
$LN3@GetMapName:

; 189  : 		// ---
; 190  : 	case MAP_INDEX_CASTLESIEGE:
; 191  : 		return "Valley of Loren";

  0011b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BA@HGKEFBJF@Valley?5of?5Loren?$AA@

; 201  : }

  00120	5d		 pop	 ebp
  00121	c2 04 00	 ret	 4
$LN2@GetMapName:

; 192  : 		// ---
; 193  : 	case MAP_INDEX_CASTLEHUNTZONE:
; 194  : 		return "Land of Trial";

  00124	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0O@HAMDKAON@Land?5of?5Trial?$AA@

; 201  : }

  00129	5d		 pop	 ebp
  0012a	c2 04 00	 ret	 4
$LN1@GetMapName:

; 195  : 		// ---
; 196  : 	case MAP_INDEX_AIDA:
; 197  : 		return "Aida";

  0012d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_04CJFIPIII@Aida?$AA@

; 201  : }

  00132	5d		 pop	 ebp
  00133	c2 04 00	 ret	 4
$LN34@GetMapName:

; 198  : 	}
; 199  : 	// ---
; 200  : 	return "Null";

  00136	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_04KHKKIIL@Null?$AA@

; 201  : }

  0013b	5d		 pop	 ebp
  0013c	c2 04 00	 ret	 4
  0013f	90		 npad	 1
$LN39@GetMapName:
  00140	00 00 00 00	 DD	 $LN33@GetMapName
  00144	00 00 00 00	 DD	 $LN32@GetMapName
  00148	00 00 00 00	 DD	 $LN31@GetMapName
  0014c	00 00 00 00	 DD	 $LN30@GetMapName
  00150	00 00 00 00	 DD	 $LN29@GetMapName
  00154	00 00 00 00	 DD	 $LN34@GetMapName
  00158	00 00 00 00	 DD	 $LN27@GetMapName
  0015c	00 00 00 00	 DD	 $LN26@GetMapName
  00160	00 00 00 00	 DD	 $LN25@GetMapName
  00164	00 00 00 00	 DD	 $LN24@GetMapName
  00168	00 00 00 00	 DD	 $LN23@GetMapName
  0016c	00 00 00 00	 DD	 $LN22@GetMapName
  00170	00 00 00 00	 DD	 $LN21@GetMapName
  00174	00 00 00 00	 DD	 $LN20@GetMapName
  00178	00 00 00 00	 DD	 $LN19@GetMapName
  0017c	00 00 00 00	 DD	 $LN18@GetMapName
  00180	00 00 00 00	 DD	 $LN17@GetMapName
  00184	00 00 00 00	 DD	 $LN16@GetMapName
  00188	00 00 00 00	 DD	 $LN15@GetMapName
  0018c	00 00 00 00	 DD	 $LN14@GetMapName
  00190	00 00 00 00	 DD	 $LN13@GetMapName
  00194	00 00 00 00	 DD	 $LN12@GetMapName
  00198	00 00 00 00	 DD	 $LN11@GetMapName
  0019c	00 00 00 00	 DD	 $LN10@GetMapName
  001a0	00 00 00 00	 DD	 $LN9@GetMapName
  001a4	00 00 00 00	 DD	 $LN8@GetMapName
  001a8	00 00 00 00	 DD	 $LN7@GetMapName
  001ac	00 00 00 00	 DD	 $LN6@GetMapName
  001b0	00 00 00 00	 DD	 $LN5@GetMapName
  001b4	00 00 00 00	 DD	 $LN4@GetMapName
  001b8	00 00 00 00	 DD	 $LN3@GetMapName
  001bc	00 00 00 00	 DD	 $LN2@GetMapName
  001c0	00 00 00 00	 DD	 $LN34@GetMapName
  001c4	00 00 00 00	 DD	 $LN1@GetMapName
?GetMapName@CToolKit@@QAEPADH@Z ENDP			; CToolKit::GetMapName
_TEXT	ENDS
PUBLIC	??_C@_02NJPGOMH@?$CFf?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GetPrivateProfileFloat@@YAMPBD0M0@Z		; GetPrivateProfileFloat
EXTRN	_atof:PROC
EXTRN	__imp__GetPrivateProfileStringA@24:PROC
EXTRN	_sprintf:PROC
;	COMDAT ??_C@_02NJPGOMH@?$CFf?$AA@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf?$AA@ DB '%f', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?GetPrivateProfileFloat@@YAMPBD0M0@Z
_TEXT	SEGMENT
tv88 = -520						; size = 4
_szBuffer$ = -516					; size = 256
_szDefault$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_lpAppName$ = 8						; size = 4
_lpKeyName$ = 12					; size = 4
_fDefault$ = 16						; size = 4
_lpFileName$ = 20					; size = 4
?GetPrivateProfileFloat@@YAMPBD0M0@Z PROC		; GetPrivateProfileFloat, COMDAT

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 02 00
	00		 sub	 esp, 520		; 00000208H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 14	 mov	 ebx, DWORD PTR _lpFileName$[ebp]
  00017	56		 push	 esi
  00018	8b 75 08	 mov	 esi, DWORD PTR _lpAppName$[ebp]
  0001b	57		 push	 edi
  0001c	8b 7d 0c	 mov	 edi, DWORD PTR _lpKeyName$[ebp]

; 205  : 	char szBuffer[256] = {0};

  0001f	68 ff 00 00 00	 push	 255			; 000000ffH
  00024	8d 85 fd fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  0002a	6a 00		 push	 0
  0002c	50		 push	 eax
  0002d	c6 85 fc fd ff
	ff 00		 mov	 BYTE PTR _szBuffer$[ebp], 0
  00034	e8 00 00 00 00	 call	 _memset

; 206  : 	char szDefault[256] = {0};

  00039	68 ff 00 00 00	 push	 255			; 000000ffH
  0003e	8d 8d fd fe ff
	ff		 lea	 ecx, DWORD PTR _szDefault$[ebp+1]
  00044	6a 00		 push	 0
  00046	51		 push	 ecx
  00047	c6 85 fc fe ff
	ff 00		 mov	 BYTE PTR _szDefault$[ebp], 0
  0004e	e8 00 00 00 00	 call	 _memset

; 207  : 	// ---
; 208  : 	float fValue;
; 209  : 	// ---
; 210  : 	sprintf(szDefault, "%f", fDefault);

  00053	d9 45 10	 fld	 DWORD PTR _fDefault$[ebp]
  00056	83 c4 10	 add	 esp, 16			; 00000010H
  00059	dd 1c 24	 fstp	 QWORD PTR [esp]
  0005c	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _szDefault$[ebp]
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_02NJPGOMH@?$CFf?$AA@
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 _sprintf
  0006d	83 c4 10	 add	 esp, 16			; 00000010H

; 211  : 	// ---
; 212  : 	GetPrivateProfileStringA(lpAppName, lpKeyName, szDefault, szBuffer, 256, lpFileName);

  00070	53		 push	 ebx
  00071	68 00 01 00 00	 push	 256			; 00000100H
  00076	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _szBuffer$[ebp]
  0007c	50		 push	 eax
  0007d	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _szDefault$[ebp]
  00083	51		 push	 ecx
  00084	57		 push	 edi
  00085	56		 push	 esi
  00086	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24

; 213  : 	// ---
; 214  :     fValue = atof(szBuffer); 

  0008c	8d 95 fc fd ff
	ff		 lea	 edx, DWORD PTR _szBuffer$[ebp]
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 _atof

; 215  : 	// --
; 216  :     return fValue; 

  00098	d9 9d f8 fd ff
	ff		 fstp	 DWORD PTR tv88[ebp]

; 217  : }

  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	d9 85 f8 fd ff
	ff		 fld	 DWORD PTR tv88[ebp]
  000a7	83 c4 04	 add	 esp, 4
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	33 cd		 xor	 ecx, ebp
  000ae	5b		 pop	 ebx
  000af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?GetPrivateProfileFloat@@YAMPBD0M0@Z ENDP		; GetPrivateProfileFloat
_TEXT	ENDS
EXTRN	__time64:PROC
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
;	COMDAT _time
_TEXT	SEGMENT
_time	PROC						; COMDAT
; __Time$ = eax

; 133  :     return _time64(_Time);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 __time64
  00006	83 c4 04	 add	 esp, 4

; 134  : }

  00009	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ExcOpt@CToolKit@@QAEHH@Z			; CToolKit::ExcOpt
EXTRN	_rand:PROC
EXTRN	_srand:PROC
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\toolkit.cpp
;	COMDAT ?ExcOpt@CToolKit@@QAEHH@Z
_TEXT	SEGMENT
_opt_db$ = -52						; size = 24
_opt_done$ = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
_amount$ = 8						; size = 4
?ExcOpt@CToolKit@@QAEHH@Z PROC				; CToolKit::ExcOpt, COMDAT
; _this$ = ecx

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi

; 221  : 	if (amount > 6) amount = 6;

  00012	8b 75 08	 mov	 esi, DWORD PTR _amount$[ebp]
  00015	57		 push	 edi
  00016	83 fe 06	 cmp	 esi, 6
  00019	7e 07		 jle	 SHORT $LN14@ExcOpt
  0001b	be 06 00 00 00	 mov	 esi, 6

; 222  : 	if (amount < 1) amount = 1;

  00020	eb 0a		 jmp	 SHORT $LN13@ExcOpt
$LN14@ExcOpt:
  00022	83 fe 01	 cmp	 esi, 1
  00025	7d 05		 jge	 SHORT $LN13@ExcOpt
  00027	be 01 00 00 00	 mov	 esi, 1
$LN13@ExcOpt:

; 223  : 
; 224  : 	srand(time(NULL));

  0002c	33 ff		 xor	 edi, edi
  0002e	57		 push	 edi
  0002f	e8 00 00 00 00	 call	 __time64
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _srand
  0003a	83 c4 08	 add	 esp, 8

; 225  : 
; 226  : 	amount = rand() % amount + 1;

  0003d	e8 00 00 00 00	 call	 _rand
  00042	99		 cdq
  00043	f7 fe		 idiv	 esi

; 227  : 
; 228  : 	int opt_db[6]  = {1, 2, 4, 8, 16, 32};
; 229  : 	int exc = 0;
; 230  : 
; 231  : 	int opt_done[6] = { 0 };

  00045	33 c0		 xor	 eax, eax
  00047	33 db		 xor	 ebx, ebx
  00049	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR _opt_db$[ebp], 1
  00050	c7 45 d0 02 00
	00 00		 mov	 DWORD PTR _opt_db$[ebp+4], 2
  00057	c7 45 d4 04 00
	00 00		 mov	 DWORD PTR _opt_db$[ebp+8], 4
  0005e	c7 45 d8 08 00
	00 00		 mov	 DWORD PTR _opt_db$[ebp+12], 8
  00065	c7 45 dc 10 00
	00 00		 mov	 DWORD PTR _opt_db$[ebp+16], 16 ; 00000010H
  0006c	c7 45 e0 20 00
	00 00		 mov	 DWORD PTR _opt_db$[ebp+20], 32 ; 00000020H
  00073	89 7d e4	 mov	 DWORD PTR _opt_done$[ebp], edi
  00076	89 45 e8	 mov	 DWORD PTR _opt_done$[ebp+4], eax
  00079	89 45 ec	 mov	 DWORD PTR _opt_done$[ebp+8], eax
  0007c	89 45 f0	 mov	 DWORD PTR _opt_done$[ebp+12], eax
  0007f	89 45 f4	 mov	 DWORD PTR _opt_done$[ebp+16], eax
  00082	89 45 f8	 mov	 DWORD PTR _opt_done$[ebp+20], eax
  00085	8d 72 01	 lea	 esi, DWORD PTR [edx+1]

; 232  : 
; 233  : 	for(int n=0; n < amount; n++)

  00088	85 f6		 test	 esi, esi
  0008a	7e 68		 jle	 SHORT $LN10@ExcOpt
  0008c	8d 64 24 00	 npad	 4
$LL34@ExcOpt:

; 234  : 	{
; 235  : 		int SearchExc = 0;
; 236  : 
; 237  : 		srand(time(NULL));

  00090	6a 00		 push	 0
  00092	e8 00 00 00 00	 call	 __time64
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 _srand
  0009d	83 c4 08	 add	 esp, 8

; 238  : 
; 239  : 		if( n == 0 )

  000a0	85 ff		 test	 edi, edi
  000a2	75 1c		 jne	 SHORT $LL7@ExcOpt

; 240  : 		{
; 241  : 			SearchExc = opt_db[rand()%6];

  000a4	e8 00 00 00 00	 call	 _rand
  000a9	99		 cdq
  000aa	b9 06 00 00 00	 mov	 ecx, 6
  000af	f7 f9		 idiv	 ecx
  000b1	8b 54 95 cc	 mov	 edx, DWORD PTR _opt_db$[ebp+edx*4]

; 242  : 			opt_done[n] = SearchExc;

  000b5	89 55 e4	 mov	 DWORD PTR _opt_done$[ebp], edx

; 243  : 		}
; 244  : 		else

  000b8	eb 31		 jmp	 SHORT $LN6@ExcOpt
  000ba	8d 9b 00 00 00
	00		 npad	 6
$LL7@ExcOpt:

; 245  : 		{
; 246  : 			while(true)
; 247  : 			{
; 248  : 				SearchExc = opt_db[rand()%6];

  000c0	e8 00 00 00 00	 call	 _rand
  000c5	99		 cdq
  000c6	b9 06 00 00 00	 mov	 ecx, 6
  000cb	f7 f9		 idiv	 ecx

; 249  : 				bool bOpt = true;

  000cd	b1 01		 mov	 cl, 1

; 250  : 
; 251  : 				for(int i=0; i<amount; i++)

  000cf	33 c0		 xor	 eax, eax
  000d1	8b 54 95 cc	 mov	 edx, DWORD PTR _opt_db$[ebp+edx*4]
$LL5@ExcOpt:

; 252  : 				{
; 253  : 					if(SearchExc == opt_done[i])

  000d5	3b 54 85 e4	 cmp	 edx, DWORD PTR _opt_done$[ebp+eax*4]
  000d9	75 02		 jne	 SHORT $LN4@ExcOpt

; 254  : 					{
; 255  : 						bOpt = false;

  000db	32 c9		 xor	 cl, cl
$LN4@ExcOpt:

; 250  : 
; 251  : 				for(int i=0; i<amount; i++)

  000dd	40		 inc	 eax
  000de	3b c6		 cmp	 eax, esi
  000e0	7c f3		 jl	 SHORT $LL5@ExcOpt

; 256  : 					}
; 257  : 				}
; 258  : 
; 259  : 				if(bOpt == true)

  000e2	80 f9 01	 cmp	 cl, 1
  000e5	75 d9		 jne	 SHORT $LL7@ExcOpt

; 260  : 				{
; 261  : 					opt_done[n] = SearchExc;

  000e7	89 54 bd e4	 mov	 DWORD PTR _opt_done$[ebp+edi*4], edx
$LN6@ExcOpt:

; 232  : 
; 233  : 	for(int n=0; n < amount; n++)

  000eb	47		 inc	 edi

; 262  : 					break;
; 263  : 				}
; 264  : 			}
; 265  : 		}
; 266  : 
; 267  : 		exc += SearchExc;

  000ec	03 da		 add	 ebx, edx
  000ee	3b fe		 cmp	 edi, esi
  000f0	7c 9e		 jl	 SHORT $LL34@ExcOpt

; 268  : 	}
; 269  : 
; 270  : 	return exc;

  000f2	8b c3		 mov	 eax, ebx
$LN10@ExcOpt:

; 271  : }

  000f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	33 cd		 xor	 ecx, ebp
  000fb	5b		 pop	 ebx
  000fc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 04 00	 ret	 4
?ExcOpt@CToolKit@@QAEHH@Z ENDP				; CToolKit::ExcOpt
_TEXT	ENDS
END
