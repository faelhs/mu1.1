; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\HealthBar.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gHealthBar@@3VCHealthBar@@A			; gHealthBar
_BSS	SEGMENT
?gHealthBar@@3VCHealthBar@@A DB 01H DUP (?)		; gHealthBar
_BSS	ENDS
PUBLIC	?set@PBMSG_HEAD2@@QAEXPAEEEE@Z			; PBMSG_HEAD2::set
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\include\prodef.h
;	COMDAT ?set@PBMSG_HEAD2@@QAEXPAEEEE@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_head$ = 12						; size = 1
_sub$ = 16						; size = 1
_size$ = 20						; size = 1
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z PROC			; PBMSG_HEAD2::set, COMDAT
; _this$ = ecx

; 142  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 143  : 		lpBuf[0] = 0xC1;

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpBuf$[ebp]

; 144  : 		lpBuf[1] = size;

  00006	8a 4d 14	 mov	 cl, BYTE PTR _size$[ebp]

; 145  : 		lpBuf[2] = head;

  00009	8a 55 0c	 mov	 dl, BYTE PTR _head$[ebp]
  0000c	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 146  : 		lpBuf[3] = sub;

  0000f	8a 4d 10	 mov	 cl, BYTE PTR _sub$[ebp]
  00012	c6 00 c1	 mov	 BYTE PTR [eax], 193	; 000000c1H
  00015	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00018	88 48 03	 mov	 BYTE PTR [eax+3], cl

; 147  : 	};

  0001b	5d		 pop	 ebp
  0001c	c2 10 00	 ret	 16			; 00000010H
?set@PBMSG_HEAD2@@QAEXPAEEEE@Z ENDP			; PBMSG_HEAD2::set
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Send@CHealthBar@@QAEXHH@Z			; CHealthBar::Send
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\healthbar.cpp
;	COMDAT ?Send@CHealthBar@@QAEXHH@Z
_TEXT	SEGMENT
_pMsg$153437 = -32					; size = 28
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_tIndex$ = 12						; size = 4
?Send@CHealthBar@@QAEXHH@Z PROC				; CHealthBar::Send, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _tIndex$[ebp]
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _aIndex$[ebp]

; 34   : 	if(gObj[aIndex].Type == OBJ_USER)

  00017	8b c7		 mov	 eax, edi
  00019	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  0001f	66 83 b8 60 00
	00 00 01	 cmp	 WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+96], 1
  00027	75 77		 jne	 SHORT $LN1@Send

; 35   : 	{
; 36   : 		MSG_ANS_LIFEBAR_SEND pMsg = {0};
; 37   : 		pMsg.h.set((LPBYTE)&pMsg, 0xF3, 0x02, sizeof(MSG_ANS_LIFEBAR_SEND));
; 38   : 
; 39   : 		pMsg.NumberH	= SET_NUMBERH(tIndex);
; 40   : 		pMsg.NumberL	= SET_NUMBERL(tIndex);
; 41   : 
; 42   : 		pMsg.Life		= gObj[tIndex].Life;

  00029	56		 push	 esi
  0002a	8b f1		 mov	 esi, ecx
  0002c	33 c0		 xor	 eax, eax
  0002e	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  00034	8b d1		 mov	 edx, ecx
  00036	d9 86 bc 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+188]
  0003c	89 45 e1	 mov	 DWORD PTR _pMsg$153437[ebp+1], eax
  0003f	89 45 e5	 mov	 DWORD PTR _pMsg$153437[ebp+5], eax
  00042	c1 ea 08	 shr	 edx, 8
  00045	89 45 e9	 mov	 DWORD PTR _pMsg$153437[ebp+9], eax
  00048	89 45 ed	 mov	 DWORD PTR _pMsg$153437[ebp+13], eax
  0004b	89 45 f1	 mov	 DWORD PTR _pMsg$153437[ebp+17], eax
  0004e	89 45 f5	 mov	 DWORD PTR _pMsg$153437[ebp+21], eax
  00051	66 89 45 f9	 mov	 WORD PTR _pMsg$153437[ebp+25], ax
  00055	d9 5d f0	 fstp	 DWORD PTR _pMsg$153437[ebp+16]

; 43   : 		pMsg.MaxLife	= gObj[tIndex].MaxLife;

  00058	d9 86 c0 00 00
	00		 fld	 DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+192]
  0005e	88 45 fb	 mov	 BYTE PTR _pMsg$153437[ebp+27], al
  00061	0f b6 c2	 movzx	 eax, dl
  00064	0f b6 d1	 movzx	 edx, cl
  00067	c7 45 e0 c1 1c
	f3 02		 mov	 DWORD PTR _pMsg$153437[ebp], 49487041 ; 02f31cc1H
  0006e	89 45 e4	 mov	 DWORD PTR _pMsg$153437[ebp+4], eax
  00071	89 55 e8	 mov	 DWORD PTR _pMsg$153437[ebp+8], edx
  00074	e8 00 00 00 00	 call	 __ftol2_sse

; 44   : 		pMsg.Class		= gObj[tIndex].Class;
; 45   : 		pMsg.Level		= gObj[tIndex].Level;

  00079	0f bf 8e 9c 00
	00 00		 movsx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+156]
  00080	89 45 f4	 mov	 DWORD PTR _pMsg$153437[ebp+20], eax
  00083	0f b7 86 98 00
	00 00		 movzx	 eax, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+152]

; 46   : 
; 47   : 		DataSend(aIndex,(LPBYTE)&pMsg,pMsg.h.size);

  0008a	6a 1c		 push	 28			; 0000001cH
  0008c	8d 55 e0	 lea	 edx, DWORD PTR _pMsg$153437[ebp]
  0008f	52		 push	 edx
  00090	57		 push	 edi
  00091	89 45 f8	 mov	 DWORD PTR _pMsg$153437[ebp+24], eax
  00094	89 4d ec	 mov	 DWORD PTR _pMsg$153437[ebp+12], ecx
  00097	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	5e		 pop	 esi
$LN1@Send:

; 48   : 	}
; 49   : }

  000a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	33 cd		 xor	 ecx, ebp
  000a5	5f		 pop	 edi
  000a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 08 00	 ret	 8
?Send@CHealthBar@@QAEXHH@Z ENDP				; CHealthBar::Send
_TEXT	ENDS
PUBLIC	?Info@CHealthBar@@QAEXPAUOBJECTSTRUCT@@@Z	; CHealthBar::Info
EXTRN	?gObjCheckAttackArea@@YAHHH@Z:PROC		; gObjCheckAttackArea
EXTRN	?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z:PROC	; gObjCalDistance
; Function compile flags: /Ogtp
;	COMDAT ?Info@CHealthBar@@QAEXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
tv72 = 8						; size = 4
_lpObj$ = 8						; size = 4
?Info@CHealthBar@@QAEXPAUOBJECTSTRUCT@@@Z PROC		; CHealthBar::Info, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 8    : 	int tObjNum		= 0;
; 9    : 	LPOBJ lpTarget	= NULL;
; 10   : 	
; 11   : 	for(int i = 0;i < MAX_VIEWPORT;i++)

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _lpObj$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	8d bb 16 07 00
	00		 lea	 edi, DWORD PTR [ebx+1814]
  00013	c7 45 08 4b 00
	00 00		 mov	 DWORD PTR tv72[ebp], 75	; 0000004bH
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL7@Info:

; 12   : 	{
; 13   : 		if(lpObj->VpPlayer[i].state)

  00020	80 bf 7a fc ff
	ff 00		 cmp	 BYTE PTR [edi-902], 0
  00027	74 51		 je	 SHORT $LN6@Info

; 14   : 		{
; 15   : 			tObjNum		= lpObj->VpPlayer2[i].number;

  00029	0f bf 07	 movsx	 eax, WORD PTR [edi]

; 16   : 			lpTarget	= &gObj[tObjNum];

  0002c	8b f0		 mov	 esi, eax
  0002e	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  00034	81 c6 00 00 00
	00		 add	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 17   : 
; 18   : 			if(tObjNum > 0)

  0003a	85 c0		 test	 eax, eax
  0003c	7e 3c		 jle	 SHORT $LN6@Info

; 19   : 			{
; 20   : 				if(lpTarget->Live && (lpTarget->Type == OBJ_MONSTER))

  0003e	80 7e 62 00	 cmp	 BYTE PTR [esi+98], 0
  00042	74 36		 je	 SHORT $LN6@Info
  00044	66 83 7e 60 02	 cmp	 WORD PTR [esi+96], 2
  00049	75 2f		 jne	 SHORT $LN6@Info

; 21   : 				{
; 22   : 					if((gObjCalDistance(lpObj,lpTarget) <= 10) && (gObjCheckAttackArea(lpObj->m_Index,lpTarget->m_Index) == false))

  0004b	56		 push	 esi
  0004c	53		 push	 ebx
  0004d	e8 00 00 00 00	 call	 ?gObjCalDistance@@YAHPAUOBJECTSTRUCT@@0@Z ; gObjCalDistance
  00052	83 c4 08	 add	 esp, 8
  00055	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00058	7f 20		 jg	 SHORT $LN6@Info
  0005a	8b 06		 mov	 eax, DWORD PTR [esi]
  0005c	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0005e	50		 push	 eax
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?gObjCheckAttackArea@@YAHHH@Z ; gObjCheckAttackArea
  00065	83 c4 08	 add	 esp, 8
  00068	85 c0		 test	 eax, eax
  0006a	75 0e		 jne	 SHORT $LN6@Info

; 23   : 					{
; 24   : 						this->Send(lpObj->m_Index,lpTarget->m_Index);

  0006c	8b 16		 mov	 edx, DWORD PTR [esi]
  0006e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00073	52		 push	 edx
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?Send@CHealthBar@@QAEXHH@Z ; CHealthBar::Send
$LN6@Info:

; 8    : 	int tObjNum		= 0;
; 9    : 	LPOBJ lpTarget	= NULL;
; 10   : 	
; 11   : 	for(int i = 0;i < MAX_VIEWPORT;i++)

  0007a	83 c7 0c	 add	 edi, 12			; 0000000cH
  0007d	ff 4d 08	 dec	 DWORD PTR tv72[ebp]
  00080	75 9e		 jne	 SHORT $LL7@Info
  00082	5f		 pop	 edi
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx

; 25   : 					}
; 26   : 				}
; 27   : 			}
; 28   : 		}
; 29   : 	}
; 30   : }

  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
?Info@CHealthBar@@QAEXPAUOBJECTSTRUCT@@@Z ENDP		; CHealthBar::Info
_TEXT	ENDS
END
