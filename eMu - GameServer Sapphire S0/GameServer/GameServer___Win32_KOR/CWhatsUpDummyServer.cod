; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\CWhatsUpDummyServer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA ; CWhatsUpDummyServer::m_lpOldProc
_BSS	SEGMENT
?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA DD 01H DUP (?) ; CWhatsUpDummyServer::m_lpOldProc
_BSS	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??0CWhatsUpDummyServer@@QAE@XZ			; CWhatsUpDummyServer::CWhatsUpDummyServer
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\cwhatsupdummyserver.cpp
;	COMDAT ??0CWhatsUpDummyServer@@QAE@XZ
_TEXT	SEGMENT
_wsaVer$ = -404						; size = 400
__$ArrayPad$ = -4					; size = 4
??0CWhatsUpDummyServer@@QAE@XZ PROC			; CWhatsUpDummyServer::CWhatsUpDummyServer, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 01 00
	00		 sub	 esp, 404		; 00000194H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 17   : 	WSADATA wsaVer;
; 18   : 	this->m_sckDUMMY = INVALID_SOCKET;	// INVALID_SOCKET
; 19   : 	this->m_hParentWnd = NULL;

  00014	33 c0		 xor	 eax, eax
  00016	8b f1		 mov	 esi, ecx
  00018	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0001b	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1

; 20   : 	CWhatsUpDummyServer::m_lpOldProc=0;

  00021	a3 00 00 00 00	 mov	 DWORD PTR ?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA, eax ; CWhatsUpDummyServer::m_lpOldProc

; 21   : 	WSAStartup(WINSOCK_REQUESTED_VERSION, &wsaVer);

  00026	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _wsaVer$[ebp]
  0002c	50		 push	 eax
  0002d	68 02 02 00 00	 push	 514			; 00000202H
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAStartup@8

; 22   : }

  00038	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003b	8b c6		 mov	 eax, esi
  0003d	33 cd		 xor	 ecx, ebp
  0003f	5e		 pop	 esi
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
??0CWhatsUpDummyServer@@QAE@XZ ENDP			; CWhatsUpDummyServer::CWhatsUpDummyServer
_TEXT	ENDS
PUBLIC	??1CWhatsUpDummyServer@@QAE@XZ			; CWhatsUpDummyServer::~CWhatsUpDummyServer
EXTRN	__imp__closesocket@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ??1CWhatsUpDummyServer@@QAE@XZ
_TEXT	SEGMENT
??1CWhatsUpDummyServer@@QAE@XZ PROC			; CWhatsUpDummyServer::~CWhatsUpDummyServer, COMDAT
; _this$ = ecx

; 27   : 	if ( this->m_sckDUMMY != INVALID_SOCKET ) // INVALID_SOCKET

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 f8 ff	 cmp	 eax, -1
  00005	74 07		 je	 SHORT $LN1@CWhatsUpDu

; 28   : 	{
; 29   : 		closesocket(this->m_sckDUMMY );

  00007	50		 push	 eax
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
$LN1@CWhatsUpDu:

; 30   : 	}
; 31   : }

  0000e	c3		 ret	 0
??1CWhatsUpDummyServer@@QAE@XZ ENDP			; CWhatsUpDummyServer::~CWhatsUpDummyServer
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z ; CWhatsUpDummyServer::ParentWndProc
EXTRN	__imp__recv@16:PROC
EXTRN	__imp__WSAAsyncSelect@16:PROC
EXTRN	__imp__accept@12:PROC
EXTRN	__imp__CallWindowProcA@20:PROC
; Function compile flags: /Ogtp
;	COMDAT ?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_isockinfolen$155009 = -280				; size = 4
_sockinfo$155008 = -276					; size = 16
_cBUFFER$155017 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_iMessage$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z PROC ; CWhatsUpDummyServer::ParentWndProc, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 100  : 	switch ( iMessage )

  00013	8b 45 0c	 mov	 eax, DWORD PTR _iMessage$[ebp]
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR _hWnd$[ebp]
  0001a	3d 0f 04 00 00	 cmp	 eax, 1039		; 0000040fH
  0001f	74 25		 je	 SHORT $LN11@ParentWndP

; 143  : 			}
; 144  : 			break;
; 145  : 		default:
; 146  : 			return CallWindowProcA(CWhatsUpDummyServer::m_lpOldProc, hWnd, iMessage, wParam, lParam);

  00021	8b 4d 14	 mov	 ecx, DWORD PTR _lParam$[ebp]
  00024	8b 55 10	 mov	 edx, DWORD PTR _wParam$[ebp]
  00027	51		 push	 ecx
  00028	52		 push	 edx
  00029	50		 push	 eax
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA ; CWhatsUpDummyServer::m_lpOldProc
  0002f	57		 push	 edi
  00030	50		 push	 eax
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CallWindowProcA@20
  00037	5f		 pop	 edi

; 147  : 	}
; 148  : }

  00038	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003b	33 cd		 xor	 ecx, ebp
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
$LN11@ParentWndP:

; 101  : 	{
; 102  : 		case WM_GM_CONNECT_SERVER_MSG:
; 103  : 			switch ( lParam & 0xFFFF & 0xFFFF )

  00046	8b 45 14	 mov	 eax, DWORD PTR _lParam$[ebp]
  00049	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0004e	48		 dec	 eax
  0004f	56		 push	 esi
  00050	74 51		 je	 SHORT $LN5@ParentWndP
  00052	83 e8 07	 sub	 eax, 7
  00055	74 0c		 je	 SHORT $LN8@ParentWndP
  00057	83 e8 18	 sub	 eax, 24			; 00000018H

; 141  : 				default:
; 142  : 					return FALSE;

  0005a	75 70		 jne	 SHORT $LN4@ParentWndP

; 134  : 						}
; 135  : 						return FALSE;
; 136  : 					}
; 137  : 					break;
; 138  : 				case FD_CLOSE:
; 139  : 					closesocket(wParam & 0xFFFF & 0xFFFF);

  0005c	0f b7 4d 10	 movzx	 ecx, WORD PTR _wParam$[ebp]
  00060	51		 push	 ecx

; 140  : 					return FALSE;

  00061	eb 63		 jmp	 SHORT $LN17@ParentWndP
$LN8@ParentWndP:

; 104  : 			{
; 105  : 				case FD_ACCEPT:
; 106  : 					{
; 107  : 						sockaddr_in sockinfo;
; 108  : 						int isockinfolen=16;
; 109  : 						SOCKET sckTemp;
; 110  : 						int iRetVal;
; 111  : 
; 112  : 						sckTemp = accept(wParam & 0xFFFF & 0xFFFF, (sockaddr *)&sockinfo, &isockinfolen);

  00063	0f b7 4d 10	 movzx	 ecx, WORD PTR _wParam$[ebp]
  00067	8d 95 e8 fe ff
	ff		 lea	 edx, DWORD PTR _isockinfolen$155009[ebp]
  0006d	52		 push	 edx
  0006e	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _sockinfo$155008[ebp]
  00074	50		 push	 eax
  00075	51		 push	 ecx
  00076	c7 85 e8 fe ff
	ff 10 00 00 00	 mov	 DWORD PTR _isockinfolen$155009[ebp], 16 ; 00000010H
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__accept@12
  00086	8b f0		 mov	 esi, eax

; 113  : 
; 114  : 						if ( sckTemp == INVALID_SOCKET )

  00088	83 fe ff	 cmp	 esi, -1

; 115  : 							return FALSE;

  0008b	74 3f		 je	 SHORT $LN4@ParentWndP

; 116  : 
; 117  : 						iRetVal = WSAAsyncSelect(sckTemp, hWnd, WM_GM_CONNECT_SERVER_MSG, FD_READ|FD_CLOSE);

  0008d	6a 21		 push	 33			; 00000021H
  0008f	68 0f 04 00 00	 push	 1039			; 0000040fH
  00094	57		 push	 edi
  00095	56		 push	 esi
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAAsyncSelect@16

; 118  : 
; 119  : 						if ( iRetVal == -1 )

  0009c	83 f8 ff	 cmp	 eax, -1
  0009f	75 2b		 jne	 SHORT $LN4@ParentWndP

; 120  : 						{
; 121  : 							closesocket(sckTemp);
; 122  : 						}
; 123  : 						return FALSE;

  000a1	eb 22		 jmp	 SHORT $LN18@ParentWndP
$LN5@ParentWndP:

; 124  : 					}
; 125  : 					break;
; 126  : 				case FD_READ:
; 127  : 					{
; 128  : 						char cBUFFER[256];
; 129  : 						int iRecvBytes = recv(wParam & 0xFFFF & 0xFFFF, cBUFFER, sizeof(cBUFFER), 0);

  000a3	8b 75 10	 mov	 esi, DWORD PTR _wParam$[ebp]
  000a6	6a 00		 push	 0
  000a8	68 00 01 00 00	 push	 256			; 00000100H
  000ad	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _cBUFFER$155017[ebp]
  000b3	52		 push	 edx
  000b4	81 e6 ff ff 00
	00		 and	 esi, 65535		; 0000ffffH
  000ba	56		 push	 esi
  000bb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__recv@16

; 130  : 
; 131  : 						if ( iRecvBytes <= 0 )

  000c1	85 c0		 test	 eax, eax
  000c3	7f 07		 jg	 SHORT $LN4@ParentWndP
$LN18@ParentWndP:

; 132  : 						{
; 133  : 							closesocket(wParam & 0xFFFF & 0xFFFF);

  000c5	56		 push	 esi
$LN17@ParentWndP:
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
$LN4@ParentWndP:

; 147  : 	}
; 148  : }

  000cc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cf	5e		 pop	 esi
  000d0	33 cd		 xor	 ecx, ebp
  000d2	33 c0		 xor	 eax, eax
  000d4	5f		 pop	 edi
  000d5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z ENDP ; CWhatsUpDummyServer::ParentWndProc
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z	; CWhatsUpDummyServer::Start
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__IsWindow@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z
_TEXT	SEGMENT
_sockinfo$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_wPort$ = 12						; size = 2
?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z PROC	; CWhatsUpDummyServer::Start, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _hWnd$[ebp]
  00015	8b f1		 mov	 esi, ecx

; 36   : 	sockaddr_in sockinfo;
; 37   : 	int iRetVal;
; 38   : 
; 39   : 	if ( hWnd == 0 )

  00017	85 ff		 test	 edi, edi

; 40   : 	{
; 41   : 		return 0;

  00019	74 62		 je	 SHORT $LN9@Start

; 42   : 	}
; 43   : 
; 44   : 	if ( !IsWindow(hWnd) )

  0001b	57		 push	 edi
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__IsWindow@4
  00022	85 c0		 test	 eax, eax

; 45   : 	{
; 46   : 		return 0;

  00024	74 57		 je	 SHORT $LN9@Start

; 47   : 	}
; 48   : 
; 49   : 	this->m_hParentWnd = hWnd;
; 50   : 
; 51   : 	this->m_sckDUMMY=socket(AF_INET, SOCK_STREAM, IPPROTO_IP);

  00026	6a 00		 push	 0
  00028	6a 01		 push	 1
  0002a	6a 02		 push	 2
  0002c	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__socket@12
  00035	89 06		 mov	 DWORD PTR [esi], eax

; 52   : 	
; 53   : 	if ( this->m_sckDUMMY == INVALID_SOCKET ) // INVALID_SOCKET

  00037	83 f8 ff	 cmp	 eax, -1

; 54   : 	{
; 55   : 		return 0;

  0003a	74 41		 je	 SHORT $LN9@Start

; 56   : 	}
; 57   : 
; 58   : 	sockinfo.sin_family =AF_INET;
; 59   : 	sockinfo.sin_addr.S_un.S_addr=0;
; 60   : 	sockinfo.sin_port=htons(wPort);

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _wPort$[ebp]
  0003f	b8 02 00 00 00	 mov	 eax, 2
  00044	51		 push	 ecx
  00045	66 89 45 ec	 mov	 WORD PTR _sockinfo$[ebp], ax
  00049	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _sockinfo$[ebp+4], 0
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__htons@4

; 61   : 	
; 62   : 	iRetVal=0;
; 63   : 	iRetVal=bind(this->m_sckDUMMY , (sockaddr*)&sockinfo,16);

  00056	6a 10		 push	 16			; 00000010H
  00058	8d 55 ec	 lea	 edx, DWORD PTR _sockinfo$[ebp]
  0005b	66 89 45 ee	 mov	 WORD PTR _sockinfo$[ebp+2], ax
  0005f	8b 06		 mov	 eax, DWORD PTR [esi]
  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__bind@12

; 64   : 
; 65   : 	if (iRetVal == -1)

  00069	83 f8 ff	 cmp	 eax, -1
  0006c	75 23		 jne	 SHORT $LN3@Start

; 66   : 	{
; 67   : 		closesocket(this->m_sckDUMMY);

  0006e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00070	51		 push	 ecx
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4

; 68   : 		this->m_sckDUMMY = INVALID_SOCKET;

  00077	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
$LN9@Start:

; 69   : 		return 0;

  0007d	5f		 pop	 edi
  0007e	33 c0		 xor	 eax, eax
  00080	5e		 pop	 esi

; 91   : 	return 1;
; 92   : }

  00081	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00084	33 cd		 xor	 ecx, ebp
  00086	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
$LN3@Start:

; 70   : 	}
; 71   : 
; 72   : 	iRetVal=listen(this->m_sckDUMMY, 2147483647 );

  00091	8b 16		 mov	 edx, DWORD PTR [esi]
  00093	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00098	52		 push	 edx
  00099	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__listen@8

; 73   : 
; 74   : 	if (iRetVal == -1 )

  0009f	83 f8 ff	 cmp	 eax, -1
  000a2	75 23		 jne	 SHORT $LN2@Start

; 75   : 	{
; 76   : 		closesocket(this->m_sckDUMMY);

  000a4	8b 06		 mov	 eax, DWORD PTR [esi]
  000a6	50		 push	 eax
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
  000ad	5f		 pop	 edi

; 77   : 		this->m_sckDUMMY = INVALID_SOCKET;

  000ae	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1

; 78   : 		return 0;

  000b4	33 c0		 xor	 eax, eax
  000b6	5e		 pop	 esi

; 91   : 	return 1;
; 92   : }

  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
$LN2@Start:

; 79   : 	}
; 80   : 
; 81   : 	iRetVal=WSAAsyncSelect(this->m_sckDUMMY , hWnd, WM_GM_CONNECT_SERVER_MSG, FD_ACCEPT);

  000c7	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000c9	6a 08		 push	 8
  000cb	68 0f 04 00 00	 push	 1039			; 0000040fH
  000d0	57		 push	 edi
  000d1	51		 push	 ecx
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WSAAsyncSelect@16

; 82   : 
; 83   : 	if (iRetVal == -1 )

  000d8	83 f8 ff	 cmp	 eax, -1
  000db	75 23		 jne	 SHORT $LN1@Start

; 84   : 	{
; 85   : 		closesocket(this->m_sckDUMMY);

  000dd	8b 16		 mov	 edx, DWORD PTR [esi]
  000df	52		 push	 edx
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__closesocket@4
  000e6	5f		 pop	 edi

; 86   : 		this->m_sckDUMMY = INVALID_SOCKET;

  000e7	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1

; 87   : 		return 0;

  000ed	33 c0		 xor	 eax, eax
  000ef	5e		 pop	 esi

; 91   : 	return 1;
; 92   : }

  000f0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f3	33 cd		 xor	 ecx, ebp
  000f5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fa	8b e5		 mov	 esp, ebp
  000fc	5d		 pop	 ebp
  000fd	c2 08 00	 ret	 8
$LN1@Start:

; 88   : 	}
; 89   : 
; 90   : 	CWhatsUpDummyServer::m_lpOldProc=(WNDPROC)SetWindowLong(hWnd, GWL_WNDPROC, (LONG)ParentWndProc  );

  00100	68 00 00 00 00	 push	 OFFSET ?ParentWndProc@CWhatsUpDummyServer@@SAJPAUHWND__@@IIJ@Z ; CWhatsUpDummyServer::ParentWndProc
  00105	6a fc		 push	 -4			; fffffffcH
  00107	57		 push	 edi
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowLongA@12

; 91   : 	return 1;
; 92   : }

  0010e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00111	5f		 pop	 edi
  00112	a3 00 00 00 00	 mov	 DWORD PTR ?m_lpOldProc@CWhatsUpDummyServer@@2P6GJPAUHWND__@@IIJ@ZA, eax ; CWhatsUpDummyServer::m_lpOldProc
  00117	33 cd		 xor	 ecx, ebp
  00119	b8 01 00 00 00	 mov	 eax, 1
  0011e	5e		 pop	 esi
  0011f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 08 00	 ret	 8
?Start@CWhatsUpDummyServer@@QAEHPAUHWND__@@G@Z ENDP	; CWhatsUpDummyServer::Start
_TEXT	ENDS
END
