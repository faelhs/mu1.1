; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\GuildClass.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 81   :         {return (_Where); }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT

; 83   :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?Print@CGuildClass@@QAEXXZ			; CGuildClass::Print
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
;	COMDAT ?Print@CGuildClass@@QAEXXZ
_TEXT	SEGMENT
?Print@CGuildClass@@QAEXXZ PROC				; CGuildClass::Print, COMDAT
; _this$ = ecx

; 107  : 	_GUILD_INFO_STRUCT * pNode = this->head;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 108  : 
; 109  : 	while ( pNode != NULL )

  00003	85 c0		 test	 eax, eax
  00005	74 13		 je	 SHORT $LN1@Print
  00007	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL2@Print:

; 110  : 	{
; 111  : 		pNode = pNode->next;

  00010	8b 80 38 07 00
	00		 mov	 eax, DWORD PTR [eax+1848]
  00016	85 c0		 test	 eax, eax
  00018	75 f6		 jne	 SHORT $LL2@Print
$LN1@Print:

; 112  : 	}
; 113  : }

  0001a	c3		 ret	 0
?Print@CGuildClass@@QAEXXZ ENDP				; CGuildClass::Print
_TEXT	ENDS
PUBLIC	?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
; Function compile flags: /Ogtp
;	COMDAT ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
_lpNode$ = 8						; size = 4
?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z PROC ; CGuildClass::BuildMemberTotal, COMDAT
; _this$ = ecx

; 574  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 575  : 	if (lpNode == NULL )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpNode$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	75 06		 jne	 SHORT $LN6@BuildMembe

; 576  : 	{
; 577  : 		return FALSE;

  0000a	33 c0		 xor	 eax, eax

; 592  : 			}
; 593  : 		}
; 594  : 	}
; 595  : 
; 596  : 	return TRUE;
; 597  : }

  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
$LN6@BuildMembe:
  00010	56		 push	 esi
  00011	57		 push	 edi

; 578  : 	}
; 579  : 
; 580  : 	lpNode->TotalCount = 0;

  00012	66 c7 41 2d 00
	00		 mov	 WORD PTR [ecx+45], 0
  00018	8d b1 41 04 00
	00		 lea	 esi, DWORD PTR [ecx+1089]
  0001e	8d 91 a2 03 00
	00		 lea	 edx, DWORD PTR [ecx+930]
  00024	bf 10 00 00 00	 mov	 edi, 16			; 00000010H
  00029	b8 01 00 00 00	 mov	 eax, 1
  0002e	8b ff		 npad	 2
$LL5@BuildMembe:

; 584  : 	{
; 585  : 		if ( lpNode->Use[n] == TRUE )

  00030	38 46 ff	 cmp	 BYTE PTR [esi-1], al
  00033	75 0d		 jne	 SHORT $LN4@BuildMembe

; 586  : 		{
; 587  : 			lpNode->TotalCount++;

  00035	00 41 2e	 add	 BYTE PTR [ecx+46], al

; 588  : 
; 589  : 			if ( lpNode->Index[n] != 0 )

  00038	66 83 7a fe 00	 cmp	 WORD PTR [edx-2], 0
  0003d	74 03		 je	 SHORT $LN4@BuildMembe

; 590  : 			{
; 591  : 				lpNode->Count++;

  0003f	00 41 2d	 add	 BYTE PTR [ecx+45], al
$LN4@BuildMembe:

; 584  : 	{
; 585  : 		if ( lpNode->Use[n] == TRUE )

  00042	38 06		 cmp	 BYTE PTR [esi], al
  00044	75 0c		 jne	 SHORT $LN12@BuildMembe

; 586  : 		{
; 587  : 			lpNode->TotalCount++;

  00046	00 41 2e	 add	 BYTE PTR [ecx+46], al

; 588  : 
; 589  : 			if ( lpNode->Index[n] != 0 )

  00049	66 83 3a 00	 cmp	 WORD PTR [edx], 0
  0004d	74 03		 je	 SHORT $LN12@BuildMembe

; 590  : 			{
; 591  : 				lpNode->Count++;

  0004f	00 41 2d	 add	 BYTE PTR [ecx+45], al
$LN12@BuildMembe:

; 584  : 	{
; 585  : 		if ( lpNode->Use[n] == TRUE )

  00052	38 46 01	 cmp	 BYTE PTR [esi+1], al
  00055	75 0d		 jne	 SHORT $LN13@BuildMembe

; 586  : 		{
; 587  : 			lpNode->TotalCount++;

  00057	00 41 2e	 add	 BYTE PTR [ecx+46], al

; 588  : 
; 589  : 			if ( lpNode->Index[n] != 0 )

  0005a	66 83 7a 02 00	 cmp	 WORD PTR [edx+2], 0
  0005f	74 03		 je	 SHORT $LN13@BuildMembe

; 590  : 			{
; 591  : 				lpNode->Count++;

  00061	00 41 2d	 add	 BYTE PTR [ecx+45], al
$LN13@BuildMembe:

; 584  : 	{
; 585  : 		if ( lpNode->Use[n] == TRUE )

  00064	38 46 02	 cmp	 BYTE PTR [esi+2], al
  00067	75 0d		 jne	 SHORT $LN14@BuildMembe

; 586  : 		{
; 587  : 			lpNode->TotalCount++;

  00069	00 41 2e	 add	 BYTE PTR [ecx+46], al

; 588  : 
; 589  : 			if ( lpNode->Index[n] != 0 )

  0006c	66 83 7a 04 00	 cmp	 WORD PTR [edx+4], 0
  00071	74 03		 je	 SHORT $LN14@BuildMembe

; 590  : 			{
; 591  : 				lpNode->Count++;

  00073	00 41 2d	 add	 BYTE PTR [ecx+45], al
$LN14@BuildMembe:

; 584  : 	{
; 585  : 		if ( lpNode->Use[n] == TRUE )

  00076	38 46 03	 cmp	 BYTE PTR [esi+3], al
  00079	75 0d		 jne	 SHORT $LN15@BuildMembe

; 586  : 		{
; 587  : 			lpNode->TotalCount++;

  0007b	00 41 2e	 add	 BYTE PTR [ecx+46], al

; 588  : 
; 589  : 			if ( lpNode->Index[n] != 0 )

  0007e	66 83 7a 06 00	 cmp	 WORD PTR [edx+6], 0
  00083	74 03		 je	 SHORT $LN15@BuildMembe

; 590  : 			{
; 591  : 				lpNode->Count++;

  00085	00 41 2d	 add	 BYTE PTR [ecx+45], al
$LN15@BuildMembe:

; 578  : 	}
; 579  : 
; 580  : 	lpNode->TotalCount = 0;

  00088	83 c2 0a	 add	 edx, 10			; 0000000aH
  0008b	83 c6 05	 add	 esi, 5

; 581  : 	lpNode->Count = 0;
; 582  : 
; 583  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  0008e	2b f8		 sub	 edi, eax
  00090	75 9e		 jne	 SHORT $LL5@BuildMembe
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi

; 592  : 			}
; 593  : 		}
; 594  : 	}
; 595  : 
; 596  : 	return TRUE;
; 597  : }

  00094	5d		 pop	 ebp
  00095	c2 04 00	 ret	 4
?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ENDP ; CGuildClass::BuildMemberTotal
_TEXT	ENDS
PUBLIC	?gGuildNoticeStringCheck@@YAHPAD@Z		; gGuildNoticeStringCheck
EXTRN	?gLanguage@@3HA:DWORD				; gLanguage
; Function compile flags: /Ogtp
;	COMDAT ?gGuildNoticeStringCheck@@YAHPAD@Z
_TEXT	SEGMENT
_notice$ = 8						; size = 4
?gGuildNoticeStringCheck@@YAHPAD@Z PROC			; gGuildNoticeStringCheck, COMDAT

; 680  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 681  : 	int len = strlen(notice);

  00004	8b 75 08	 mov	 esi, DWORD PTR _notice$[ebp]
  00007	8b c6		 mov	 eax, esi
  00009	57		 push	 edi
  0000a	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0000d	8d 49 00	 npad	 3
$LL18@gGuildNoti:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL18@gGuildNoti
  00017	2b c2		 sub	 eax, edx

; 682  : 
; 683  : 	for (int i =0; i<len ;i++)

  00019	33 c9		 xor	 ecx, ecx
  0001b	85 c0		 test	 eax, eax
  0001d	7e 2b		 jle	 SHORT $LN8@gGuildNoti
  0001f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?gLanguage@@3HA ; gLanguage
$LL10@gGuildNoti:

; 684  : 	{
; 685  : 		if ( (notice[i] & 0x80 ) != 0 )

  00025	8a 14 31	 mov	 dl, BYTE PTR [ecx+esi]
  00028	84 d2		 test	 dl, dl
  0002a	79 14		 jns	 SHORT $LN7@gGuildNoti

; 686  : 		{
; 687  : 			if ( gLanguage == 2 )

  0002c	83 ff 02	 cmp	 edi, 2
  0002f	75 1f		 jne	 SHORT $LN14@gGuildNoti

; 688  : 			{
; 689  : 				if ( ((BYTE)notice[i]) != 0x81 )

  00031	80 fa 81	 cmp	 dl, 129			; 00000081H
  00034	75 1a		 jne	 SHORT $LN14@gGuildNoti

; 692  : 				}
; 693  : 
; 694  : 				if ( notice[i+1] != '@' )

  00036	80 7c 31 01 40	 cmp	 BYTE PTR [ecx+esi+1], 64 ; 00000040H
  0003b	75 13		 jne	 SHORT $LN14@gGuildNoti

; 695  : 				{
; 696  : 					return TRUE;
; 697  : 				}
; 698  : 
; 699  : 				i++;

  0003d	41		 inc	 ecx

; 700  : 			}
; 701  : 			else
; 702  : 			{
; 703  : 				return TRUE;
; 704  : 			}
; 705  : 		}
; 706  : 		else

  0003e	eb 05		 jmp	 SHORT $LN9@gGuildNoti
$LN7@gGuildNoti:

; 707  : 		{
; 708  : 			if (notice[i] != ' ' )

  00040	80 fa 20	 cmp	 dl, 32			; 00000020H
  00043	75 0b		 jne	 SHORT $LN14@gGuildNoti
$LN9@gGuildNoti:

; 682  : 
; 683  : 	for (int i =0; i<len ;i++)

  00045	41		 inc	 ecx
  00046	3b c8		 cmp	 ecx, eax
  00048	7c db		 jl	 SHORT $LL10@gGuildNoti
$LN8@gGuildNoti:
  0004a	5f		 pop	 edi

; 709  : 			{
; 710  : 				return TRUE;
; 711  : 			}
; 712  : 		}
; 713  : 	}
; 714  : 
; 715  : 	return FALSE;

  0004b	33 c0		 xor	 eax, eax
  0004d	5e		 pop	 esi

; 716  : }

  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN14@gGuildNoti:
  00050	5f		 pop	 edi

; 690  : 				{
; 691  : 					return TRUE;

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	5e		 pop	 esi

; 716  : }

  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?gGuildNoticeStringCheck@@YAHPAD@Z ENDP			; gGuildNoticeStringCheck
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator==
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 94 c0	 sete	 al

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator==
; Function compile flags: /Ogtp
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator==, COMDAT
; _this$ = ecx

; 316  : 		{	// test for iterator equality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 317  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 318  : 		if (this->_Getcont() == 0
; 319  : 			|| this->_Getcont() != _Right._Getcont())
; 320  : 			{	// report error
; 321  : 			_DEBUG_ERROR("map/set iterators incompatible");
; 322  : 			_SCL_SECURE_INVALID_ARGUMENT;
; 323  : 			}
; 324  : 
; 325  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 326  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0
; 327  : 			&& this->_Getcont() == _Right._Getcont());
; 328  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 329  : 
; 330  : 		return (this->_Ptr == _Right._Ptr);

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 94 c0	 sete	 al

; 331  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??8?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator==
_TEXT	ENDS
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator!=
; Function compile flags: /Ogtp
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator!=, COMDAT
; _this$ = ecx

; 334  : 		{	// test for iterator inequality

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 335  : 		return (!(*this == _Right));

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	3b 02		 cmp	 eax, DWORD PTR [edx]
  0000c	0f 95 c0	 setne	 al

; 336  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
??9?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator!=
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Color
; Function compile flags: /Ogtp
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 2c	 add	 eax, 44			; 0000002cH

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Isnil
; Function compile flags: /Ogtp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 2d	 add	 eax, 45			; 0000002dH

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Left
; Function compile flags: /Ogtp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Parent
; Function compile flags: /Ogtp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Right
; Function compile flags: /Ogtp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Myval
; Function compile flags: /Ogtp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Max
; Function compile flags: /Ogtp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00009	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  0000d	75 0c		 jne	 SHORT $LN1@Max
  0000f	90		 npad	 1
$LL2@Max:

; 643  : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00019	74 f5		 je	 SHORT $LL2@Max
$LN1@Max:

; 644  : 		return (_Pnode);
; 645  : 		}

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Min
; Function compile flags: /Ogtp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  0000c	75 0c		 jne	 SHORT $LN1@Min
  0000e	8b ff		 npad	 2
$LL2@Min:

; 650  : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00018	74 f6		 je	 SHORT $LL2@Min
$LN1@Min:

; 651  : 		return (_Pnode);
; 652  : 		}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::deallocate
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Color
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Color, COMDAT

; 606  : 		{	// return reference to color in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 607  : 		return ((char&)(*_Pnode)._Color);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 14	 add	 eax, 20			; 00000014H

; 608  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Color@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Isnil
; Function compile flags: /Ogtp
;	COMDAT ?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Isnil, COMDAT

; 611  : 		{	// return reference to nil flag in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 612  : 		return ((char&)(*_Pnode)._Isnil);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 15	 add	 eax, 21			; 00000015H

; 613  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Isnil@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Left
; Function compile flags: /Ogtp
;	COMDAT ?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Left, COMDAT

; 621  : 		{	// return reference to left pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 622  : 		return ((_Nodepref)(*_Pnode)._Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]

; 623  : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Left@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Parent
; Function compile flags: /Ogtp
;	COMDAT ?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Parent, COMDAT

; 626  : 		{	// return reference to parent pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 627  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4

; 628  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Parent@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Right
; Function compile flags: /Ogtp
;	COMDAT ?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Right, COMDAT

; 631  : 		{	// return reference to right pointer in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 632  : 		return ((_Nodepref)(*_Pnode)._Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8

; 633  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Right@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Myval
; Function compile flags: /Ogtp
;	COMDAT ?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Myval, COMDAT

; 636  : 		{	// return reference to value in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 637  : 		return ((reference)(*_Pnode)._Myval);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 638  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Max
; Function compile flags: /Ogtp
;	COMDAT ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Max, COMDAT

; 641  : 		{	// return rightmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 642  : 		while (!_Isnil(_Right(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00009	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000d	75 0c		 jne	 SHORT $LN1@Max@2
  0000f	90		 npad	 1
$LL2@Max@2:

; 643  : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00019	74 f5		 je	 SHORT $LL2@Max@2
$LN1@Max@2:

; 644  : 		return (_Pnode);
; 645  : 		}

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Min
; Function compile flags: /Ogtp
;	COMDAT ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Min, COMDAT

; 648  : 		{	// return leftmost node in subtree at _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 649  : 		while (!_Isnil(_Left(_Pnode)))

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000c	75 0c		 jne	 SHORT $LN1@Min@2
  0000e	8b ff		 npad	 2
$LL2@Min@2:

; 650  : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00018	74 f6		 je	 SHORT $LL2@Min@2
$LN1@Min@2:

; 651  : 		return (_Pnode);
; 652  : 		}

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??R?$less@H@std@@QBE_NABH0@Z			; std::less<int>::operator()
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@H@std@@QBE_NABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@H@std@@QBE_NABH0@Z PROC			; std::less<int>::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000b	33 c0		 xor	 eax, eax
  0000d	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000f	0f 9c c0	 setl	 al

; 126  : 		}

  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
??R?$less@H@std@@QBE_NABH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogtp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 		if (this->_Getcont() == 0
; 233  : 			|| this->_Ptr == 0
; 234  : 			|| this->_Ptr == ((_Mytree *)this->_Getcont())->_Myhead)
; 235  : 			{	// report error
; 236  : 			_DEBUG_ERROR("map/set iterator not dereferencable");
; 237  : 			_SCL_SECURE_OUT_OF_RANGE;
; 238  : 			}
; 239  : 
; 240  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 241  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 242  : 		_SCL_SECURE_VALIDATE_RANGE(this->_Ptr !=
; 243  : 			((_Mytree *)this->_Getcont())->_Myhead);
; 244  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 245  : 
; 246  : 		return (_Mytree::_Myval(this->_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 247  : 		}

  00005	c3		 ret	 0
??D?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Mynode
; Function compile flags: /Ogtp
;	COMDAT ?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx

; 122  : 		return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 123  : 		}

  00002	c3		 ret	 0
?_Mynode@?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 10		 mov	 edx, DWORD PTR [eax]
  00004	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00008	75 40		 jne	 SHORT $LN3@operator

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0000d	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00011	75 1a		 jne	 SHORT $LN34@operator

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00019	75 0f		 jne	 SHORT $LN17@operator
  0001b	eb 03 8d 49 00	 npad	 5
$LL18@operator:
  00020	8b ca		 mov	 ecx, edx
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00028	74 f6		 je	 SHORT $LL18@operator
$LN17@operator:
  0002a	89 08		 mov	 DWORD PTR [eax], ecx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0002c	c3		 ret	 0
$LN34@operator:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  0002d	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00030	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00034	75 12		 jne	 SHORT $LN1@operator
$LL2@operator:
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0003b	75 0b		 jne	 SHORT $LN1@operator

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0003d	89 10		 mov	 DWORD PTR [eax], edx
  0003f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00042	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00046	74 ee		 je	 SHORT $LL2@operator
$LN1@operator:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00048	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator:

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0004a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 58   : 		{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 59   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 10		 mov	 edx, DWORD PTR [eax]
  00004	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00008	75 40		 jne	 SHORT $LN3@operator@2

; 60   : 			;	// end() shouldn't be incremented, don't move
; 61   : 		else if (!_Mytree::_Isnil(_Mytree::_Right(_Ptr)))

  0000a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0000d	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00011	75 1a		 jne	 SHORT $LN34@operator@2

; 62   : 			_Ptr = _Mytree::_Min(
; 63   : 				_Mytree::_Right(_Ptr));	// ==> smallest of right subtree

  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00019	75 0f		 jne	 SHORT $LN17@operator@2
  0001b	eb 03 8d 49 00	 npad	 5
$LL18@operator@2:
  00020	8b ca		 mov	 ecx, edx
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00028	74 f6		 je	 SHORT $LL18@operator@2
$LN17@operator@2:
  0002a	89 08		 mov	 DWORD PTR [eax], ecx

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0002c	c3		 ret	 0
$LN34@operator@2:

; 64   : 		else
; 65   : 			{	// climb looking for right subtree
; 66   : 			_Nodeptr _Pnode;
; 67   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 68   : 				&& _Ptr == _Mytree::_Right(_Pnode))

  0002d	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00030	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00034	75 12		 jne	 SHORT $LN1@operator@2
$LL2@operator@2:
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  0003b	75 0b		 jne	 SHORT $LN1@operator@2

; 69   : 				_Ptr = _Pnode;	// ==> parent while right subtree

  0003d	89 10		 mov	 DWORD PTR [eax], edx
  0003f	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00042	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00046	74 ee		 je	 SHORT $LL2@operator@2
$LN1@operator@2:

; 70   : 			_Ptr = _Pnode;	// ==> parent (head if end())

  00048	89 10		 mov	 DWORD PTR [eax], edx
$LN3@operator@2:

; 71   : 			}
; 72   : 		return (*this);
; 73   : 		}

  0004a	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@QAE@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@QAE@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@QAE@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@QAE@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ; std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z PROC ; std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>, COMDAT
; _this$ = ecx

; 40   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 41   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@QAE@U?$less@H@1@@Z ENDP ; std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z PROC ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$addressof@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ; std::addressof<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??$addressof@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z PROC ; std::addressof<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 110  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 111  : 	return ((_Ty *) &(char&)_Val);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 112  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z PROC ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@SAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@ABU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ENDP ; std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0>::_Kfn<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??$_Kfn@$$CBHPAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>::_Kfn<int const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
;	COMDAT ??$_Kfn@$$CBHPAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBHPAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z PROC ; std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>::_Kfn<int const ,_GUILD_INFO_STRUCT *>, COMDAT

; 66   : 		static const _Kty& _Kfn(const _STD pair<_Ty1, _Ty2>& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 		{	// extract key from element value
; 68   : 		return (_Val.first);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 69   : 		}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Kfn@$$CBHPAU_GUILD_INFO_STRUCT@@@?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@SAABHABU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ENDP ; std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0>::_Kfn<int const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??$move@AAPAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z ; std::move<_GUILD_INFO_STRUCT * &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAPAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAPAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z PROC ; std::move<_GUILD_INFO_STRUCT * &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAPAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z ENDP ; std::move<_GUILD_INFO_STRUCT * &>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node><std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node><std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??$?0U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node><std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 170  : 		_ALLOCATOR(const _ALLOCATOR<_Other>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 171  : 		{	// construct from a related allocator (do nothing)
; 172  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node><std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::size, COMDAT
; _this$ = ecx

; 869  : 		return (this->_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 870  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::size
; Function compile flags: /Ogtp
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::size, COMDAT
; _this$ = ecx

; 869  : 		return (this->_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 870  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::size
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 39   : 		}

  00008	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00008	74 06		 je	 SHORT $LN8@operator@3

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  0000f	c3		 ret	 0
$LN8@operator@3:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00016	75 17		 jne	 SHORT $LN40@operator@3

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  00018	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0001b	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  0001f	75 30		 jne	 SHORT $LN21@operator@3
$LL22@operator@3:
  00021	8b d1		 mov	 edx, ecx
  00023	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00026	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  0002a	74 f5		 je	 SHORT $LL22@operator@3

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  0002e	c3		 ret	 0
$LN40@operator@3:

; 89   : 		else
; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00036	75 11		 jne	 SHORT $LN3@operator@3
$LL4@operator@3:
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0003c	75 0b		 jne	 SHORT $LN3@operator@3

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  0003e	89 10		 mov	 DWORD PTR [eax], edx
  00040	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00043	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0
  00047	74 ef		 je	 SHORT $LL4@operator@3
$LN3@operator@3:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  0004f	75 02		 jne	 SHORT $LN1@operator@3

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LN21@operator@3:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00051	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator@3:

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00053	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 39   : 		}

  00008	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx

; 83   : 		{	// predecrement

  00000	8b c1		 mov	 eax, ecx

; 84   : 		if (_Mytree::_Isnil(_Ptr))

  00002	8b 08		 mov	 ecx, DWORD PTR [eax]
  00004	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00008	74 06		 je	 SHORT $LN8@operator@4

; 85   : 			_Ptr = _Mytree::_Right(_Ptr);	// end() ==> rightmost

  0000a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  0000f	c3		 ret	 0
$LN8@operator@4:

; 86   : 		else if (!_Mytree::_Isnil(_Mytree::_Left(_Ptr)))

  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00016	75 17		 jne	 SHORT $LN40@operator@4

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

  00018	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0001b	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0001f	75 30		 jne	 SHORT $LN21@operator@4
$LL22@operator@4:
  00021	8b d1		 mov	 edx, ecx
  00023	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00026	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0002a	74 f5		 je	 SHORT $LL22@operator@4

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  0002e	c3		 ret	 0
$LN40@operator@4:

; 89   : 		else
; 90   : 			{	// climb looking for left subtree
; 91   : 			_Nodeptr _Pnode;
; 92   : 			while (!_Mytree::_Isnil(_Pnode = _Mytree::_Parent(_Ptr))
; 93   : 				&& _Ptr == _Mytree::_Left(_Pnode))

  0002f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00032	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00036	75 11		 jne	 SHORT $LN3@operator@4
$LL4@operator@4:
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0003c	75 0b		 jne	 SHORT $LN3@operator@4

; 94   : 				_Ptr = _Pnode;	// ==> parent while left subtree

  0003e	89 10		 mov	 DWORD PTR [eax], edx
  00040	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00043	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0
  00047	74 ef		 je	 SHORT $LL4@operator@4
$LN3@operator@4:

; 95   : 			if (_Mytree::_Isnil(_Ptr))

  00049	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004b	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0004f	75 02		 jne	 SHORT $LN1@operator@4

; 87   : 			_Ptr = _Mytree::_Max(
; 88   : 				_Mytree::_Left(_Ptr));	// ==> largest of left subtree

$LN21@operator@4:

; 96   : 				;	// begin() shouldn't be decremented, don't move
; 97   : 			else
; 98   : 				_Ptr = _Pnode;	// ==> parent if not head

  00051	89 10		 mov	 DWORD PTR [eax], edx
$LN1@operator@4:

; 99   : 			}
; 100  : 		return (*this);
; 101  : 		}

  00053	c3		 ret	 0
??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::max_size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 220  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::max_size
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z PROC ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ENDP ; std::forward<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$forward@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ; std::forward<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z PROC ; std::forward<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YA$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@AAU10@@Z ENDP ; std::forward<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Destroy<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z PROC ; std::_Destroy<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 63   : 	_Ptr->~_Ty();
; 64   : 	}

  00000	c3		 ret	 0
??$_Destroy@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z ENDP ; std::_Destroy<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::move<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@@std@@YAAAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &>
_TEXT	ENDS
PUBLIC	??$forward@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
PUBLIC	??$forward@PAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z ; std::forward<_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@PAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z PROC ; std::forward<_GUILD_INFO_STRUCT *>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@PAU_GUILD_INFO_STRUCT@@@std@@YA$$QAPAU_GUILD_INFO_STRUCT@@AAPAU1@@Z ENDP ; std::forward<_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??$forward@$$CBH@std@@YA$$QBHABH@Z		; std::forward<int const >
; Function compile flags: /Ogtp
;	COMDAT ??$forward@$$CBH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$CBH@std@@YA$$QBHABH@Z PROC			; std::forward<int const >, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@$$CBH@std@@YA$$QBHABH@Z ENDP			; std::forward<int const >
_TEXT	ENDS
PUBLIC	??$move@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &>
_TEXT	ENDS
PUBLIC	??$move@ABH@std@@YA$$QBHABH@Z			; std::move<int const &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@ABH@std@@YA$$QBHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@ABH@std@@YA$$QBHABH@Z PROC			; std::move<int const &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@ABH@std@@YA$$QBHABH@Z ENDP			; std::move<int const &>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 345  : 		{	// construct from message string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8d 45 08	 lea	 eax, DWORD PTR __Message$[ebp]
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@

; 346  : 		}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Ogtp
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 354  : 		{	// destroy the object

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 355  : 		}

  00006	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0000c	e8 00 00 00 00	 call	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00011	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00015	74 09		 je	 SHORT $LN6@scalar
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	83 c4 04	 add	 esp, 4
$LN6@scalar:
  00020	8b c6		 mov	 eax, esi
  00022	5e		 pop	 esi
  00023	5d		 pop	 ebp
  00024	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?compare@?$char_traits@D@std@@SAHPBD0I@Z	; std::char_traits<char>::compare
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
;	COMDAT ?compare@?$char_traits@D@std@@SAHPBD0I@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?compare@?$char_traits@D@std@@SAHPBD0I@Z PROC		; std::char_traits<char>::compare, COMDAT

; 485  : 		{	// compare [_First1, _First1 + _Count) with [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 486  : 		return (_CSTD memcmp(_First1, _First2, _Count));

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00006	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  00009	56		 push	 esi
  0000a	8b 75 10	 mov	 esi, DWORD PTR __Count$[ebp]
  0000d	57		 push	 edi
  0000e	83 fe 04	 cmp	 esi, 4
  00011	72 14		 jb	 SHORT $LN11@compare
$LL4@compare:
  00013	8b 02		 mov	 eax, DWORD PTR [edx]
  00015	3b 01		 cmp	 eax, DWORD PTR [ecx]
  00017	75 12		 jne	 SHORT $LN5@compare
  00019	83 ee 04	 sub	 esi, 4
  0001c	83 c1 04	 add	 ecx, 4
  0001f	83 c2 04	 add	 edx, 4
  00022	83 fe 04	 cmp	 esi, 4
  00025	73 ec		 jae	 SHORT $LL4@compare
$LN11@compare:
  00027	85 f6		 test	 esi, esi
  00029	74 45		 je	 SHORT $LN6@compare
$LN5@compare:
  0002b	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0002e	0f b6 39	 movzx	 edi, BYTE PTR [ecx]
  00031	2b c7		 sub	 eax, edi
  00033	75 31		 jne	 SHORT $LN7@compare
  00035	83 fe 01	 cmp	 esi, 1
  00038	76 36		 jbe	 SHORT $LN6@compare
  0003a	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  0003e	0f b6 79 01	 movzx	 edi, BYTE PTR [ecx+1]
  00042	2b c7		 sub	 eax, edi
  00044	75 20		 jne	 SHORT $LN7@compare
  00046	83 fe 02	 cmp	 esi, 2
  00049	76 25		 jbe	 SHORT $LN6@compare
  0004b	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  0004f	0f b6 79 02	 movzx	 edi, BYTE PTR [ecx+2]
  00053	2b c7		 sub	 eax, edi
  00055	75 0f		 jne	 SHORT $LN7@compare
  00057	83 fe 03	 cmp	 esi, 3
  0005a	76 14		 jbe	 SHORT $LN6@compare
  0005c	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  00060	0f b6 49 03	 movzx	 ecx, BYTE PTR [ecx+3]
  00064	2b c1		 sub	 eax, ecx
$LN7@compare:
  00066	c1 f8 1f	 sar	 eax, 31			; 0000001fH
  00069	5f		 pop	 edi
  0006a	83 c8 01	 or	 eax, 1
  0006d	5e		 pop	 esi

; 487  : 		}

  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
$LN6@compare:
  00070	5f		 pop	 edi

; 486  : 		return (_CSTD memcmp(_First1, _First2, _Count));

  00071	33 c0		 xor	 eax, eax
  00073	5e		 pop	 esi

; 487  : 		}

  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?compare@?$char_traits@D@std@@SAHPBD0I@Z ENDP		; std::char_traits<char>::compare
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogtp
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 490  : 		{	// find length of null-terminated string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 491  : 		return (_CSTD strlen(_First));

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL3@length:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL3@length
  00017	2b c2		 sub	 eax, edx

; 492  : 		}

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 496  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 498  : 		}

  00003	5d		 pop	 ebp

; 497  : 		return ((_Elem *)_CSTD memcpy(_First1, _First2, _Count));

  00004	e9 00 00 00 00	 jmp	 _memcpy
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:PROC
; Function compile flags: /Ogtp
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 516  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 518  : 		}

  00003	5d		 pop	 ebp

; 517  : 		return ((_Elem *)_CSTD memmove(_First1, _First2, _Count));

  00004	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 526  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 527  : 		_Left = _Right;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]
  0000b	88 0a		 mov	 BYTE PTR [edx], cl

; 528  : 		}

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 49   : 		}

  00000	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1512 : 		return (this->_Mysize);

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 1513 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2003 : 		{	// determine current pointer to buffer for mutable string

  00000	8b c1		 mov	 eax, ecx

; 2004 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2005 : 			: this->_Bx._Buf);

  00002	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00006	72 02		 jb	 SHORT $LN4@Myptr
  00008	8b 00		 mov	 eax, DWORD PTR [eax]
$LN4@Myptr:

; 2006 : 		}

  0000a	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogtp
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2009 : 		{	// determine current pointer to buffer for nonmutable string

  00000	8b c1		 mov	 eax, ecx

; 2010 : 		return (this->_BUF_SIZE <= this->_Myres ? this->_Bx._Ptr
; 2011 : 			: this->_Bx._Buf);

  00002	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00006	72 02		 jb	 SHORT $LN4@Myptr@2
  00008	8b 00		 mov	 eax, DWORD PTR [eax]
$LN4@Myptr@2:

; 2012 : 		}

  0000a	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx

; 2021 : 		_Xout_of_range("invalid string position");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00005	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN4@Xran:
$LN3@Xran:
  0000a	cc		 int	 3
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 459  : 		}

  00000	c3		 ret	 0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 161  : 	_ALLOCATOR() _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 162  : 		{	// construct default allocator (do nothing)
; 163  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogtp
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 165  : 	_ALLOCATOR(const _ALLOCATOR<_Ty>&) _THROW0()

  00000	8b c1		 mov	 eax, ecx

; 166  : 		{	// construct by copying (do nothing)
; 167  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1973 : 		{	// test if _Ptr points inside string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1974 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + this->_Mysize <= _Ptr)

  00004	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 2d		 je	 SHORT $LN2@Inside
  0000b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0000e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00011	72 04		 jb	 SHORT $LN8@Inside
  00013	8b 01		 mov	 eax, DWORD PTR [ecx]
  00015	eb 02		 jmp	 SHORT $LN9@Inside
$LN8@Inside:
  00017	8b c1		 mov	 eax, ecx
$LN9@Inside:
  00019	3b f0		 cmp	 esi, eax
  0001b	72 1b		 jb	 SHORT $LN2@Inside
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	72 04		 jb	 SHORT $LN12@Inside
  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	eb 02		 jmp	 SHORT $LN13@Inside
$LN12@Inside:
  00026	8b c1		 mov	 eax, ecx
$LN13@Inside:
  00028	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002b	03 c8		 add	 ecx, eax
  0002d	3b ce		 cmp	 ecx, esi
  0002f	76 07		 jbe	 SHORT $LN2@Inside

; 1976 : 		else
; 1977 : 			return (true);

  00031	b0 01		 mov	 al, 1
  00033	5e		 pop	 esi

; 1978 : 		}

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN2@Inside:

; 1975 : 			return (false);	// don't ask

  00038	32 c0		 xor	 al, al
  0003a	5e		 pop	 esi

; 1978 : 		}

  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx

; 2016 : 		_Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN4@Xlen:
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 181  : 		{	// deallocate object at _Ptr, ignore size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 182  : 		::operator delete(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000c	83 c4 04	 add	 esp, 4

; 183  : 		}

  0000f	5d		 pop	 ebp
  00010	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 218  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 219  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 220  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	__CxxThrowException@8:PROC
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\exception
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T157003 = -12						; size = 12
$T157008 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 3a		 je	 SHORT $LN5@Allocate

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	83 f9 ff	 cmp	 ecx, -1
  00012	77 0d		 ja	 SHORT $LN1@Allocate
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  0001f	75 28		 jne	 SHORT $LN5@Allocate
$LN1@Allocate:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  00021	8d 45 08	 lea	 eax, DWORD PTR $T157008[ebp]
  00024	50		 push	 eax
  00025	8d 4d f4	 lea	 ecx, DWORD PTR $T157003[ebp]
  00028	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157008[ebp], 0
  0002f	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00034	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00039	8d 4d f4	 lea	 ecx, DWORD PTR $T157003[ebp]
  0003c	51		 push	 ecx
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157003[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00044	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate:
$LN5@Allocate:

; 40   : 	}

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN9@Allocate:
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00006	56		 push	 esi
  00007	50		 push	 eax
  00008	8b f1		 mov	 esi, ecx
  0000a	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
PUBLIC	??$_Move@AAD@std@@YA$$QADAAD@Z			; std::_Move<char &>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$_Move@AAD@std@@YA$$QADAAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$_Move@AAD@std@@YA$$QADAAD@Z PROC			; std::_Move<char &>, COMDAT

; 94   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 95   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 96   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Move@AAD@std@@YA$$QADAAD@Z ENDP			; std::_Move<char &>
_TEXT	ENDS
PUBLIC	??$move@AA_N@std@@YA$$QA_NAA_N@Z		; std::move<bool &>
; Function compile flags: /Ogtp
;	COMDAT ??$move@AA_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AA_N@std@@YA$$QA_NAA_N@Z PROC			; std::move<bool &>, COMDAT

; 86   : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	return ((typename tr1::_Remove_reference<_Ty>::_Type&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 88   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AA_N@std@@YA$$QA_NAA_N@Z ENDP			; std::move<bool &>
_TEXT	ENDS
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
; Function compile flags: /Ogtp
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 78   : 	{	// forward _Arg, given explicitly specified type parameter

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 79   : 	return ((_Ty&&)_Arg);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 80   : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
PUBLIC	?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAU2@PADHHH@Z ; CGuildClass::AddMember
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
;	COMDAT ?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAU2@PADHHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_blank$ = -4						; size = 4
_pNode$ = 8						; size = 4
_player_name$ = 12					; size = 4
_aIndex$ = 16						; size = 4
_totalcount$ = 20					; size = 4
_pServer$ = 24						; size = 4
?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAU2@PADHHH@Z PROC ; CGuildClass::AddMember, COMDAT
; _this$ = ecx

; 367  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	57		 push	 edi

; 368  : 	int blank = -1;
; 369  : 
; 370  : 	if ( pNode == NULL )

  00007	8b 7d 08	 mov	 edi, DWORD PTR _pNode$[ebp]
  0000a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _blank$[ebp], -1
  00014	85 ff		 test	 edi, edi
  00016	75 09		 jne	 SHORT $LN14@AddMember

; 371  : 	{
; 372  : 		return NULL;

  00018	33 c0		 xor	 eax, eax
  0001a	5f		 pop	 edi

; 428  : }

  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 14 00	 ret	 20			; 00000014H
$LN14@AddMember:

; 373  : 	}
; 374  : 
; 375  : 	if ( strcmp(player_name, pNode->Names[0] ) == 0 )

  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _player_name$[ebp]
  00024	8d 57 2f	 lea	 edx, DWORD PTR [edi+47]
  00027	8b c1		 mov	 eax, ecx
  00029	53		 push	 ebx
  0002a	8d 9b 00 00 00
	00		 npad	 6
$LL22@AddMember:
  00030	8a 18		 mov	 bl, BYTE PTR [eax]
  00032	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00034	75 1a		 jne	 SHORT $LN23@AddMember
  00036	84 db		 test	 bl, bl
  00038	74 12		 je	 SHORT $LN24@AddMember
  0003a	8a 58 01	 mov	 bl, BYTE PTR [eax+1]
  0003d	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00040	75 0e		 jne	 SHORT $LN23@AddMember
  00042	83 c0 02	 add	 eax, 2
  00045	83 c2 02	 add	 edx, 2
  00048	84 db		 test	 bl, bl
  0004a	75 e4		 jne	 SHORT $LL22@AddMember
$LN24@AddMember:
  0004c	33 c0		 xor	 eax, eax
  0004e	eb 05		 jmp	 SHORT $LN25@AddMember
$LN23@AddMember:
  00050	1b c0		 sbb	 eax, eax
  00052	83 d8 ff	 sbb	 eax, -1
$LN25@AddMember:
  00055	56		 push	 esi
  00056	85 c0		 test	 eax, eax
  00058	75 07		 jne	 SHORT $LN13@AddMember

; 376  : 	{
; 377  : 		blank = 0;

  0005a	33 db		 xor	 ebx, ebx

; 378  : 	}
; 379  : 	else

  0005c	e9 a0 00 00 00	 jmp	 $LN3@AddMember
$LN13@AddMember:

; 380  : 	{
; 381  : 		for ( int i = 1;i<MAX_USER_GUILD ; i++)

  00061	be 01 00 00 00	 mov	 esi, 1
  00066	8d 4f 3a	 lea	 ecx, DWORD PTR [edi+58]
  00069	8d a4 24 00 00
	00 00		 npad	 7
$LL11@AddMember:

; 382  : 		{
; 383  : 			if ( pNode->Use[i] == TRUE )

  00070	80 bc 37 40 04
	00 00 01	 cmp	 BYTE PTR [edi+esi+1088], 1
  00078	75 65		 jne	 SHORT $LN8@AddMember

; 384  : 			{
; 385  : 				if ( strcmp(pNode->Names[i], player_name) == 0 )

  0007a	8b 55 0c	 mov	 edx, DWORD PTR _player_name$[ebp]
  0007d	8b c1		 mov	 eax, ecx
  0007f	90		 npad	 1
$LL26@AddMember:
  00080	8a 18		 mov	 bl, BYTE PTR [eax]
  00082	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00084	75 1a		 jne	 SHORT $LN27@AddMember
  00086	84 db		 test	 bl, bl
  00088	74 12		 je	 SHORT $LN28@AddMember
  0008a	8a 58 01	 mov	 bl, BYTE PTR [eax+1]
  0008d	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00090	75 0e		 jne	 SHORT $LN27@AddMember
  00092	83 c0 02	 add	 eax, 2
  00095	83 c2 02	 add	 edx, 2
  00098	84 db		 test	 bl, bl
  0009a	75 e4		 jne	 SHORT $LL26@AddMember
$LN28@AddMember:
  0009c	33 c0		 xor	 eax, eax
  0009e	eb 05		 jmp	 SHORT $LN29@AddMember
$LN27@AddMember:
  000a0	1b c0		 sbb	 eax, eax
  000a2	83 d8 ff	 sbb	 eax, -1
$LN29@AddMember:
  000a5	85 c0		 test	 eax, eax
  000a7	75 3f		 jne	 SHORT $LN10@AddMember

; 386  : 				{
; 387  : 					if ( aIndex != -1 )

  000a9	8b 45 10	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000ac	83 f8 ff	 cmp	 eax, -1
  000af	74 1a		 je	 SHORT $LN6@AddMember

; 388  : 					{
; 389  : 						pNode->Use[i] = TRUE;

  000b1	c6 84 3e 40 04
	00 00 01	 mov	 BYTE PTR [esi+edi+1088], 1

; 390  : 						pNode->Index[i] = aIndex;

  000b9	66 89 84 77 a0
	03 00 00	 mov	 WORD PTR [edi+esi*2+928], ax

; 391  : 						pNode->pServer[i] = pServer;

  000c1	8a 45 18	 mov	 al, BYTE PTR _pServer$[ebp]
  000c4	88 84 3e 90 04
	00 00		 mov	 BYTE PTR [esi+edi+1168], al
$LN6@AddMember:

; 392  : 					}
; 393  : 
; 394  : 					this->BuildMemberTotal(pNode);

  000cb	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	57		 push	 edi
  000cf	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
$LN33@AddMember:

; 395  : 					return FALSE;

  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	33 c0		 xor	 eax, eax
  000d8	5f		 pop	 edi

; 428  : }

  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c2 14 00	 ret	 20			; 00000014H
$LN8@AddMember:

; 396  : 				}
; 397  : 			}
; 398  : 			else if ( blank < 0 )

  000df	83 7d fc 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000e3	7d 03		 jge	 SHORT $LN10@AddMember

; 399  : 			{
; 400  : 				blank = i;

  000e5	89 75 fc	 mov	 DWORD PTR _blank$[ebp], esi
$LN10@AddMember:

; 380  : 	{
; 381  : 		for ( int i = 1;i<MAX_USER_GUILD ; i++)

  000e8	46		 inc	 esi
  000e9	83 c1 0b	 add	 ecx, 11			; 0000000bH
  000ec	83 fe 50	 cmp	 esi, 80			; 00000050H
  000ef	0f 8c 7b ff ff
	ff		 jl	 $LL11@AddMember

; 401  : 			}
; 402  : 		}
; 403  : 	}
; 404  : 
; 405  : 	if (blank < 0 )

  000f5	83 7d fc 00	 cmp	 DWORD PTR _blank$[ebp], 0

; 406  : 	{
; 407  : 		return NULL;

  000f9	7c d9		 jl	 SHORT $LN33@AddMember

; 401  : 			}
; 402  : 		}
; 403  : 	}
; 404  : 
; 405  : 	if (blank < 0 )

  000fb	8b 4d 0c	 mov	 ecx, DWORD PTR _player_name$[ebp]
  000fe	8b 5d fc	 mov	 ebx, DWORD PTR _blank$[ebp]
$LN3@AddMember:

; 408  : 	}
; 409  : 
; 410  : 	strcpy(pNode->Names[blank], player_name);

  00101	8b d3		 mov	 edx, ebx
  00103	6b d2 0b	 imul	 edx, 11			; 0000000bH
  00106	8d 74 3a 2f	 lea	 esi, DWORD PTR [edx+edi+47]
  0010a	8b c1		 mov	 eax, ecx
  0010c	2b f1		 sub	 esi, ecx
  0010e	8b ff		 npad	 2
$LL17@AddMember:
  00110	8a 10		 mov	 dl, BYTE PTR [eax]
  00112	88 14 06	 mov	 BYTE PTR [esi+eax], dl
  00115	40		 inc	 eax
  00116	84 d2		 test	 dl, dl
  00118	75 f6		 jne	 SHORT $LL17@AddMember

; 411  : 	pNode->Use[blank] = TRUE;
; 412  : 	pNode->pServer[blank] = pServer;

  0011a	8a 45 18	 mov	 al, BYTE PTR _pServer$[ebp]
  0011d	88 84 3b 90 04
	00 00		 mov	 BYTE PTR [ebx+edi+1168], al

; 413  : 
; 414  : 	if ( aIndex != -1 )

  00124	8b 45 10	 mov	 eax, DWORD PTR _aIndex$[ebp]
  00127	c6 84 3b 40 04
	00 00 01	 mov	 BYTE PTR [ebx+edi+1088], 1
  0012f	83 f8 ff	 cmp	 eax, -1
  00132	74 0b		 je	 SHORT $LN2@AddMember

; 415  : 	{
; 416  : 		pNode->Index[blank] = aIndex;

  00134	66 89 84 5f a0
	03 00 00	 mov	 WORD PTR [edi+ebx*2+928], ax

; 417  : 		pNode->Count++;

  0013c	fe 47 2d	 inc	 BYTE PTR [edi+45]
$LN2@AddMember:

; 418  : 	}
; 419  : 
; 420  : 	if ( totalcount > 0 )

  0013f	8b 45 14	 mov	 eax, DWORD PTR _totalcount$[ebp]
  00142	85 c0		 test	 eax, eax
  00144	7e 03		 jle	 SHORT $LN1@AddMember

; 421  : 	{
; 422  : 		pNode->TotalCount = totalcount;

  00146	88 47 2e	 mov	 BYTE PTR [edi+46], al
$LN1@AddMember:

; 423  : 	}
; 424  : 
; 425  : 	this->BuildMemberTotal(pNode);

  00149	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014c	57		 push	 edi
  0014d	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx

; 426  : 
; 427  : 	return pNode;

  00154	8b c7		 mov	 eax, edi
  00156	5f		 pop	 edi

; 428  : }

  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c2 14 00	 ret	 20			; 00000014H
?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAU2@PADHHH@Z ENDP ; CGuildClass::AddMember
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
; Function compile flags: /Ogtp
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ
_TEXT	SEGMENT
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*, COMDAT
; _this$ = ecx

; 396  : 		return ((reference)**(_Mybase *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 397  : 		}

  00005	c3		 ret	 0
??D?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QBEAAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lmost
; Function compile flags: /Ogtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rmost
; Function compile flags: /Ogtp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Root
; Function compile flags: /Ogtp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 2d 00	 cmp	 BYTE PTR [esi+45], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 0d		 jne	 SHORT $LN4@Rrotate

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN4@Rrotate:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0d		 jne	 SHORT $LN2@Rrotate

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00041	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00044	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN2@Rrotate:

; 1805 : 		else
; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0004d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00050	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx

; 556  : 		}

  0000a	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Key
; Function compile flags: /Ogtp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lmost
; Function compile flags: /Ogtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1759 : 		return (this->_Left(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1760 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rmost
; Function compile flags: /Ogtp
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1784 : 		return (this->_Right(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1785 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Root
; Function compile flags: /Ogtp
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1789 : 		return (this->_Parent(this->_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1790 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1793 : 		{	// promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1794 : 		_Nodeptr _Pnode = this->_Left(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	56		 push	 esi

; 1795 : 		this->_Left(_Wherenode) = this->_Right(_Pnode);

  00009	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000c	89 32		 mov	 DWORD PTR [edx], esi

; 1796 : 
; 1797 : 		if (!this->_Isnil(this->_Right(_Pnode)))

  0000e	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Rrotate@2

; 1798 : 			this->_Parent(this->_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Rrotate@2:

; 1799 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1800 : 
; 1801 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 0d		 jne	 SHORT $LN4@Rrotate@2

; 1802 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN4@Rrotate@2:

; 1803 : 		else if (_Wherenode == this->_Right(this->_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0d		 jne	 SHORT $LN2@Rrotate@2

; 1804 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  00041	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00044	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN2@Rrotate@2:

; 1805 : 		else
; 1806 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax

; 1807 : 
; 1808 : 		this->_Right(_Pnode) = _Wherenode;

  0004d	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1809 : 		this->_Parent(_Wherenode) = _Pnode;

  00050	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1810 : 		}

  00053	5d		 pop	 ebp
  00054	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 555  : 		this->_Alnod.deallocate(this->_Myhead, 1);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx

; 556  : 		}

  0000a	c3		 ret	 0
??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Key
; Function compile flags: /Ogtp
;	COMDAT ?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Key, COMDAT

; 616  : 		{	// return reference to key in node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return ((key_type&)_Traits::_Kfn(_Myval(_Pnode)));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 0c	 add	 eax, 12			; 0000000cH

; 618  : 		}

  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Key@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAAAHPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 250  : 		{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 251  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 252  : 		if (this->_Getcont() == 0
; 253  : 			|| this->_Ptr == 0
; 254  : 			|| _Mytree::_Isnil(this->_Ptr))
; 255  : 			{	// report error
; 256  : 			_DEBUG_ERROR("map/set iterator not incrementable");
; 257  : 			_SCL_SECURE_OUT_OF_RANGE;
; 258  : 			}
; 259  : 
; 260  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 261  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 262  : 		_SCL_SECURE_VALIDATE_RANGE(!_Mytree::_Isnil(this->_Ptr));
; 263  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 264  : 
; 265  : 		++(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++

; 266  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 267  : 		}

  0000b	c3		 ret	 0
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
; Function compile flags: /Ogtp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@ABH@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1742 : 		_Nodeptr _Pnode = _Root();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00009	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  0000d	75 19		 jne	 SHORT $LN3@Lbound
  0000f	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL4@Lbound:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	7d 05		 jge	 SHORT $LN2@Lbound

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 1748 : 			else

  0001c	eb 04		 jmp	 SHORT $LN1@Lbound
$LN2@Lbound:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN1@Lbound:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails
; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00022	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00026	74 ec		 je	 SHORT $LL4@Lbound
$LN3@Lbound:

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate
; 1755 : 		}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z ; std::_Pair_base<int const ,_GUILD_INFO_STRUCT *>::_Pair_base<int const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z PROC ; std::_Pair_base<int const ,_GUILD_INFO_STRUCT *>::_Pair_base<int const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 150  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 151  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z ENDP ; std::_Pair_base<int const ,_GUILD_INFO_STRUCT *>::_Pair_base<int const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 482  : 		{	// construct traits from _Parg and allocators from _Al

  00000	8b c1		 mov	 eax, ecx

; 483  : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
; Function compile flags: /Ogtp
;	COMDAT ??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++, COMDAT
; _this$ = ecx

; 270  : 		{	// postincrement

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : 		_Myiter _Tmp = *this;

  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	56		 push	 esi
  00006	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 06		 mov	 DWORD PTR [esi], eax

; 272  : 		++*this;

  0000b	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++

; 273  : 		return (_Tmp);

  00010	8b c6		 mov	 eax, esi
  00012	5e		 pop	 esi

; 274  : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
??E?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator++
_TEXT	ENDS
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 43   : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 44   : 		this->_Adopt(_Plist);
; 45   : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T157365 = -12						; size = 12
$T157369 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 43		 je	 SHORT $LN5@Allocate@2

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 55 55 55
	05		 cmp	 ecx, 89478485		; 05555555H
  00015	77 13		 ja	 SHORT $LN1@Allocate@2
  00017	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0001a	c1 e0 04	 shl	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  00028	75 28		 jne	 SHORT $LN5@Allocate@2
$LN1@Allocate@2:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR $T157369[ebp]
  0002d	51		 push	 ecx
  0002e	8d 4d f4	 lea	 ecx, DWORD PTR $T157365[ebp]
  00031	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157369[ebp], 0
  00038	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003d	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00042	8d 55 f4	 lea	 edx, DWORD PTR $T157365[ebp]
  00045	52		 push	 edx
  00046	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157365[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@2:
$LN5@Allocate@2:

; 40   : 	}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN9@Allocate@2:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>
; Function compile flags: /Ogtp
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T157374 = -12						; size = 12
$T157378 = 8						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>, COMDAT

; 30   : 	{	// allocate storage for _Count elements of type _Ty

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 31   : 	void *_Ptr = 0;
; 32   : 
; 33   : 	if (_Count <= 0)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx

; 34   : 		_Count = 0;
; 35   : 	else if (((_SIZT)(-1) / sizeof (_Ty) < _Count)

  0000d	74 46		 je	 SHORT $LN5@Allocate@3

; 36   : 		|| (_Ptr = ::operator new(_Count * sizeof (_Ty))) == 0)

  0000f	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  00015	77 16		 ja	 SHORT $LN1@Allocate@3
  00017	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0001a	03 c0		 add	 eax, eax
  0001c	03 c0		 add	 eax, eax
  0001e	03 c0		 add	 eax, eax
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	83 c4 04	 add	 esp, 4
  00029	85 c0		 test	 eax, eax

; 38   : 
; 39   : 	return ((_Ty _FARQ *)_Ptr);

  0002b	75 28		 jne	 SHORT $LN5@Allocate@3
$LN1@Allocate@3:

; 37   : 		_THROW_NCEE(bad_alloc, 0);

  0002d	8d 4d 08	 lea	 ecx, DWORD PTR $T157378[ebp]
  00030	51		 push	 ecx
  00031	8d 4d f4	 lea	 ecx, DWORD PTR $T157374[ebp]
  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157378[ebp], 0
  0003b	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00040	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00045	8d 55 f4	 lea	 edx, DWORD PTR $T157374[ebp]
  00048	52		 push	 edx
  00049	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157374[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00050	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN10@Allocate@3:
$LN5@Allocate@3:

; 40   : 	}

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
$LN9@Allocate@3:
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@Z ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::destroy
; Function compile flags: /Ogtp
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@Z PROC ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::destroy, COMDAT
; _this$ = ecx

; 213  : 		_Destroy(_Ptr);
; 214  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@Z ENDP ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::destroy
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 209  : 		}

  00008	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >, COMDAT
; _this$ = ecx

; 208  : 		{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 209  : 		}

  00008	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >
_TEXT	ENDS
PUBLIC	??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 277  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 278  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 279  : 		if (this->_Getcont() == 0
; 280  : 			|| this->_Ptr == 0)
; 281  : 			{	// report error
; 282  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 283  : 			_SCL_SECURE_OUT_OF_RANGE;
; 284  : 			}
; 285  : 
; 286  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 287  : 		--(*(_Mybase *)this);
; 288  : 		if (_Ptrsav == this->_Ptr)
; 289  : 			{	// report error
; 290  : 			_DEBUG_ERROR("map/set iterator not decrementable");
; 291  : 			_SCL_SECURE_OUT_OF_RANGE;
; 292  : 			}
; 293  : 
; 294  :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 295  : 		_SCL_SECURE_VALIDATE(this->_Getcont() != 0 && this->_Ptr != 0);
; 296  : 
; 297  : 		_Nodeptr _Ptrsav = this->_Ptr;
; 298  : 		--(*(_Mybase *)this);
; 299  : 		_SCL_SECURE_VALIDATE(_Ptrsav != this->_Ptr);
; 300  : 
; 301  :  #else /* _ITERATOR_DEBUG_LEVEL == 0 */
; 302  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--

; 303  :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 304  : 
; 305  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 306  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 874  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 875  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
; Function compile flags: /Ogtp
;	COMDAT ??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--, COMDAT
; _this$ = ecx

; 418  : 		{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 419  : 		--(*(_Mybase *)this);

  00003	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--

; 420  : 		return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 421  : 		}

  0000b	c3		 ret	 0
??F?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::operator--
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 164  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$_Pair_base@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::_Pair_base<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBH$$QAPAU_GUILD_INFO_STRUCT@@@Z ; std::_Pair_base<int const ,_GUILD_INFO_STRUCT *>::_Pair_base<int const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBH$$QAPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBH$$QAPAU_GUILD_INFO_STRUCT@@@Z PROC ; std::_Pair_base<int const ,_GUILD_INFO_STRUCT *>::_Pair_base<int const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 146  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBH$$QAPAU_GUILD_INFO_STRUCT@@@Z ENDP ; std::_Pair_base<int const ,_GUILD_INFO_STRUCT *>::_Pair_base<int const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__N0$ = 12						; size = 4
__Ptr$ = 16						; size = 4
__Count$ = 20						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 1888 : 		{	// compare [_Off, _Off + _N0) with [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1889 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1890 : 		if (_Count != 0)
; 1891 : 			_DEBUG_POINTER(_Ptr);
; 1892 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1893 : 
; 1894 : 		if (this->_Mysize < _Off)

  00003	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR __Off$[ebp]
  0000c	3b c7		 cmp	 eax, edi
  0000e	73 0a		 jae	 SHORT $LN2@compare@2

; 1895 : 			_Xran();	// _Off off end

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00015	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN19@compare@2:
$LN2@compare@2:

; 1896 : 		if (this->_Mysize - _Off < _N0)

  0001a	8b 75 0c	 mov	 esi, DWORD PTR __N0$[ebp]
  0001d	2b c7		 sub	 eax, edi
  0001f	3b c6		 cmp	 eax, esi
  00021	73 02		 jae	 SHORT $LN1@compare@2

; 1897 : 			_N0 = this->_Mysize - _Off;	// trim _N0 to size

  00023	8b f0		 mov	 esi, eax
$LN1@compare@2:

; 1898 : 
; 1899 : 		size_type _Ans = _Traits::compare(_Myptr() + _Off, _Ptr,
; 1900 : 			_N0 < _Count ? _N0 : _Count);

  00025	8b 5d 14	 mov	 ebx, DWORD PTR __Count$[ebp]
  00028	8b d6		 mov	 edx, esi
  0002a	3b f3		 cmp	 esi, ebx
  0002c	72 02		 jb	 SHORT $LN6@compare@2
  0002e	8b d3		 mov	 edx, ebx
$LN6@compare@2:
  00030	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00034	72 04		 jb	 SHORT $LN16@compare@2
  00036	8b 01		 mov	 eax, DWORD PTR [ecx]
  00038	eb 02		 jmp	 SHORT $LN17@compare@2
$LN16@compare@2:
  0003a	8b c1		 mov	 eax, ecx
$LN17@compare@2:
  0003c	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0003f	52		 push	 edx
  00040	51		 push	 ecx
  00041	03 c7		 add	 eax, edi
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1901 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 1902 : 			: _N0 == _Count ? 0 : +1);

  0004c	85 c0		 test	 eax, eax
  0004e	75 15		 jne	 SHORT $LN8@compare@2
  00050	3b f3		 cmp	 esi, ebx
  00052	73 0a		 jae	 SHORT $LN7@compare@2
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	83 c8 ff	 or	 eax, -1
  00059	5b		 pop	 ebx

; 1903 : 		}

  0005a	5d		 pop	 ebp
  0005b	c2 10 00	 ret	 16			; 00000010H
$LN7@compare@2:

; 1901 : 		return (_Ans != 0 ? (int)_Ans : _N0 < _Count ? -1
; 1902 : 			: _N0 == _Count ? 0 : +1);

  0005e	33 c0		 xor	 eax, eax
  00060	3b f3		 cmp	 esi, ebx
  00062	0f 95 c0	 setne	 al
$LN8@compare@2:
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx

; 1903 : 		}

  00068	5d		 pop	 ebp
  00069	c2 10 00	 ret	 16			; 00000010H
$LN18@compare@2:
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogtp
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1953 : 		{	// set new length and null terminator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1954 : 		_Traits::assign(_Myptr()[this->_Mysize = _Newsize], _Elem());

  00003	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
  00007	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0000a	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0000d	72 02		 jb	 SHORT $LN5@Eos
  0000f	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN5@Eos:
  00011	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1955 : 		}

  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1988 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1989 : 		if (!_Built)

  00003	80 7d 08 00	 cmp	 BYTE PTR __Built$[ebp], 0
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Newsize$[ebp]
  0000c	8b f1		 mov	 esi, ecx
  0000e	74 22		 je	 SHORT $LN9@Tidy

; 1990 : 			;
; 1991 : 		else if (this->_BUF_SIZE <= this->_Myres)

  00010	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00014	72 1c		 jb	 SHORT $LN9@Tidy

; 1992 : 			{	// copy any leftovers to small buffer and deallocate
; 1993 : 			_Elem *_Ptr = this->_Bx._Ptr;

  00016	53		 push	 ebx
  00017	8b 1e		 mov	 ebx, DWORD PTR [esi]

; 1994 : 			if (0 < _Newsize)

  00019	85 ff		 test	 edi, edi
  0001b	74 0b		 je	 SHORT $LN7@Tidy

; 1995 : 				_Traits::copy(this->_Bx._Buf, _Ptr, _Newsize);

  0001d	57		 push	 edi
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _memcpy
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@Tidy:

; 1996 : 			this->_Alval.deallocate(_Ptr, this->_Myres + 1);

  00028	53		 push	 ebx
  00029	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002e	83 c4 04	 add	 esp, 4
  00031	5b		 pop	 ebx
$LN9@Tidy:

; 1997 : 			}
; 1998 : 		this->_Myres = this->_BUF_SIZE - 1;
; 1999 : 		_Eos(_Newsize);

  00032	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00035	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0003c	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi

; 2000 : 		}

  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 454  : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 455  : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@QAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogtp
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1517 : 		size_type _Num = this->_Alval.max_size();
; 1518 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1519 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
$T157577 = -12						; size = 12
$T157569 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 3a		 je	 SHORT $LN1@allocate
  0000f	83 f9 ff	 cmp	 ecx, -1
  00012	77 0d		 ja	 SHORT $LN3@allocate
  00014	51		 push	 ecx
  00015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	75 28		 jne	 SHORT $LN1@allocate
$LN3@allocate:
  00021	8d 45 08	 lea	 eax, DWORD PTR $T157569[ebp]
  00024	50		 push	 eax
  00025	8d 4d f4	 lea	 ecx, DWORD PTR $T157577[ebp]
  00028	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157569[ebp], 0
  0002f	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00034	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00039	8d 4d f4	 lea	 ecx, DWORD PTR $T157577[ebp]
  0003c	51		 push	 ecx
  0003d	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157577[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00044	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate:
$LN1@allocate:

; 188  : 		}

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
$LN12@allocate:
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT

; 101  : 	{	// exchange values stored at _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 102  : 	_Ty _Tmp = _Move(_Left);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00006	8a 08		 mov	 cl, BYTE PTR [eax]
  00008	56		 push	 esi

; 103  : 	_Left = _Move(_Right);

  00009	8b 75 0c	 mov	 esi, DWORD PTR __Right$[ebp]
  0000c	8a 16		 mov	 dl, BYTE PTR [esi]
  0000e	88 10		 mov	 BYTE PTR [eax], dl

; 104  : 	_Right = _Move(_Tmp);

  00010	88 0e		 mov	 BYTE PTR [esi], cl
  00012	5e		 pop	 esi

; 105  : 	}

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	?ConnectUser@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@PAD1HH@Z ; CGuildClass::ConnectUser
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
;	COMDAT ?ConnectUser@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@PAD1HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_lpNode$ = 8						; size = 4
_guild_name$ = 12					; size = 4
_player_name$ = 16					; size = 4
_aIndex$ = 20						; size = 4
_pServer$ = 24						; size = 4
?ConnectUser@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@PAD1HH@Z PROC ; CGuildClass::ConnectUser, COMDAT
; _this$ = ecx

; 256  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 257  : 	if ( lpNode == NULL )

  00005	8b 75 08	 mov	 esi, DWORD PTR _lpNode$[ebp]
  00008	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000b	85 f6		 test	 esi, esi
  0000d	75 09		 jne	 SHORT $LN8@ConnectUse

; 258  : 	{
; 259  : 		return false;

  0000f	33 c0		 xor	 eax, eax
  00011	5e		 pop	 esi

; 290  : }

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c2 14 00	 ret	 20			; 00000014H
$LN8@ConnectUse:

; 260  : 	}
; 261  : 
; 262  : 	if ( strcmp(guild_name, lpNode->Name) != 0 )

  00018	8b 45 0c	 mov	 eax, DWORD PTR _guild_name$[ebp]
  0001b	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  0001e	53		 push	 ebx
  0001f	90		 npad	 1
$LL14@ConnectUse:
  00020	8a 18		 mov	 bl, BYTE PTR [eax]
  00022	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00024	75 1a		 jne	 SHORT $LN15@ConnectUse
  00026	84 db		 test	 bl, bl
  00028	74 12		 je	 SHORT $LN16@ConnectUse
  0002a	8a 58 01	 mov	 bl, BYTE PTR [eax+1]
  0002d	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00030	75 0e		 jne	 SHORT $LN15@ConnectUse
  00032	83 c0 02	 add	 eax, 2
  00035	83 c2 02	 add	 edx, 2
  00038	84 db		 test	 bl, bl
  0003a	75 e4		 jne	 SHORT $LL14@ConnectUse
$LN16@ConnectUse:
  0003c	33 c0		 xor	 eax, eax
  0003e	eb 05		 jmp	 SHORT $LN17@ConnectUse
$LN15@ConnectUse:
  00040	1b c0		 sbb	 eax, eax
  00042	83 d8 ff	 sbb	 eax, -1
$LN17@ConnectUse:
  00045	85 c0		 test	 eax, eax
  00047	74 0a		 je	 SHORT $LN7@ConnectUse

; 263  : 	{
; 264  : 		return false;

  00049	5b		 pop	 ebx
  0004a	33 c0		 xor	 eax, eax
  0004c	5e		 pop	 esi

; 290  : }

  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 14 00	 ret	 20			; 00000014H
$LN7@ConnectUse:

; 265  : 	}
; 266  : 
; 267  : 	for ( int n = 0; n<MAX_USER_GUILD;n++)

  00053	8b 4d 10	 mov	 ecx, DWORD PTR _player_name$[ebp]
  00056	57		 push	 edi
  00057	33 ff		 xor	 edi, edi
  00059	8d 46 2f	 lea	 eax, DWORD PTR [esi+47]
  0005c	8d 64 24 00	 npad	 4
$LL6@ConnectUse:

; 268  : 	{
; 269  : 		if ( lpNode->Use[n] == TRUE )

  00060	80 bc 3e 40 04
	00 00 01	 cmp	 BYTE PTR [esi+edi+1088], 1
  00068	75 32		 jne	 SHORT $LN5@ConnectUse

; 270  : 		{
; 271  : 			if ( strcmp(lpNode->Names[n], player_name) == 0 )

  0006a	8b f1		 mov	 esi, ecx
  0006c	8b d0		 mov	 edx, eax
  0006e	8b ff		 npad	 2
$LL18@ConnectUse:
  00070	8a 1a		 mov	 bl, BYTE PTR [edx]
  00072	3a 1e		 cmp	 bl, BYTE PTR [esi]
  00074	75 1a		 jne	 SHORT $LN19@ConnectUse
  00076	84 db		 test	 bl, bl
  00078	74 12		 je	 SHORT $LN20@ConnectUse
  0007a	8a 5a 01	 mov	 bl, BYTE PTR [edx+1]
  0007d	3a 5e 01	 cmp	 bl, BYTE PTR [esi+1]
  00080	75 0e		 jne	 SHORT $LN19@ConnectUse
  00082	83 c2 02	 add	 edx, 2
  00085	83 c6 02	 add	 esi, 2
  00088	84 db		 test	 bl, bl
  0008a	75 e4		 jne	 SHORT $LL18@ConnectUse
$LN20@ConnectUse:
  0008c	33 d2		 xor	 edx, edx
  0008e	eb 05		 jmp	 SHORT $LN21@ConnectUse
$LN19@ConnectUse:
  00090	1b d2		 sbb	 edx, edx
  00092	83 da ff	 sbb	 edx, -1
$LN21@ConnectUse:
  00095	85 d2		 test	 edx, edx
  00097	74 2b		 je	 SHORT $LN12@ConnectUse
  00099	8b 75 08	 mov	 esi, DWORD PTR _lpNode$[ebp]
$LN5@ConnectUse:

; 265  : 	}
; 266  : 
; 267  : 	for ( int n = 0; n<MAX_USER_GUILD;n++)

  0009c	47		 inc	 edi
  0009d	83 c0 0b	 add	 eax, 11			; 0000000bH
  000a0	83 ff 50	 cmp	 edi, 80			; 00000050H
  000a3	7c bb		 jl	 SHORT $LL6@ConnectUse

; 284  : 			}
; 285  : 		}
; 286  : 	}
; 287  : 	
; 288  : 	this->AddMember(lpNode, player_name, aIndex, pServer, -1);

  000a5	8b 45 18	 mov	 eax, DWORD PTR _pServer$[ebp]
  000a8	8b 55 14	 mov	 edx, DWORD PTR _aIndex$[ebp]
  000ab	6a ff		 push	 -1
  000ad	50		 push	 eax
  000ae	52		 push	 edx
  000af	51		 push	 ecx
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 ?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAU2@PADHHH@Z ; CGuildClass::AddMember
  000b9	5f		 pop	 edi
  000ba	5b		 pop	 ebx

; 289  : 	return false;

  000bb	33 c0		 xor	 eax, eax
  000bd	5e		 pop	 esi

; 290  : }

  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 14 00	 ret	 20			; 00000014H
$LN12@ConnectUse:

; 272  : 			{
; 273  : 				lpNode->Index[n] = aIndex;

  000c4	8b 45 08	 mov	 eax, DWORD PTR _lpNode$[ebp]
  000c7	66 8b 4d 14	 mov	 cx, WORD PTR _aIndex$[ebp]

; 274  : 				lpNode->pServer[n] = pServer;

  000cb	8a 55 18	 mov	 dl, BYTE PTR _pServer$[ebp]
  000ce	66 89 8c 78 a0
	03 00 00	 mov	 WORD PTR [eax+edi*2+928], cx
  000d6	88 94 07 90 04
	00 00		 mov	 BYTE PTR [edi+eax+1168], dl

; 275  : 
; 276  : 				if ( n == 0 )	// Case if is GuildMaster

  000dd	85 ff		 test	 edi, edi
  000df	75 0e		 jne	 SHORT $LN1@ConnectUse

; 277  : 				{
; 278  : 					lpNode->PlayScore = 0;

  000e1	c6 80 95 05 00
	00 00		 mov	 BYTE PTR [eax+1429], 0

; 279  : 					lpNode->WarDeclareState = 0;

  000e8	66 89 b8 90 05
	00 00		 mov	 WORD PTR [eax+1424], di
$LN1@ConnectUse:

; 280  : 					lpNode->WarState = 0;
; 281  : 				}
; 282  : 				
; 283  : 				return TRUE;

  000ef	5f		 pop	 edi
  000f0	5b		 pop	 ebx
  000f1	b8 01 00 00 00	 mov	 eax, 1
  000f6	5e		 pop	 esi

; 290  : }

  000f7	8b e5		 mov	 esp, ebp
  000f9	5d		 pop	 ebp
  000fa	c2 14 00	 ret	 20			; 00000014H
?ConnectUser@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@PAD1HH@Z ENDP ; CGuildClass::ConnectUser
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 2d 00	 cmp	 BYTE PTR [esi+45], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 0c		 jne	 SHORT $LN4@Lrotate

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN4@Lrotate:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0b		 jne	 SHORT $LN2@Lrotate

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003e	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN2@Lrotate:

; 1775 : 		else
; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00047	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0004c	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate
; Function compile flags: /Ogtp
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1763 : 		{	// promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1764 : 		_Nodeptr _Pnode = this->_Right(_Wherenode);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00009	56		 push	 esi

; 1765 : 		this->_Right(_Wherenode) = this->_Left(_Pnode);

  0000a	8b 30		 mov	 esi, DWORD PTR [eax]
  0000c	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1766 : 
; 1767 : 		if (!this->_Isnil(this->_Left(_Pnode)))

  0000f	8b 30		 mov	 esi, DWORD PTR [eax]
  00011	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  00015	75 03		 jne	 SHORT $LN5@Lrotate@2

; 1768 : 			this->_Parent(this->_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$LN5@Lrotate@2:

; 1769 : 		this->_Parent(_Pnode) = this->_Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1770 : 
; 1771 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	5e		 pop	 esi
  00024	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00027	75 0c		 jne	 SHORT $LN4@Lrotate@2

; 1772 : 			_Root() = _Pnode;

  00029	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN4@Lrotate@2:

; 1773 : 		else if (_Wherenode == this->_Left(this->_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0b		 jne	 SHORT $LN2@Lrotate@2

; 1774 : 			this->_Left(this->_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0003e	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  00040	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN2@Lrotate@2:

; 1775 : 		else
; 1776 : 			this->_Right(this->_Parent(_Wherenode)) = _Pnode;

  00047	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1777 : 
; 1778 : 		this->_Left(_Pnode) = _Wherenode;

  0004a	89 10		 mov	 DWORD PTR [eax], edx

; 1779 : 		this->_Parent(_Wherenode) = _Pnode;

  0004c	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 1780 : 		}

  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z ; std::pair<int const ,_GUILD_INFO_STRUCT *>::pair<int const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z PROC ; std::pair<int const ,_GUILD_INFO_STRUCT *>::pair<int const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00011	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 234  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@ABH$$QAPAU_GUILD_INFO_STRUCT@@@Z ENDP ; std::pair<int const ,_GUILD_INFO_STRUCT *>::pair<int const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >, COMDAT
; _this$ = ecx

; 213  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 214  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocate
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
$T157797 = -12						; size = 12
$T157795 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 43		 je	 SHORT $LN1@allocate@2
  0000f	81 f9 55 55 55
	05		 cmp	 ecx, 89478485		; 05555555H
  00015	77 13		 ja	 SHORT $LN3@allocate@2
  00017	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0001a	c1 e0 04	 shl	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	85 c0		 test	 eax, eax
  00028	75 28		 jne	 SHORT $LN1@allocate@2
$LN3@allocate@2:
  0002a	8d 4d 08	 lea	 ecx, DWORD PTR $T157795[ebp]
  0002d	51		 push	 ecx
  0002e	8d 4d f4	 lea	 ecx, DWORD PTR $T157797[ebp]
  00031	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157795[ebp], 0
  00038	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0003d	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00042	8d 55 f4	 lea	 edx, DWORD PTR $T157797[ebp]
  00045	52		 push	 edx
  00046	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157797[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0004d	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate@2:
$LN1@allocate@2:

; 188  : 		}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
$LN12@allocate@2:
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocate
; Function compile flags: /Ogtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
$T157820 = -12						; size = 12
$T157818 = 8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 186  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 187  : 		return (_Allocate(_Count, (pointer)0));

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Count$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	33 c0		 xor	 eax, eax
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 46		 je	 SHORT $LN1@allocate@3
  0000f	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  00015	77 16		 ja	 SHORT $LN3@allocate@3
  00017	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0001a	03 c0		 add	 eax, eax
  0001c	03 c0		 add	 eax, eax
  0001e	03 c0		 add	 eax, eax
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	83 c4 04	 add	 esp, 4
  00029	85 c0		 test	 eax, eax
  0002b	75 28		 jne	 SHORT $LN1@allocate@3
$LN3@allocate@3:
  0002d	8d 4d 08	 lea	 ecx, DWORD PTR $T157818[ebp]
  00030	51		 push	 ecx
  00031	8d 4d f4	 lea	 ecx, DWORD PTR $T157820[ebp]
  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR $T157818[ebp], 0
  0003b	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00040	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00045	8d 55 f4	 lea	 edx, DWORD PTR $T157820[ebp]
  00048	52		 push	 edx
  00049	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T157820[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00050	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN13@allocate@3:
$LN1@allocate@3:

; 188  : 		}

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
$LN12@allocate@3:
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 287  : 	_Alval.destroy(_Pdest);
; 288  : 	}

  00000	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
; Function compile flags: /Ogtp
;	COMDAT ??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>, COMDAT
; _this$ = ecx

; 227  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 228  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??0?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
; Function compile flags: /Ogtp
;	COMDAT ??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>, COMDAT
; _this$ = ecx

; 247  : 		{	// construct from moved values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Val1$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  0000d	89 10		 mov	 DWORD PTR [eax], edx
  0000f	8a 11		 mov	 dl, BYTE PTR [ecx]
  00011	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 248  : 		}

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@std@@QAE@AAV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > > &,bool>
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T157945 = -16						; size = 12
$T157929 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 30		 push	 48			; 00000030H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	33 c9		 xor	 ecx, ecx
  00012	83 c4 04	 add	 esp, 4
  00015	3b c1		 cmp	 eax, ecx
  00017	74 1a		 je	 SHORT $LN5@Buynode

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00019	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001c	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00024	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00027	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  0002a	66 89 48 2c	 mov	 WORD PTR [eax+44], cx
  0002e	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode:
  00033	8d 45 fc	 lea	 eax, DWORD PTR $T157929[ebp]
  00036	89 4d fc	 mov	 DWORD PTR $T157929[ebp], ecx
  00039	50		 push	 eax
  0003a	8d 4d f0	 lea	 ecx, DWORD PTR $T157945[ebp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00042	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T157945[ebp]
  0004a	51		 push	 ecx
  0004b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T157945[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00052	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode:
$LN26@Buynode:
  00057	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode
; Function compile flags: /Ogtp
;	COMDAT ?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
$T157998 = -16						; size = 12
$T157982 = -4						; size = 4
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 559  : 		{	// allocate a node

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00007	6a 18		 push	 24			; 00000018H
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	33 c9		 xor	 ecx, ecx
  00012	83 c4 04	 add	 esp, 4
  00015	3b c1		 cmp	 eax, ecx
  00017	74 1a		 je	 SHORT $LN5@Buynode@2

; 561  : 
; 562  : 		this->_Left(_Wherenode) = this->_Myhead;

  00019	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001c	89 10		 mov	 DWORD PTR [eax], edx

; 563  : 		this->_Parent(_Wherenode) = this->_Myhead;

  0001e	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00021	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 564  : 		this->_Right(_Wherenode) = this->_Myhead;

  00024	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00027	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 565  : 		this->_Color(_Wherenode) = this->_Red;

  0002a	66 89 48 14	 mov	 WORD PTR [eax+20], cx
  0002e	5e		 pop	 esi

; 566  : 		this->_Isnil(_Wherenode) = false;
; 567  : 		return (_Wherenode);
; 568  : 		}

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0

; 560  : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

$LN5@Buynode@2:
  00033	8d 45 fc	 lea	 eax, DWORD PTR $T157982[ebp]
  00036	89 4d fc	 mov	 DWORD PTR $T157982[ebp], ecx
  00039	50		 push	 eax
  0003a	8d 4d f0	 lea	 ecx, DWORD PTR $T157998[ebp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00042	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00047	8d 4d f0	 lea	 ecx, DWORD PTR $T157998[ebp]
  0004a	51		 push	 ecx
  0004b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T157998[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00052	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN27@Buynode@2:
$LN26@Buynode@2:
  00057	cc		 int	 3
?_Buynode@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$?0$$CBHPAU_GUILD_INFO_STRUCT@@@?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z ; std::pair<int const ,_GUILD_INFO_STRUCT *>::pair<int const ,_GUILD_INFO_STRUCT *><int const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0$$CBHPAU_GUILD_INFO_STRUCT@@@?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBHPAU_GUILD_INFO_STRUCT@@@?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<int const ,_GUILD_INFO_STRUCT *>::pair<int const ,_GUILD_INFO_STRUCT *><int const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	89 10		 mov	 DWORD PTR [eax], edx
  0000c	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 256  : 		}

  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??$?0$$CBHPAU_GUILD_INFO_STRUCT@@@?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<int const ,_GUILD_INFO_STRUCT *>::pair<int const ,_GUILD_INFO_STRUCT *><int const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 753  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 754  : 		_Tidy(true);

  00003	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00007	72 0b		 jb	 SHORT $LN11@basic_stri
  00009	8b 06		 mov	 eax, DWORD PTR [esi]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	83 c4 04	 add	 esp, 4
$LN11@basic_stri:
  00014	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0001b	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00022	c6 06 00	 mov	 BYTE PTR [esi], 0
  00025	5e		 pop	 esi

; 755  : 		}

  00026	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1109 : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 1110 : 		if (this->_Mysize < _Off)

  00006	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Off$[ebp]
  0000c	57		 push	 edi
  0000d	3b c1		 cmp	 eax, ecx
  0000f	73 0a		 jae	 SHORT $LN3@erase

; 1111 : 			_Xran();	// _Off off end

  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  00016	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN28@erase:
$LN3@erase:

; 1112 : 		if (this->_Mysize - _Off < _Count)

  0001b	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0001e	2b c1		 sub	 eax, ecx
  00020	3b c7		 cmp	 eax, edi
  00022	73 02		 jae	 SHORT $LN2@erase

; 1113 : 			_Count = this->_Mysize - _Off;	// trim _Count

  00024	8b f8		 mov	 edi, eax
$LN2@erase:

; 1114 : 		if (0 < _Count)

  00026	85 ff		 test	 edi, edi
  00028	74 50		 je	 SHORT $LN25@erase

; 1115 : 			{	// move elements down
; 1116 : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 1117 : 				this->_Mysize - _Off - _Count);

  0002a	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0002d	53		 push	 ebx
  0002e	83 fa 10	 cmp	 edx, 16			; 00000010H
  00031	72 04		 jb	 SHORT $LN11@erase
  00033	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00035	eb 02		 jmp	 SHORT $LN12@erase
$LN11@erase:
  00037	8b de		 mov	 ebx, esi
$LN12@erase:
  00039	83 fa 10	 cmp	 edx, 16			; 00000010H
  0003c	72 04		 jb	 SHORT $LN15@erase
  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	eb 02		 jmp	 SHORT $LN16@erase
$LN15@erase:
  00042	8b d6		 mov	 edx, esi
$LN16@erase:
  00044	2b c7		 sub	 eax, edi
  00046	03 d9		 add	 ebx, ecx
  00048	50		 push	 eax
  00049	03 df		 add	 ebx, edi
  0004b	03 d1		 add	 edx, ecx
  0004d	53		 push	 ebx
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 _memmove

; 1118 : 			size_type _Newsize = this->_Mysize - _Count;

  00054	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	2b c7		 sub	 eax, edi

; 1119 : 			_Eos(_Newsize);

  0005c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00060	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00063	5b		 pop	 ebx
  00064	72 0e		 jb	 SHORT $LN23@erase
  00066	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00068	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
  0006c	5f		 pop	 edi

; 1120 : 			}
; 1121 : 		return (*this);

  0006d	8b c6		 mov	 eax, esi
  0006f	5e		 pop	 esi

; 1122 : 		}

  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8

; 1119 : 			_Eos(_Newsize);

$LN23@erase:
  00074	8b ce		 mov	 ecx, esi
  00076	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN25@erase:

; 1120 : 			}
; 1121 : 		return (*this);

  0007a	5f		 pop	 edi
  0007b	8b c6		 mov	 eax, esi
  0007d	5e		 pop	 esi

; 1122 : 		}

  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
$LN27@erase:
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
; Function compile flags: /Ogtp
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT
; _this$ = ecx

; 1853 : 		{	// compare [0, _Mysize) with _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1854 : 		return (compare(0, this->_Mysize, _Right._Myptr(), _Right.size()));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0000a	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0000d	72 02		 jb	 SHORT $LN7@compare@3
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@compare@3:
  00011	52		 push	 edx
  00012	50		 push	 eax
  00013	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare

; 1855 : 		}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\iosfwd
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
$T158259 = -40						; size = 12
__Newres$ = -28						; size = 4
$T158242 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1919 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx
  0002d	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi

; 1920 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

  00030	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00033	8b f0		 mov	 esi, eax
  00035	83 ce 0f	 or	 esi, 15			; 0000000fH

; 1921 : 		if (max_size() < _Newres)

  00038	83 fe fe	 cmp	 esi, -2			; fffffffeH
  0003b	76 04		 jbe	 SHORT $LN9@Copy

; 1922 : 			_Newres = _Newsize;	// undo roundup if too big

  0003d	8b f0		 mov	 esi, eax
  0003f	eb 27		 jmp	 SHORT $LN39@Copy
$LN9@Copy:

; 1923 : 		else if (this->_Myres / 2 <= _Newres / 3)

  00041	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]
  00044	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  00049	f7 e6		 mul	 esi
  0004b	8b cb		 mov	 ecx, ebx
  0004d	d1 e9		 shr	 ecx, 1
  0004f	d1 ea		 shr	 edx, 1
  00051	3b ca		 cmp	 ecx, edx
  00053	76 13		 jbe	 SHORT $LN39@Copy

; 1924 : 			;
; 1925 : 		else if (this->_Myres <= max_size() - this->_Myres / 2)

  00055	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  0005a	2b c1		 sub	 eax, ecx

; 1926 : 			_Newres = this->_Myres
; 1927 : 				+ this->_Myres / 2;	// grow exponentially if possible

  0005c	8d 34 19	 lea	 esi, DWORD PTR [ecx+ebx]
  0005f	3b d8		 cmp	 ebx, eax
  00061	76 05		 jbe	 SHORT $LN39@Copy

; 1928 : 		else
; 1929 : 			_Newres = max_size();	// settle for max_size()

  00063	be fe ff ff ff	 mov	 esi, -2			; fffffffeH
$LN39@Copy:

; 1930 : 
; 1931 : 		_Elem *_Ptr;
; 1932 : 		_TRY_BEGIN

  00068	33 c0		 xor	 eax, eax

; 1933 : 			_Ptr = this->_Alval.allocate(_Newres + 1);

  0006a	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0006d	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+12], eax
  00070	3b c8		 cmp	 ecx, eax
  00072	76 12		 jbe	 SHORT $LN47@Copy
  00074	83 f9 ff	 cmp	 ecx, -1
  00077	77 12		 ja	 SHORT $LN46@Copy
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007f	83 c4 04	 add	 esp, 4
  00082	85 c0		 test	 eax, eax
  00084	74 05		 je	 SHORT $LN46@Copy
$LN47@Copy:
  00086	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  00089	eb 51		 jmp	 SHORT $LN19@Copy
$LN46@Copy:
  0008b	8d 4d e8	 lea	 ecx, DWORD PTR $T158242[ebp]
  0008e	51		 push	 ecx
  0008f	8d 4d d8	 lea	 ecx, DWORD PTR $T158259[ebp]
  00092	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T158242[ebp], 0
  00099	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0009e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  000a3	8d 55 d8	 lea	 edx, DWORD PTR $T158259[ebp]
  000a6	52		 push	 edx
  000a7	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T158259[ebp], OFFSET ??_7bad_alloc@std@@6B@
  000ae	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN112@Copy:
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:

; 1934 : 		_CATCH_ALL
; 1935 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  000b3	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]

; 1936 : 			_TRY_BEGIN
; 1937 : 				_Ptr = this->_Alval.allocate(_Newres + 1);

  000b6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	89 45 e4	 mov	 DWORD PTR __Newres$[ebp], eax
  000bc	40		 inc	 eax
  000bd	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  000c0	50		 push	 eax
  000c1	83 c1 18	 add	 ecx, 24			; 00000018H
  000c4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  000c8	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  000cd	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax

; 1941 : 			_CATCH_END
; 1942 : 		_CATCH_END

  000d0	b8 00 00 00 00	 mov	 eax, $LN107@Copy
  000d5	c3		 ret	 0
$LN107@Copy:
  000d6	8b 7d ec	 mov	 edi, DWORD PTR _this$[ebp]
  000d9	8b 75 e4	 mov	 esi, DWORD PTR __Newres$[ebp]
$LN19@Copy:

; 1943 : 
; 1944 : 		if (0 < _Oldlen)

  000dc	8b 5d 0c	 mov	 ebx, DWORD PTR __Oldlen$[ebp]
  000df	85 db		 test	 ebx, ebx
  000e1	74 1a		 je	 SHORT $LN78@Copy

; 1945 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000e3	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  000e7	72 04		 jb	 SHORT $LN76@Copy
  000e9	8b 07		 mov	 eax, DWORD PTR [edi]
  000eb	eb 02		 jmp	 SHORT $LN77@Copy
$LN76@Copy:
  000ed	8b c7		 mov	 eax, edi
$LN77@Copy:
  000ef	53		 push	 ebx
  000f0	50		 push	 eax
  000f1	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 _memcpy
  000fa	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN78@Copy:

; 1946 : 		_Tidy(true);

  000fd	83 7f 14 10	 cmp	 DWORD PTR [edi+20], 16	; 00000010H
  00101	72 0b		 jb	 SHORT $LN88@Copy
  00103	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00105	51		 push	 ecx
  00106	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0010b	83 c4 04	 add	 esp, 4
$LN88@Copy:

; 1947 : 		this->_Bx._Ptr = _Ptr;

  0010e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00111	c6 07 00	 mov	 BYTE PTR [edi], 0
  00114	89 07		 mov	 DWORD PTR [edi], eax

; 1948 : 		this->_Myres = _Newres;

  00116	89 77 14	 mov	 DWORD PTR [edi+20], esi

; 1949 : 		_Eos(_Oldlen);

  00119	89 5f 10	 mov	 DWORD PTR [edi+16], ebx
  0011c	83 fe 10	 cmp	 esi, 16			; 00000010H
  0011f	72 02		 jb	 SHORT $LN102@Copy
  00121	8b f8		 mov	 edi, eax
$LN102@Copy:
  00123	c6 04 1f 00	 mov	 BYTE PTR [edi+ebx], 0

; 1950 : 		}

  00127	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0012a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00131	59		 pop	 ecx
  00132	5f		 pop	 edi
  00133	5e		 pop	 esi
  00134	5b		 pop	 ebx
  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c2 08 00	 ret	 8
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:

; 1938 : 			_CATCH_ALL
; 1939 : 			_Tidy(true);	// failed again, discard storage and reraise

  0013b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0013e	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00142	72 0b		 jb	 SHORT $LN64@Copy
  00144	8b 16		 mov	 edx, DWORD PTR [esi]
  00146	52		 push	 edx
  00147	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0014c	83 c4 04	 add	 esp, 4
$LN64@Copy:

; 1940 : 			_RERAISE;

  0014f	6a 00		 push	 0
  00151	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00158	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0015f	6a 00		 push	 0
  00161	c6 06 00	 mov	 BYTE PTR [esi], 0
  00164	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN113@Copy:
$LN111@Copy:
  00169	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::~_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
;	COMDAT ??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ PROC ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::~_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00007	72 0b		 jb	 SHORT $LN14@Pair_base
  00009	8b 06		 mov	 eax, DWORD PTR [esi]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	83 c4 04	 add	 esp, 4
$LN14@Pair_base:
  00014	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0001b	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00022	c6 06 00	 mov	 BYTE PTR [esi], 0
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??1?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ ENDP ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::~_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 1e		 jne	 SHORT $LN1@Erase
$LL3@Erase:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00016	50		 push	 eax
  00017	8b cb		 mov	 ecx, ebx
  00019	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001e	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));
; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  00020	57		 push	 edi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00026	83 c4 04	 add	 esp, 4
  00029	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e2		 je	 SHORT $LL3@Erase
$LN1@Erase:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> > >
_TEXT	ENDS
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >, COMDAT
; _this$ = ecx

; 378  : 		{	// construct with node pointer _Pnode

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b c1		 mov	 eax, ecx
  00005	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00008	89 08		 mov	 DWORD PTR [eax], ecx

; 379  : 		}

  0000a	5d		 pop	 ebp
  0000b	c2 08 00	 ret	 8
??0?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@PBV?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> > >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::begin
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
$T158648 = -16						; size = 12
$T158625 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  00009	6a 30		 push	 48			; 00000030H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 28		 je	 SHORT $LN15@Tree_val
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00021	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 2d	 mov	 BYTE PTR [edx+45], al

; 551  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val:
  00046	8d 45 fc	 lea	 eax, DWORD PTR $T158625[ebp]
  00049	50		 push	 eax
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR $T158648[ebp]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T158625[ebp], 0
  00054	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T158648[ebp]
  00061	51		 push	 ecx
  00062	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T158648[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val:
$LN36@Tree_val:
  0006e	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::begin
; Function compile flags: /Ogtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::begin, COMDAT
; _this$ = ecx

; 806  : 		{	// return iterator for beginning of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 		return (iterator(_Lmost(), this));

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 808  : 		}

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::begin
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
$T158756 = -16						; size = 12
$T158740 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 542  : 		{	// construct base, and allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

  00009	6a 18		 push	 24			; 00000018H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 28		 je	 SHORT $LN15@Tree_val@2
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 545  : 
; 546  : 		this->_Left(this->_Myhead) = this->_Myhead;

  00021	89 00		 mov	 DWORD PTR [eax], eax

; 547  : 		this->_Parent(this->_Myhead) = this->_Myhead;

  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 548  : 		this->_Right(this->_Myhead) = this->_Myhead;

  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 549  : 		this->_Color(this->_Myhead) = this->_Black;

  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 14	 mov	 BYTE PTR [ecx+20], al

; 550  : 		this->_Isnil(this->_Myhead) = true;

  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 15	 mov	 BYTE PTR [edx+21], al

; 551  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8

; 543  : 		this->_Mysize = 0;
; 544  : 		this->_Myhead = this->_Alnod.allocate(1);

$LN15@Tree_val@2:
  00046	8d 45 fc	 lea	 eax, DWORD PTR $T158740[ebp]
  00049	50		 push	 eax
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR $T158756[ebp]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T158740[ebp], 0
  00054	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T158756[ebp]
  00061	51		 push	 ecx
  00062	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T158756[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN37@Tree_val@2:
$LN36@Tree_val@2:
  0006e	cc		 int	 3
??0?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 226  : 	{	// test if string < string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 227  : 	return (_Left.compare(_Right) < 0);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0000a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0000d	72 02		 jb	 SHORT $LN9@operator@5
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN9@operator@5:
  00011	51		 push	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00015	50		 push	 eax
  00016	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00019	50		 push	 eax
  0001a	6a 00		 push	 0
  0001c	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  00021	33 c9		 xor	 ecx, ecx
  00023	85 c0		 test	 eax, eax
  00025	0f 98 c0	 sets	 al

; 228  : 	}

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	3d fe ff ff 1f	 cmp	 eax, 536870910		; 1ffffffeH
  0000b	72 16		 jb	 SHORT $LN17@Insert

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));
; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  0000d	8b 45 14	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00016	83 c4 04	 add	 esp, 4

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0001e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN377@Insert:
$LN17@Insert:

; 1640 : 			}
; 1641 : 		++this->_Mysize;

  00023	40		 inc	 eax
  00024	53		 push	 ebx
  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1642 : 		_Newnode->_Parent = _Wherenode;

  00028	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0002b	57		 push	 edi
  0002c	8b 7d 14	 mov	 edi, DWORD PTR __Newnode$[ebp]
  0002f	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00032	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00035	32 db		 xor	 bl, bl
  00037	3b c2		 cmp	 eax, edx
  00039	75 10		 jne	 SHORT $LN16@Insert

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  0003b	89 7a 04	 mov	 DWORD PTR [edx+4], edi

; 1647 : 			_Lmost() = _Newnode;

  0003e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00041	89 3a		 mov	 DWORD PTR [edx], edi

; 1648 : 			_Rmost() = _Newnode;

  00043	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00046	89 78 08	 mov	 DWORD PTR [eax+8], edi
  00049	eb 20		 jmp	 SHORT $LN11@Insert
$LN16@Insert:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  0004b	38 5d 0c	 cmp	 BYTE PTR __Addleft$[ebp], bl
  0004e	74 0d		 je	 SHORT $LN14@Insert

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  00050	89 38		 mov	 DWORD PTR [eax], edi

; 1653 : 			if (_Wherenode == _Lmost())

  00052	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00055	3b 02		 cmp	 eax, DWORD PTR [edx]
  00057	75 12		 jne	 SHORT $LN11@Insert

; 1654 : 				_Lmost() = _Newnode;

  00059	89 3a		 mov	 DWORD PTR [edx], edi

; 1655 : 			}
; 1656 : 		else

  0005b	eb 0e		 jmp	 SHORT $LN11@Insert
$LN14@Insert:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0005d	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 1659 : 			if (_Wherenode == _Rmost())

  00060	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00063	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00066	75 03		 jne	 SHORT $LN11@Insert

; 1660 : 				_Rmost() = _Newnode;

  00068	89 7a 08	 mov	 DWORD PTR [edx+8], edi
$LN11@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0006b	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0006e	8b c7		 mov	 eax, edi
  00070	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  00073	0f 85 97 01 00
	00		 jne	 $LN9@Insert
  00079	56		 push	 esi
  0007a	8d 9b 00 00 00
	00		 npad	 6
$LL10@Insert:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00080	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00083	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00086	3b 16		 cmp	 edx, DWORD PTR [esi]
  00088	0f 85 c1 00 00
	00		 jne	 $LN8@Insert

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  0008e	8b 76 08	 mov	 esi, DWORD PTR [esi+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00091	38 5e 14	 cmp	 BYTE PTR [esi+20], bl
  00094	75 1c		 jne	 SHORT $LN7@Insert

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  00096	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

  0009a	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

  0009e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a1	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000a4	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000a7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000aa	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1677 : 					}
; 1678 : 				else

  000ad	e9 51 01 00 00	 jmp	 $LN316@Insert
$LN7@Insert:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  000b2	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  000b5	75 3a		 jne	 SHORT $LN111@Insert

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  000b7	8b c2		 mov	 eax, edx

; 1683 : 						_Lrotate(_Pnode);

  000b9	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000bc	8b 32		 mov	 esi, DWORD PTR [edx]
  000be	89 70 08	 mov	 DWORD PTR [eax+8], esi
  000c1	8b 32		 mov	 esi, DWORD PTR [edx]
  000c3	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  000c6	75 03		 jne	 SHORT $LN110@Insert
  000c8	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN110@Insert:
  000cb	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000ce	89 72 04	 mov	 DWORD PTR [edx+4], esi
  000d1	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000d4	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000d7	75 05		 jne	 SHORT $LN109@Insert
  000d9	89 56 04	 mov	 DWORD PTR [esi+4], edx
  000dc	eb 0e		 jmp	 SHORT $LN106@Insert
$LN109@Insert:
  000de	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000e1	3b 06		 cmp	 eax, DWORD PTR [esi]
  000e3	75 04		 jne	 SHORT $LN107@Insert
  000e5	89 16		 mov	 DWORD PTR [esi], edx
  000e7	eb 03		 jmp	 SHORT $LN106@Insert
$LN107@Insert:
  000e9	89 56 08	 mov	 DWORD PTR [esi+8], edx
$LN106@Insert:
  000ec	89 02		 mov	 DWORD PTR [edx], eax
  000ee	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN111@Insert:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000f1	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000f4	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000f8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000fb	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000fe	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  00101	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00104	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00107	8b 32		 mov	 esi, DWORD PTR [edx]
  00109	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0010c	89 3a		 mov	 DWORD PTR [edx], edi
  0010e	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00111	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  00114	75 03		 jne	 SHORT $LN173@Insert
  00116	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN173@Insert:
  00119	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  0011c	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  0011f	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00122	3b 57 04	 cmp	 edx, DWORD PTR [edi+4]
  00125	75 0b		 jne	 SHORT $LN172@Insert
  00127	89 77 04	 mov	 DWORD PTR [edi+4], esi
  0012a	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  0012d	e9 cb 00 00 00	 jmp	 $LN376@Insert

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN172@Insert:
  00132	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  00135	3b 57 08	 cmp	 edx, DWORD PTR [edi+8]
  00138	75 0b		 jne	 SHORT $LN170@Insert
  0013a	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0013d	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00140	e9 b8 00 00 00	 jmp	 $LN376@Insert

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN170@Insert:
  00145	89 37		 mov	 DWORD PTR [edi], esi
  00147	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  0014a	e9 ae 00 00 00	 jmp	 $LN376@Insert
$LN8@Insert:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  0014f	8b 36		 mov	 esi, DWORD PTR [esi]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  00151	38 5e 14	 cmp	 BYTE PTR [esi+20], bl
  00154	75 1c		 jne	 SHORT $LN3@Insert

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  00156	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  0015a	c6 46 14 01	 mov	 BYTE PTR [esi+20], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  0015e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00161	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00164	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  00167	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0016a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  0016d	e9 91 00 00 00	 jmp	 $LN316@Insert
$LN3@Insert:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  00172	3b 02		 cmp	 eax, DWORD PTR [edx]
  00174	75 3c		 jne	 SHORT $LN253@Insert

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  00176	8b c2		 mov	 eax, edx

; 1709 : 						_Rrotate(_Pnode);

  00178	8b 10		 mov	 edx, DWORD PTR [eax]
  0017a	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  0017d	89 30		 mov	 DWORD PTR [eax], esi
  0017f	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00182	38 5e 15	 cmp	 BYTE PTR [esi+21], bl
  00185	75 03		 jne	 SHORT $LN252@Insert
  00187	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN252@Insert:
  0018a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0018d	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00190	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00193	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00196	75 05		 jne	 SHORT $LN251@Insert
  00198	89 56 04	 mov	 DWORD PTR [esi+4], edx
  0019b	eb 0f		 jmp	 SHORT $LN248@Insert
$LN251@Insert:
  0019d	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  001a0	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  001a3	75 05		 jne	 SHORT $LN249@Insert
  001a5	89 56 08	 mov	 DWORD PTR [esi+8], edx
  001a8	eb 02		 jmp	 SHORT $LN248@Insert
$LN249@Insert:
  001aa	89 16		 mov	 DWORD PTR [esi], edx
$LN248@Insert:
  001ac	89 42 08	 mov	 DWORD PTR [edx+8], eax
  001af	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN253@Insert:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  001b2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001b5	c6 42 14 01	 mov	 BYTE PTR [edx+20], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  001b9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001bc	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001bf	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  001c2	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001c5	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001c8	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  001cb	8b 3e		 mov	 edi, DWORD PTR [esi]
  001cd	89 7a 08	 mov	 DWORD PTR [edx+8], edi
  001d0	8b 3e		 mov	 edi, DWORD PTR [esi]
  001d2	38 5f 15	 cmp	 BYTE PTR [edi+21], bl
  001d5	75 03		 jne	 SHORT $LN315@Insert
  001d7	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN315@Insert:
  001da	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  001dd	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  001e0	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  001e3	3b 57 04	 cmp	 edx, DWORD PTR [edi+4]
  001e6	75 05		 jne	 SHORT $LN314@Insert
  001e8	89 77 04	 mov	 DWORD PTR [edi+4], esi
  001eb	eb 0e		 jmp	 SHORT $LN311@Insert
$LN314@Insert:
  001ed	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  001f0	3b 17		 cmp	 edx, DWORD PTR [edi]
  001f2	75 04		 jne	 SHORT $LN312@Insert
  001f4	89 37		 mov	 DWORD PTR [edi], esi
  001f6	eb 03		 jmp	 SHORT $LN311@Insert
$LN312@Insert:
  001f8	89 77 08	 mov	 DWORD PTR [edi+8], esi
$LN311@Insert:
  001fb	89 16		 mov	 DWORD PTR [esi], edx
$LN376@Insert:
  001fd	8b 7d 14	 mov	 edi, DWORD PTR __Newnode$[ebp]
  00200	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN316@Insert:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00203	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00206	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  00209	0f 84 71 fe ff
	ff		 je	 $LL10@Insert
  0020f	5e		 pop	 esi
$LN9@Insert:

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00210	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00213	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1720 : 		return (iterator(_Newnode, this));

  00216	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00219	89 38		 mov	 DWORD PTR [eax], edi
  0021b	5f		 pop	 edi
  0021c	c6 41 14 01	 mov	 BYTE PTR [ecx+20], 1
  00220	5b		 pop	 ebx

; 1721 : 		}

  00221	5d		 pop	 ebp
  00222	c2 10 00	 ret	 16			; 00000010H
$LN375@Insert:
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::construct
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?construct@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN3@construct
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR __Val$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN3@construct:

; 203  : 		}

  00017	5d		 pop	 ebp
  00018	c2 08 00	 ret	 8
?construct@?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >::construct
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1959 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1960 : 		if (max_size() < _Newsize)

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  0000d	76 0a		 jbe	 SHORT $LN6@Grow

; 1961 : 			_Xlen();	// result too long

  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00014	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN49@Grow:
$LN6@Grow:

; 1962 : 		if (this->_Myres < _Newsize)

  00019	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0001c	3b c3		 cmp	 eax, ebx
  0001e	73 18		 jae	 SHORT $LN5@Grow

; 1963 : 			_Copy(_Newsize, this->_Mysize);	// reallocate to grow

  00020	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  0002a	33 c9		 xor	 ecx, ecx
  0002c	3b cb		 cmp	 ecx, ebx
  0002e	1b c0		 sbb	 eax, eax
  00030	5e		 pop	 esi
  00031	f7 d8		 neg	 eax
  00033	5b		 pop	 ebx

; 1970 : 		}

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
$LN5@Grow:

; 1964 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

  00038	80 7d 0c 00	 cmp	 BYTE PTR __Trim$[ebp], 0
  0003c	74 4e		 je	 SHORT $LN3@Grow
  0003e	83 fb 10	 cmp	 ebx, 16			; 00000010H
  00041	73 49		 jae	 SHORT $LN3@Grow

; 1965 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1966 : 				_Newsize < this->_Mysize ? _Newsize : this->_Mysize);

  00043	57		 push	 edi
  00044	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00047	3b df		 cmp	 ebx, edi
  00049	73 02		 jae	 SHORT $LN9@Grow
  0004b	8b fb		 mov	 edi, ebx
$LN9@Grow:
  0004d	83 f8 10	 cmp	 eax, 16			; 00000010H
  00050	72 1d		 jb	 SHORT $LN30@Grow
  00052	8b 1e		 mov	 ebx, DWORD PTR [esi]
  00054	85 ff		 test	 edi, edi
  00056	74 0b		 je	 SHORT $LN28@Grow
  00058	57		 push	 edi
  00059	53		 push	 ebx
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 _memcpy
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN28@Grow:
  00063	53		 push	 ebx
  00064	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00069	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  0006c	83 c4 04	 add	 esp, 4
$LN30@Grow:
  0006f	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00072	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  00079	33 c9		 xor	 ecx, ecx
  0007b	c6 04 37 00	 mov	 BYTE PTR [edi+esi], 0
  0007f	3b cb		 cmp	 ecx, ebx
  00081	5f		 pop	 edi
  00082	1b c0		 sbb	 eax, eax
  00084	5e		 pop	 esi
  00085	f7 d8		 neg	 eax
  00087	5b		 pop	 ebx

; 1970 : 		}

  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
$LN3@Grow:

; 1967 : 		else if (_Newsize == 0)

  0008c	85 db		 test	 ebx, ebx
  0008e	75 0d		 jne	 SHORT $LN46@Grow

; 1968 : 			_Eos(0);	// new size is zero, just null terminate

  00090	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00093	83 f8 10	 cmp	 eax, 16			; 00000010H
  00096	72 02		 jb	 SHORT $LN44@Grow
  00098	8b 36		 mov	 esi, DWORD PTR [esi]
$LN44@Grow:
  0009a	c6 06 00	 mov	 BYTE PTR [esi], 0
$LN46@Grow:

; 1969 : 		return (0 < _Newsize);	// return true only if more work to do

  0009d	33 c9		 xor	 ecx, ecx
  0009f	3b cb		 cmp	 ecx, ebx
  000a1	1b c0		 sbb	 eax, eax
  000a3	5e		 pop	 esi
  000a4	f7 d8		 neg	 eax
  000a6	5b		 pop	 ebx

; 1970 : 		}

  000a7	5d		 pop	 ebp
  000a8	c2 08 00	 ret	 8
$LN48@Grow:
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::end
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::end
; Function compile flags: /Ogtp
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::end, COMDAT
; _this$ = ecx

; 816  : 		{	// return iterator for end of mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 817  : 		return (iterator(this->_Myhead, this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 818  : 		}

  0000b	5d		 pop	 ebp
  0000c	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::end
_TEXT	ENDS
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xutility
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
CONST	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv795 = -12						; size = 4
__Erasednode$ = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  0000a	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00013	74 0a		 je	 SHORT $LN40@erase@2

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  0001a	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN295@erase@2:
$LN40@erase@2:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001f	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00022	89 5d f8	 mov	 DWORD PTR __Erasednode$[ebp], ebx
  00025	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  0002a	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0002c	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00030	74 05		 je	 SHORT $LN39@erase@2

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00032	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00035	eb 17		 jmp	 SHORT $LN291@erase@2
$LN39@erase@2:
  00037	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0003a	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003e	74 04		 je	 SHORT $LN37@erase@2

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00040	8b f9		 mov	 edi, ecx

; 1218 : 		else

  00042	eb 0a		 jmp	 SHORT $LN291@erase@2
$LN37@erase@2:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00044	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00047	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  0004a	3b c3		 cmp	 eax, ebx
  0004c	75 72		 jne	 SHORT $LN35@erase@2
$LN291@erase@2:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004e	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  00052	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00055	75 03		 jne	 SHORT $LN34@erase@2

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00057	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase@2:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00060	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  00063	75 05		 jne	 SHORT $LN33@erase@2

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00065	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00068	eb 0b		 jmp	 SHORT $LN30@erase@2
$LN33@erase@2:
  0006a	39 1e		 cmp	 DWORD PTR [esi], ebx
  0006c	75 04		 jne	 SHORT $LN31@erase@2

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006e	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  00070	eb 03		 jmp	 SHORT $LN30@erase@2
$LN31@erase@2:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  00072	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase@2:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00075	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00078	39 18		 cmp	 DWORD PTR [eax], ebx
  0007a	75 1b		 jne	 SHORT $LN29@erase@2

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  0007c	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  00080	74 04		 je	 SHORT $LN43@erase@2
  00082	8b c6		 mov	 eax, esi
  00084	eb 0c		 jmp	 SHORT $LN44@erase@2
$LN43@erase@2:
  00086	57		 push	 edi
  00087	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Min
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	83 c4 04	 add	 esp, 4
$LN44@erase@2:
  00092	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00095	89 02		 mov	 DWORD PTR [edx], eax
$LN29@erase@2:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00097	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0009a	89 4d f4	 mov	 DWORD PTR tv795[ebp], ecx
  0009d	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  000a0	75 78		 jne	 SHORT $LN165@erase@2

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000a2	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000a6	74 07		 je	 SHORT $LN45@erase@2
  000a8	8b c6		 mov	 eax, esi
  000aa	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000ad	eb 6b		 jmp	 SHORT $LN165@erase@2
$LN45@erase@2:

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000af	57		 push	 edi
  000b0	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Max
  000b5	8b 4d f4	 mov	 ecx, DWORD PTR tv795[ebp]
  000b8	83 c4 04	 add	 esp, 4
  000bb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN165@erase@2
$LN35@erase@2:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000c5	89 08		 mov	 DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase@2

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase@2
$LN26@erase@2:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 15 00	 cmp	 BYTE PTR [edi+21], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase@2

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase@2:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e1	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e7	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN25@erase@2:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase@2

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase@2
$LN23@erase@2:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase@2

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase@2
$LN21@erase@2:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase@2:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0010b	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00111	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00114	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00117	88 4b 14	 mov	 BYTE PTR [ebx+20], cl
$LN165@erase@2:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  0011d	b3 01		 mov	 bl, 1
  0011f	38 58 14	 cmp	 BYTE PTR [eax+20], bl
  00122	0f 85 fa 00 00
	00		 jne	 $LN19@erase@2

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  00128	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	3b 7a 04	 cmp	 edi, DWORD PTR [edx+4]
  00131	0f 84 e8 00 00
	00		 je	 $LN16@erase@2
$LL18@erase@2:
  00137	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  0013a	0f 85 df 00 00
	00		 jne	 $LN16@erase@2

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00140	8b 06		 mov	 eax, DWORD PTR [esi]
  00142	3b f8		 cmp	 edi, eax
  00144	75 65		 jne	 SHORT $LN15@erase@2

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00146	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  00149	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  0014d	75 13		 jne	 SHORT $LN14@erase@2

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  0014f	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00152	56		 push	 esi
  00153	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00157	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  0015c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0015f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN14@erase@2:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00162	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00166	75 74		 jne	 SHORT $LN293@erase@2

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00168	8b 10		 mov	 edx, DWORD PTR [eax]
  0016a	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0016d	75 08		 jne	 SHORT $LN11@erase@2
  0016f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00172	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  00175	74 61		 je	 SHORT $LN294@erase@2
$LN11@erase@2:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  00177	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0017a	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0017d	75 15		 jne	 SHORT $LN9@erase@2

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  0017f	8b 10		 mov	 edx, DWORD PTR [eax]
  00181	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00184	50		 push	 eax
  00185	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00189	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  0018e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN9@erase@2:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00194	8a 56 14	 mov	 dl, BYTE PTR [esi+20]
  00197	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0019a	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  0019d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1323 : 						_Lrotate(_Fixnodeparent);

  001a0	56		 push	 esi
  001a1	88 58 14	 mov	 BYTE PTR [eax+20], bl
  001a4	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a9	eb 74		 jmp	 SHORT $LN16@erase@2
$LN15@erase@2:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001ab	80 78 14 00	 cmp	 BYTE PTR [eax+20], 0
  001af	75 12		 jne	 SHORT $LN7@erase@2

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001b1	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001b4	56		 push	 esi
  001b5	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN7@erase@2:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001c3	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001c7	75 13		 jne	 SHORT $LN293@erase@2

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c9	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001cc	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001cf	75 1e		 jne	 SHORT $LN4@erase@2
  001d1	8b 10		 mov	 edx, DWORD PTR [eax]
  001d3	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001d6	75 17		 jne	 SHORT $LN4@erase@2
$LN294@erase@2:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d8	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$LN293@erase@2:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001dc	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1344 : 						_Fixnode = _Fixnodeparent;

  001df	8b fe		 mov	 edi, esi
  001e1	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  001e4	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e7	0f 85 4a ff ff
	ff		 jne	 $LL18@erase@2

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001ed	eb 30		 jmp	 SHORT $LN16@erase@2
$LN4@erase@2:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ef	8b 10		 mov	 edx, DWORD PTR [eax]
  001f1	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001f4	75 15		 jne	 SHORT $LN2@erase@2

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001f9	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fc	50		 push	 eax
  001fd	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00201	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00206	8b 06		 mov	 eax, DWORD PTR [esi]
  00208	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN2@erase@2:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020b	8a 56 14	 mov	 dl, BYTE PTR [esi+20]
  0020e	88 50 14	 mov	 BYTE PTR [eax+20], dl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

  00211	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  00214	8b 00		 mov	 eax, DWORD PTR [eax]

; 1359 : 						_Rrotate(_Fixnodeparent);

  00216	56		 push	 esi
  00217	88 58 14	 mov	 BYTE PTR [eax+20], bl
  0021a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate
$LN16@erase@2:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  0021f	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$LN19@erase@2:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node
; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00222	8b 4d f8	 mov	 ecx, DWORD PTR __Erasednode$[ebp]
  00225	51		 push	 ecx
  00226	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0022e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00231	83 c4 04	 add	 esp, 4
  00234	5f		 pop	 edi
  00235	5e		 pop	 esi
  00236	5b		 pop	 ebx
  00237	85 c0		 test	 eax, eax
  00239	74 04		 je	 SHORT $LN1@erase@2

; 1373 : 			--this->_Mysize;

  0023b	48		 dec	 eax
  0023c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase@2:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  0023f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00242	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00245	89 10		 mov	 DWORD PTR [eax], edx

; 1376 : 		}

  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c2 08 00	 ret	 8
$LN292@erase@2:
?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::clear
; Function compile flags: /Ogtp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00005	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00008	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  0000b	80 7b 15 00	 cmp	 BYTE PTR [ebx+21], 0
  0000f	8b f3		 mov	 esi, ebx
  00011	75 1e		 jne	 SHORT $LN7@clear
$LL9@clear:
  00013	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00016	51		 push	 ecx
  00017	8b cf		 mov	 ecx, edi
  00019	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
  0001e	8b 36		 mov	 esi, DWORD PTR [esi]
  00020	53		 push	 ebx
  00021	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00026	83 c4 04	 add	 esp, 4
  00029	80 7e 15 00	 cmp	 BYTE PTR [esi+21], 0
  0002d	8b de		 mov	 ebx, esi
  0002f	74 e2		 je	 SHORT $LL9@clear
$LN7@clear:

; 1416 : 		_Root() = this->_Myhead;

  00031	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00034	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00037	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003a	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0003c	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0003f	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1419 : 		this->_Mysize = 0;

  00042	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 1420 : 		}

  0004c	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::clear
_TEXT	ENDS
PUBLIC	??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
;	COMDAT ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00007	72 0b		 jb	 SHORT $LN16@pair
  00009	8b 06		 mov	 eax, DWORD PTR [esi]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	83 c4 04	 add	 esp, 4
$LN16@pair:
  00014	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0001b	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00022	c6 06 00	 mov	 BYTE PTR [esi], 0
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::~pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
$T160483 = -16						; size = 12
$T160417 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	6a 30		 push	 48			; 00000030H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 28		 je	 SHORT $LN20@Tree
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 2c	 mov	 BYTE PTR [ecx+44], al
  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 2d	 mov	 BYTE PTR [edx+45], al

; 699  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8

; 698  : 		{	// construct empty tree

$LN20@Tree:
  00046	8d 45 fc	 lea	 eax, DWORD PTR $T160417[ebp]
  00049	50		 push	 eax
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR $T160483[ebp]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T160417[ebp], 0
  00054	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T160483[ebp]
  00061	51		 push	 ecx
  00062	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T160483[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@Tree:
$LN42@Tree:
  0006e	cc		 int	 3
??0?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@ABV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xfunctional
;	COMDAT ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator(), COMDAT
; _this$ = ecx

; 124  : 		{	// apply operator< to operands

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 		return (_Left < _Right);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0000a	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0000d	72 02		 jb	 SHORT $LN11@operator@6
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN11@operator@6:
  00011	51		 push	 ecx
  00012	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00015	50		 push	 eax
  00016	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00019	50		 push	 eax
  0001a	6a 00		 push	 0
  0001c	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  00021	33 c9		 xor	 ecx, ecx
  00023	85 c0		 test	 eax, eax
  00025	0f 98 c0	 sets	 al

; 126  : 		}

  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z
_TEXT	SEGMENT
$T160639 = -16						; size = 12
$T160573 = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 698  : 		{	// construct empty tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	6a 18		 push	 24			; 00000018H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 28		 je	 SHORT $LN20@Tree@2
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 14	 mov	 BYTE PTR [ecx+20], al
  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 15	 mov	 BYTE PTR [edx+21], al

; 699  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c2 08 00	 ret	 8

; 698  : 		{	// construct empty tree

$LN20@Tree@2:
  00046	8d 45 fc	 lea	 eax, DWORD PTR $T160573[ebp]
  00049	50		 push	 eax
  0004a	8d 4d f0	 lea	 ecx, DWORD PTR $T160639[ebp]
  0004d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T160573[ebp], 0
  00054	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00059	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005e	8d 4d f0	 lea	 ecx, DWORD PTR $T160639[ebp]
  00061	51		 push	 ecx
  00062	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T160639[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00069	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN43@Tree@2:
$LN42@Tree@2:
  0006e	cc		 int	 3
??0?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@H@1@ABV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::lower_bound
; Function compile flags: /Ogtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0000d	75 19		 jne	 SHORT $LN36@lower_boun
  0000f	8b 55 0c	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00012	8b 12		 mov	 edx, DWORD PTR [edx]
$LL6@lower_boun:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	7d 05		 jge	 SHORT $LN4@lower_boun
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $LN3@lower_boun
$LN4@lower_boun:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$LN3@lower_boun:
  00022	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00026	74 ec		 je	 SHORT $LL6@lower_boun
$LN36@lower_boun:
  00028	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0002b	89 08		 mov	 DWORD PTR [eax], ecx

; 1451 : 		}

  0002d	5d		 pop	 ebp
  0002e	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
; Function compile flags: /Ogtp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
tv272 = -8						; size = 4
__Wherenode$ = -4					; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 1741 : 		{	// find leftmost node not less than _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 1742 : 		_Nodeptr _Pnode = _Root();

  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	57		 push	 edi
  0000a	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  0000d	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  00011	89 45 fc	 mov	 DWORD PTR __Wherenode$[ebp], eax
  00014	75 68		 jne	 SHORT $LN3@Lbound@2

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00016	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00019	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0001c	53		 push	 ebx
  0001d	8b 5a 10	 mov	 ebx, DWORD PTR [edx+16]
  00020	56		 push	 esi
  00021	89 45 f8	 mov	 DWORD PTR tv272[ebp], eax
  00024	eb 03		 jmp	 SHORT $LN4@Lbound@2
$LL60@Lbound@2:

; 1743 : 		_Nodeptr _Wherenode = this->_Myhead;	// end() if search fails

  00026	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
$LN4@Lbound@2:

; 1746 : 			if (_DEBUG_LT_PRED(this->comp, this->_Key(_Pnode), _Keyval))

  00029	83 7d f8 10	 cmp	 DWORD PTR tv272[ebp], 16 ; 00000010H
  0002d	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00030	72 02		 jb	 SHORT $LN29@Lbound@2
  00032	8b 12		 mov	 edx, DWORD PTR [edx]
$LN29@Lbound@2:
  00034	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
  00037	8b ce		 mov	 ecx, esi
  00039	3b ce		 cmp	 ecx, esi
  0003b	73 00		 jae	 SHORT $LN31@Lbound@2
$LN31@Lbound@2:
  0003d	8b ce		 mov	 ecx, esi
  0003f	3b f3		 cmp	 esi, ebx
  00041	72 02		 jb	 SHORT $LN36@Lbound@2
  00043	8b cb		 mov	 ecx, ebx
$LN36@Lbound@2:
  00045	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00049	72 02		 jb	 SHORT $LN46@Lbound@2
  0004b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN46@Lbound@2:
  0004d	51		 push	 ecx
  0004e	52		 push	 edx
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	85 c0		 test	 eax, eax
  0005a	75 0b		 jne	 SHORT $LN61@Lbound@2
  0005c	3b f3		 cmp	 esi, ebx
  0005e	72 09		 jb	 SHORT $LN58@Lbound@2
  00060	3b f3		 cmp	 esi, ebx
  00062	0f 95 c0	 setne	 al
  00065	85 c0		 test	 eax, eax
$LN61@Lbound@2:
  00067	79 05		 jns	 SHORT $LN2@Lbound@2
$LN58@Lbound@2:

; 1747 : 				_Pnode = this->_Right(_Pnode);	// descend right subtree

  00069	8b 7f 08	 mov	 edi, DWORD PTR [edi+8]

; 1748 : 			else

  0006c	eb 05		 jmp	 SHORT $LN1@Lbound@2
$LN2@Lbound@2:

; 1749 : 				{	// _Pnode not less than _Keyval, remember it
; 1750 : 				_Wherenode = _Pnode;

  0006e	89 7d fc	 mov	 DWORD PTR __Wherenode$[ebp], edi

; 1751 : 				_Pnode = this->_Left(_Pnode);	// descend left subtree

  00071	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN1@Lbound@2:

; 1744 : 
; 1745 : 		while (!this->_Isnil(_Pnode))

  00073	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  00077	74 ad		 je	 SHORT $LL60@Lbound@2

; 1752 : 				}
; 1753 : 
; 1754 : 		return (_Wherenode);	// return best remembered candidate

  00079	8b 45 fc	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
$LN3@Lbound@2:
  0007e	5f		 pop	 edi

; 1755 : 		}

  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T160929 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00004	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00012	75 1c		 jne	 SHORT $LN97@erase@3
  00014	3b d0		 cmp	 edx, eax
  00016	75 18		 jne	 SHORT $LN97@erase@3

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::clear

; 1383 : 			return (begin());

  0001f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00022	8b 08		 mov	 ecx, DWORD PTR [eax]

; 1389 : 			return (iterator(_First._Ptr, this));

  00024	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00027	89 08		 mov	 DWORD PTR [eax], ecx
  00029	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 0c 00	 ret	 12			; 0000000cH
$LN97@erase@3:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  00030	3b ca		 cmp	 ecx, edx
  00032	74 5e		 je	 SHORT $LN1@erase@3
$LL2@erase@3:

; 1388 : 				erase(_First++);

  00034	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0
  00038	8b d1		 mov	 edx, ecx
  0003a	75 42		 jne	 SHORT $LN59@erase@3
  0003c	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0003f	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00043	75 1a		 jne	 SHORT $LN99@erase@3
  00045	8b c8		 mov	 ecx, eax
  00047	8b 01		 mov	 eax, DWORD PTR [ecx]
  00049	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0004d	75 0b		 jne	 SHORT $LN73@erase@3
  0004f	90		 npad	 1
$LL74@erase@3:
  00050	8b c8		 mov	 ecx, eax
  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00058	74 f6		 je	 SHORT $LL74@erase@3
$LN73@erase@3:
  0005a	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  0005d	eb 1f		 jmp	 SHORT $LN59@erase@3
$LN99@erase@3:
  0005f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00062	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00066	75 13		 jne	 SHORT $LN57@erase@3
$LL58@erase@3:
  00068	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0006b	75 0e		 jne	 SHORT $LN57@erase@3
  0006d	8b c8		 mov	 ecx, eax
  0006f	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  00072	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00075	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00079	74 ed		 je	 SHORT $LL58@erase@3
$LN57@erase@3:
  0007b	89 45 0c	 mov	 DWORD PTR __First$[ebp], eax
$LN59@erase@3:
  0007e	52		 push	 edx
  0007f	8d 55 fc	 lea	 edx, DWORD PTR $T160929[ebp]
  00082	52		 push	 edx
  00083	8b ce		 mov	 ecx, esi
  00085	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0008d	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  00090	75 a2		 jne	 SHORT $LL2@erase@3
$LN1@erase@3:

; 1389 : 			return (iterator(_First._Ptr, this));

  00092	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00095	89 08		 mov	 DWORD PTR [eax], ecx
  00097	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert
; Function compile flags: /Ogtp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T161270 = 16						; size = 4
$T161268 = 16						; size = 4
__Where$155729 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00004	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00007	53		 push	 ebx
  00008	8b d9		 mov	 ebx, ecx
  0000a	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0000d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00010	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00014	56		 push	 esi
  00015	8b f1		 mov	 esi, ecx
  00017	b1 01		 mov	 cl, 1
  00019	57		 push	 edi
  0001a	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl
  0001d	75 2d		 jne	 SHORT $LN11@Linsert
  0001f	8b 7a 0c	 mov	 edi, DWORD PTR [edx+12]
$LL12@Linsert:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00022	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  00026	8b f0		 mov	 esi, eax
  00028	74 08		 je	 SHORT $LN10@Linsert

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0002a	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  0002d	0f 9d c1	 setge	 cl

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00030	eb 06		 jmp	 SHORT $LN146@Linsert
$LN10@Linsert:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00032	3b 78 0c	 cmp	 edi, DWORD PTR [eax+12]
  00035	0f 9c c1	 setl	 cl
$LN146@Linsert:
  00038	88 4d fc	 mov	 BYTE PTR __Addleft$[ebp], cl

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  0003b	84 c9		 test	 cl, cl
  0003d	74 04		 je	 SHORT $LN15@Linsert
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
  00041	eb 03		 jmp	 SHORT $LN16@Linsert
$LN15@Linsert:
  00043	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN16@Linsert:

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();
; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00046	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0004a	74 d6		 je	 SHORT $LL12@Linsert
$LN11@Linsert:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0004c	8b fe		 mov	 edi, esi
  0004e	89 7d 10	 mov	 DWORD PTR __Where$155729[ebp], edi

; 970  : 			if (!_Addleft)

  00051	84 c9		 test	 cl, cl
  00053	74 35		 je	 SHORT $LN99@Linsert

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00055	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  00058	8d 4d 10	 lea	 ecx, DWORD PTR $T161268[ebp]
  0005b	3b 30		 cmp	 esi, DWORD PTR [eax]
  0005d	75 20		 jne	 SHORT $LN4@Linsert
  0005f	52		 push	 edx
  00060	56		 push	 esi
  00061	6a 01		 push	 1
  00063	51		 push	 ecx
  00064	8b cb		 mov	 ecx, ebx
  00066	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  0006b	8b 10		 mov	 edx, DWORD PTR [eax]
  0006d	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	89 10		 mov	 DWORD PTR [eax], edx
  00074	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00078	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c2 0c 00	 ret	 12			; 0000000cH
$LN4@Linsert:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0007f	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
  00084	8b 7d 10	 mov	 edi, DWORD PTR __Where$155729[ebp]
  00087	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN99@Linsert:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  0008a	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  0008d	52		 push	 edx
  0008e	3b 42 0c	 cmp	 eax, DWORD PTR [edx+12]
  00091	7d 24		 jge	 SHORT $LN2@Linsert
  00093	8b 4d fc	 mov	 ecx, DWORD PTR __Addleft$[ebp]
  00096	56		 push	 esi
  00097	51		 push	 ecx
  00098	8d 55 10	 lea	 edx, DWORD PTR $T161270[ebp]
  0009b	52		 push	 edx
  0009c	8b cb		 mov	 ecx, ebx
  0009e	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	89 08		 mov	 DWORD PTR [eax], ecx
  000ac	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000b0	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Linsert:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));
; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  000b7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  000bc	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000bf	83 c4 04	 add	 esp, 4
  000c2	89 38		 mov	 DWORD PTR [eax], edi
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000ca	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAEPAXI@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::`scalar deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAEPAXI@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0000a	72 0b		 jb	 SHORT $LN18@scalar@2
  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	83 c4 04	 add	 esp, 4
$LN18@scalar@2:
  00017	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00022	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00029	c6 06 00	 mov	 BYTE PTR [esi], 0
  0002c	74 09		 je	 SHORT $LN30@scalar@2
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00034	83 c4 04	 add	 esp, 4
$LN30@scalar@2:
  00037	8b c6		 mov	 eax, esi
  00039	5e		 pop	 esi
  0003a	5d		 pop	 ebp
  0003b	c2 04 00	 ret	 4
??_G?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAEPAXI@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *>,std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *>,std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 0d		 je	 SHORT $LN7@Cons_val
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR __Src$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00014	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN7@Cons_val:

; 281  : 	}

  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *>,std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 893  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 894  : 		if (_Right.size() < _Roff)

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR __Roff$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000d	57		 push	 edi
  0000e	8b 79 10	 mov	 edi, DWORD PTR [ecx+16]
  00011	3b fb		 cmp	 edi, ebx
  00013	73 0a		 jae	 SHORT $LN5@assign

; 895  : 			_Xran();	// _Roff off end

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
  0001a	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN83@assign:
$LN5@assign:

; 896  : 		size_type _Num = _Right.size() - _Roff;
; 897  : 		if (_Count < _Num)

  0001f	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00022	2b fb		 sub	 edi, ebx
  00024	3b c7		 cmp	 eax, edi
  00026	73 02		 jae	 SHORT $LN4@assign

; 898  : 			_Num = _Count;	// trim _Num to size

  00028	8b f8		 mov	 edi, eax
$LN4@assign:

; 899  : 
; 900  : 		if (this == &_Right)

  0002a	3b f1		 cmp	 esi, ecx
  0002c	75 1f		 jne	 SHORT $LN3@assign

; 901  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002e	6a ff		 push	 -1
  00030	03 fb		 add	 edi, ebx
  00032	57		 push	 edi
  00033	8b ce		 mov	 ecx, esi
  00035	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  0003a	53		 push	 ebx
  0003b	6a 00		 push	 0
  0003d	8b ce		 mov	 ecx, esi
  0003f	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00044	5f		 pop	 edi

; 906  : 			}
; 907  : 		return (*this);

  00045	8b c6		 mov	 eax, esi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx

; 908  : 		}

  00049	5d		 pop	 ebp
  0004a	c2 0c 00	 ret	 12			; 0000000cH
$LN3@assign:

; 902  : 		else if (_Grow(_Num))

  0004d	83 ff fe	 cmp	 edi, -2			; fffffffeH
  00050	76 0a		 jbe	 SHORT $LN20@assign
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00057	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN84@assign:
$LN20@assign:
  0005c	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0005f	3b c7		 cmp	 eax, edi
  00061	73 28		 jae	 SHORT $LN19@assign
  00063	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00066	50		 push	 eax
  00067	57		 push	 edi
  00068	8b ce		 mov	 ecx, esi
  0006a	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00072	85 ff		 test	 edi, edi
  00074	74 68		 je	 SHORT $LN78@assign
$LN82@assign:

; 903  : 			{	// make room and assign new stuff
; 904  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  00076	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0007b	39 41 14	 cmp	 DWORD PTR [ecx+20], eax
  0007e	72 02		 jb	 SHORT $LN64@assign
  00080	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN64@assign:
  00082	39 46 14	 cmp	 DWORD PTR [esi+20], eax
  00085	72 2a		 jb	 SHORT $LN68@assign
  00087	8b 06		 mov	 eax, DWORD PTR [esi]
  00089	eb 28		 jmp	 SHORT $LN69@assign

; 902  : 		else if (_Grow(_Num))

$LN19@assign:
  0008b	85 ff		 test	 edi, edi
  0008d	75 e7		 jne	 SHORT $LN82@assign
  0008f	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  00092	83 f8 10	 cmp	 eax, 16			; 00000010H
  00095	72 0e		 jb	 SHORT $LN58@assign
  00097	8b 06		 mov	 eax, DWORD PTR [esi]
  00099	5f		 pop	 edi
  0009a	c6 00 00	 mov	 BYTE PTR [eax], 0

; 906  : 			}
; 907  : 		return (*this);

  0009d	8b c6		 mov	 eax, esi
  0009f	5e		 pop	 esi
  000a0	5b		 pop	 ebx

; 908  : 		}

  000a1	5d		 pop	 ebp
  000a2	c2 0c 00	 ret	 12			; 0000000cH

; 902  : 		else if (_Grow(_Num))

$LN58@assign:
  000a5	5f		 pop	 edi
  000a6	8b c6		 mov	 eax, esi
  000a8	5e		 pop	 esi
  000a9	c6 00 00	 mov	 BYTE PTR [eax], 0
  000ac	5b		 pop	 ebx

; 908  : 		}

  000ad	5d		 pop	 ebp
  000ae	c2 0c 00	 ret	 12			; 0000000cH

; 903  : 			{	// make room and assign new stuff
; 904  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$LN68@assign:
  000b1	8b c6		 mov	 eax, esi
$LN69@assign:
  000b3	57		 push	 edi
  000b4	03 cb		 add	 ecx, ebx
  000b6	51		 push	 ecx
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 _memcpy
  000bd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 905  : 			_Eos(_Num);

  000c0	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  000c4	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  000c7	72 0f		 jb	 SHORT $LN76@assign
  000c9	8b 06		 mov	 eax, DWORD PTR [esi]
  000cb	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
  000cf	5f		 pop	 edi

; 906  : 			}
; 907  : 		return (*this);

  000d0	8b c6		 mov	 eax, esi
  000d2	5e		 pop	 esi
  000d3	5b		 pop	 ebx

; 908  : 		}

  000d4	5d		 pop	 ebp
  000d5	c2 0c 00	 ret	 12			; 0000000cH

; 905  : 			_Eos(_Num);

$LN76@assign:
  000d8	8b c6		 mov	 eax, esi
  000da	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN78@assign:

; 906  : 			}
; 907  : 		return (*this);

  000de	5f		 pop	 edi
  000df	8b c6		 mov	 eax, esi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx

; 908  : 		}

  000e3	5d		 pop	 ebp
  000e4	c2 0c 00	 ret	 12			; 0000000cH
$LN80@assign:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 911  : 		{	// assign [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 912  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 913  : 		if (_Count != 0)
; 914  : 			_DEBUG_POINTER(_Ptr);
; 915  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 916  : 
; 917  : 		if (_Inside(_Ptr))

  00004	8b 5d 08	 mov	 ebx, DWORD PTR __Ptr$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	85 db		 test	 ebx, ebx
  0000c	74 59		 je	 SHORT $LN85@assign@2
  0000e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00011	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00014	72 04		 jb	 SHORT $LN12@assign@2
  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	eb 02		 jmp	 SHORT $LN13@assign@2
$LN12@assign@2:
  0001a	8b c6		 mov	 eax, esi
$LN13@assign@2:
  0001c	3b d8		 cmp	 ebx, eax
  0001e	72 47		 jb	 SHORT $LN85@assign@2
  00020	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00023	72 04		 jb	 SHORT $LN16@assign@2
  00025	8b 06		 mov	 eax, DWORD PTR [esi]
  00027	eb 02		 jmp	 SHORT $LN17@assign@2
$LN16@assign@2:
  00029	8b c6		 mov	 eax, esi
$LN17@assign@2:
  0002b	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0002e	03 d0		 add	 edx, eax
  00030	3b d3		 cmp	 edx, ebx
  00032	76 33		 jbe	 SHORT $LN85@assign@2

; 918  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

  00034	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00037	72 17		 jb	 SHORT $LN20@assign@2
  00039	8b 06		 mov	 eax, DWORD PTR [esi]
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0003e	51		 push	 ecx
  0003f	2b d8		 sub	 ebx, eax
  00041	53		 push	 ebx
  00042	56		 push	 esi
  00043	8b ce		 mov	 ecx, esi
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx

; 926  : 		}

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8

; 918  : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

$LN20@assign@2:
  00050	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00053	8b c6		 mov	 eax, esi
  00055	51		 push	 ecx
  00056	2b d8		 sub	 ebx, eax
  00058	53		 push	 ebx
  00059	56		 push	 esi
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx

; 926  : 		}

  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
$LN85@assign@2:
  00067	57		 push	 edi

; 919  : 
; 920  : 		if (_Grow(_Count))

  00068	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0006b	83 ff fe	 cmp	 edi, -2			; fffffffeH
  0006e	76 0a		 jbe	 SHORT $LN27@assign@2
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00075	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN89@assign@2:
$LN27@assign@2:
  0007a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0007d	3b c7		 cmp	 eax, edi
  0007f	73 1a		 jae	 SHORT $LN26@assign@2
  00081	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00084	52		 push	 edx
  00085	57		 push	 edi
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  0008d	85 ff		 test	 edi, edi
  0008f	74 5b		 je	 SHORT $LN82@assign@2
$LN88@assign@2:

; 921  : 			{	// make room and assign new stuff
; 922  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

  00091	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  00095	72 2a		 jb	 SHORT $LN72@assign@2
  00097	8b 06		 mov	 eax, DWORD PTR [esi]
  00099	eb 28		 jmp	 SHORT $LN73@assign@2

; 919  : 
; 920  : 		if (_Grow(_Count))

$LN26@assign@2:
  0009b	85 ff		 test	 edi, edi
  0009d	75 f2		 jne	 SHORT $LN88@assign@2
  0009f	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  000a2	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a5	72 0e		 jb	 SHORT $LN65@assign@2
  000a7	8b 06		 mov	 eax, DWORD PTR [esi]
  000a9	5f		 pop	 edi
  000aa	c6 00 00	 mov	 BYTE PTR [eax], 0

; 924  : 			}
; 925  : 		return (*this);

  000ad	8b c6		 mov	 eax, esi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx

; 926  : 		}

  000b1	5d		 pop	 ebp
  000b2	c2 08 00	 ret	 8

; 919  : 
; 920  : 		if (_Grow(_Count))

$LN65@assign@2:
  000b5	5f		 pop	 edi
  000b6	8b c6		 mov	 eax, esi
  000b8	5e		 pop	 esi
  000b9	c6 00 00	 mov	 BYTE PTR [eax], 0
  000bc	5b		 pop	 ebx

; 926  : 		}

  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8

; 921  : 			{	// make room and assign new stuff
; 922  : 			_Traits::copy(_Myptr(), _Ptr, _Count);

$LN72@assign@2:
  000c1	8b c6		 mov	 eax, esi
$LN73@assign@2:
  000c3	57		 push	 edi
  000c4	53		 push	 ebx
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 _memcpy
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 923  : 			_Eos(_Count);

  000ce	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  000d2	89 7e 10	 mov	 DWORD PTR [esi+16], edi
  000d5	72 0f		 jb	 SHORT $LN80@assign@2
  000d7	8b 06		 mov	 eax, DWORD PTR [esi]
  000d9	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
  000dd	5f		 pop	 edi

; 924  : 			}
; 925  : 		return (*this);

  000de	8b c6		 mov	 eax, esi
  000e0	5e		 pop	 esi
  000e1	5b		 pop	 ebx

; 926  : 		}

  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8

; 923  : 			_Eos(_Count);

$LN80@assign@2:
  000e6	8b c6		 mov	 eax, esi
  000e8	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0
$LN82@assign@2:

; 924  : 			}
; 925  : 		return (*this);

  000ec	5f		 pop	 edi
  000ed	8b c6		 mov	 eax, esi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx

; 926  : 		}

  000f1	5d		 pop	 ebp
  000f2	c2 08 00	 ret	 8
$LN86@assign@2:
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::find
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z
_TEXT	SEGMENT
$T162228 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000a	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0000e	57		 push	 edi
  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00012	75 18		 jne	 SHORT $LN9@find
  00014	56		 push	 esi
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$LL10@find:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	7d 05		 jge	 SHORT $LN8@find
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $LN7@find
$LN8@find:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@find:
  00025	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00029	74 ec		 je	 SHORT $LL10@find
  0002b	5e		 pop	 esi
$LN9@find:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	89 55 0c	 mov	 DWORD PTR __Where$[ebp], edx
  00032	3b d0		 cmp	 edx, eax
  00034	74 18		 je	 SHORT $LN3@find
  00036	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00038	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003b	7c 11		 jl	 SHORT $LN3@find
  0003d	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00045	89 10		 mov	 DWORD PTR [eax], edx
  00047	5f		 pop	 edi

; 1429 : 		}

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
$LN3@find:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0004e	89 45 fc	 mov	 DWORD PTR $T162228[ebp], eax
  00051	8d 45 fc	 lea	 eax, DWORD PTR $T162228[ebp]
  00054	8b 10		 mov	 edx, DWORD PTR [eax]
  00056	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00059	89 10		 mov	 DWORD PTR [eax], edx
  0005b	5f		 pop	 edi

; 1429 : 		}

  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::find
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::lower_bound
; Function compile flags: /Ogtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 1449 : 		{	// find leftmost node not less than _Keyval in mutable tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1450 : 		return (iterator(_Lbound(_Keyval), this));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	89 01		 mov	 DWORD PTR [ecx], eax
  00011	8b c1		 mov	 eax, ecx

; 1451 : 		}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tidy
; Function compile flags: /Ogtp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T162479 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T162479[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase

; 1867 : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
; Function compile flags: /Ogtp
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
$T162573 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Next$ = 16						; size = 4
__Node$ = 16						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1089 : 		{	// try to insert node at _Node using _Where as a hint

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 1090 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1091 : 		if (_Where._Getcont() != this)
; 1092 : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 1093 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1094 : 
; 1095 : 		const value_type& _Val = this->_Myval(_Node);
; 1096 : 
; 1097 : 		const_iterator _Next;
; 1098 : 		bool _Leftish = false;	// assume nearest point is end of sequence
; 1099 : 
; 1100 : 		if (size() == 0)

  00009	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0

; 1101 : 			return (_Insert(true, this->_Myhead, _Node));	// empty tree

  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	57		 push	 edi
  00011	8b 7d 10	 mov	 edi, DWORD PTR __Node$[ebp]
  00014	75 17		 jne	 SHORT $LN33@Insert@2
  00016	57		 push	 edi
  00017	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00023	8b c7		 mov	 eax, edi
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 1181 : 		}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 0c 00	 ret	 12			; 0000000cH
$LN33@Insert@2:
  0002d	53		 push	 ebx

; 1102 : 		else if (this->_Multi)
; 1103 : 			{	// insert even if duplicate
; 1104 : 			if (_Where == begin())
; 1105 : 				{	// insert at beginning if before first element
; 1106 : 				if (!_DEBUG_LT_PRED(this->comp,
; 1107 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1108 : 					return (_Insert(true, _Where._Mynode(), _Node));
; 1109 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1110 : 				}
; 1111 : 			else if (_Where == end())
; 1112 : 				{	// insert at end if after last element
; 1113 : 				if (!_DEBUG_LT_PRED(this->comp,
; 1114 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1115 : 					return (_Insert(false, _Rmost(), _Node));
; 1116 : 				}
; 1117 : 			else if (!_DEBUG_LT_PRED(this->comp,
; 1118 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1119 : 				&& !_DEBUG_LT_PRED(this->comp,
; 1120 : 					this->_Kfn(_Val),
; 1121 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1122 : 				{	// insert before _Where
; 1123 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))
; 1124 : 					return (_Insert(false, _Next._Mynode(), _Node));
; 1125 : 				else
; 1126 : 					return (_Insert(true, _Where._Mynode(), _Node));
; 1127 : 				}
; 1128 : 			else if (!_DEBUG_LT_PRED(this->comp,
; 1129 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1130 : 				&& (++(_Next = _Where) == end()
; 1131 : 					|| !_DEBUG_LT_PRED(this->comp,
; 1132 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1133 : 				{	// insert after _Where
; 1134 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))
; 1135 : 					return (_Insert(false, _Where._Mynode(), _Node));
; 1136 : 				else
; 1137 : 					return (_Insert(true, _Next._Mynode(), _Node));
; 1138 : 				}
; 1139 : 			else
; 1140 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1141 : 			}
; 1142 : 		else
; 1143 : 			{	// insert only if unique
; 1144 : 			if (_Where == begin())

  0002e	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  00031	3b 18		 cmp	 ebx, DWORD PTR [eax]
  00033	75 26		 jne	 SHORT $LN14@Insert@2

; 1145 : 				{	// insert at beginning if before first element
; 1146 : 				if (_DEBUG_LT_PRED(this->comp,

  00035	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00038	3b 4b 0c	 cmp	 ecx, DWORD PTR [ebx+12]
  0003b	0f 8d f4 00 00
	00		 jge	 $LN333@Insert@2

; 1147 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1148 : 					return (_Insert(true, _Where._Mynode(), _Node));

  00041	57		 push	 edi
  00042	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00045	53		 push	 ebx
  00046	6a 01		 push	 1
  00048	57		 push	 edi
  00049	8b ce		 mov	 ecx, esi
  0004b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00050	5b		 pop	 ebx
  00051	8b c7		 mov	 eax, edi
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi

; 1181 : 		}

  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 0c 00	 ret	 12			; 0000000cH
$LN14@Insert@2:

; 1149 : 				}
; 1150 : 			else if (_Where == end())

  0005b	3b d8		 cmp	 ebx, eax
  0005d	75 27		 jne	 SHORT $LN11@Insert@2

; 1151 : 				{	// insert at end if after last element
; 1152 : 				if (_DEBUG_LT_PRED(this->comp,

  0005f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00062	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00065	3b 57 0c	 cmp	 edx, DWORD PTR [edi+12]
  00068	0f 8d c7 00 00
	00		 jge	 $LN333@Insert@2

; 1153 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1154 : 					return (_Insert(false, _Rmost(), _Node));

  0006e	57		 push	 edi
  0006f	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00072	50		 push	 eax
  00073	6a 00		 push	 0
  00075	57		 push	 edi
  00076	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  0007b	5b		 pop	 ebx
  0007c	8b c7		 mov	 eax, edi
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi

; 1181 : 		}

  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 0c 00	 ret	 12			; 0000000cH
$LN11@Insert@2:

; 1155 : 				}
; 1156 : 			else if (_DEBUG_LT_PRED(this->comp,
; 1157 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1158 : 				&& _DEBUG_LT_PRED(this->comp,

  00086	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00089	3b 43 0c	 cmp	 eax, DWORD PTR [ebx+12]
  0008c	7d 4d		 jge	 SHORT $LN332@Insert@2
  0008e	8d 4d 10	 lea	 ecx, DWORD PTR __Next$[ebp]
  00091	89 5d 10	 mov	 DWORD PTR __Next$[ebp], ebx
  00094	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
  00099	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
  0009c	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0009f	39 48 0c	 cmp	 DWORD PTR [eax+12], ecx
  000a2	7d 37		 jge	 SHORT $LN332@Insert@2

; 1159 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1160 : 					this->_Kfn(_Val)))
; 1161 : 				{	// insert before _Where
; 1162 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

  000a4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000a7	80 79 15 00	 cmp	 BYTE PTR [ecx+21], 0

; 1163 : 					return (_Insert(false, _Next._Mynode(), _Node));

  000ab	57		 push	 edi
  000ac	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  000af	8b ce		 mov	 ecx, esi
  000b1	74 14		 je	 SHORT $LN7@Insert@2
  000b3	50		 push	 eax
  000b4	6a 00		 push	 0
  000b6	57		 push	 edi
  000b7	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  000bc	5b		 pop	 ebx
  000bd	8b c7		 mov	 eax, edi
  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi

; 1181 : 		}

  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 0c 00	 ret	 12			; 0000000cH
$LN7@Insert@2:

; 1164 : 				else
; 1165 : 					return (_Insert(true, _Where._Mynode(), _Node));

  000c7	53		 push	 ebx
  000c8	6a 01		 push	 1
  000ca	57		 push	 edi
  000cb	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  000d0	5b		 pop	 ebx
  000d1	8b c7		 mov	 eax, edi
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi

; 1181 : 		}

  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 0c 00	 ret	 12			; 0000000cH
$LN332@Insert@2:

; 1166 : 				}
; 1167 : 			else if (_DEBUG_LT_PRED(this->comp,
; 1168 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1169 : 				&& (++(_Next = _Where) == end()
; 1170 : 					|| _DEBUG_LT_PRED(this->comp,

  000db	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000de	39 43 0c	 cmp	 DWORD PTR [ebx+12], eax
  000e1	7d 52		 jge	 SHORT $LN333@Insert@2
  000e3	8d 4d 10	 lea	 ecx, DWORD PTR __Next$[ebp]
  000e6	89 5d 10	 mov	 DWORD PTR __Next$[ebp], ebx
  000e9	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++
  000ee	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
  000f1	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000f4	74 08		 je	 SHORT $LN3@Insert@2
  000f6	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000f9	3b 48 0c	 cmp	 ecx, DWORD PTR [eax+12]
  000fc	7d 37		 jge	 SHORT $LN333@Insert@2
$LN3@Insert@2:

; 1171 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1172 : 				{	// insert after _Where
; 1173 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

  000fe	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00101	80 7a 15 00	 cmp	 BYTE PTR [edx+21], 0

; 1174 : 					return (_Insert(false, _Where._Mynode(), _Node));

  00105	57		 push	 edi
  00106	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00109	8b ce		 mov	 ecx, esi
  0010b	74 14		 je	 SHORT $LN2@Insert@2
  0010d	53		 push	 ebx
  0010e	6a 00		 push	 0
  00110	57		 push	 edi
  00111	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00116	5b		 pop	 ebx
  00117	8b c7		 mov	 eax, edi
  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi

; 1181 : 		}

  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Insert@2:

; 1175 : 				else
; 1176 : 					return (_Insert(true, _Next._Mynode(), _Node));

  00121	50		 push	 eax
  00122	6a 01		 push	 1
  00124	57		 push	 edi
  00125	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  0012a	5b		 pop	 ebx
  0012b	8b c7		 mov	 eax, edi
  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi

; 1181 : 		}

  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 0c 00	 ret	 12			; 0000000cH
$LN333@Insert@2:

; 1177 : 				}
; 1178 : 			}
; 1179 : 
; 1180 : 		return (_Linsert(_Node, _Leftish).first);	// try usual insert

  00135	6a 00		 push	 0
  00137	57		 push	 edi
  00138	8d 45 f8	 lea	 eax, DWORD PTR $T162573[ebp]
  0013b	50		 push	 eax
  0013c	8b ce		 mov	 ecx, esi
  0013e	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert
  00143	8b 08		 mov	 ecx, DWORD PTR [eax]
  00145	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00148	5b		 pop	 ebx
  00149	5f		 pop	 edi
  0014a	89 08		 mov	 DWORD PTR [eax], ecx
  0014c	5e		 pop	 esi

; 1181 : 		}

  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c2 0c 00	 ret	 12			; 0000000cH
?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??$_Buynode@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z
_TEXT	SEGMENT
$T163280 = -12						; size = 12
$T163233 = 8						; size = 4
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	57		 push	 edi

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  00008	6a 18		 push	 24			; 00000018H
  0000a	8b f9		 mov	 edi, ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	8b f0		 mov	 esi, eax
  00013	33 c0		 xor	 eax, eax
  00015	83 c4 04	 add	 esp, 4
  00018	3b f0		 cmp	 esi, eax
  0001a	74 33		 je	 SHORT $LN12@Buynode@3
  0001c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001f	89 0e		 mov	 DWORD PTR [esi], ecx
  00021	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00024	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  0002a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0002d	66 89 46 14	 mov	 WORD PTR [esi+20], ax
  00031	52		 push	 edx
  00032	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00035	50		 push	 eax
  00036	83 c7 0d	 add	 edi, 13			; 0000000dH
  00039	57		 push	 edi
  0003a	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0003d	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,std::pair<int const ,_GUILD_INFO_STRUCT *>,std::pair<int const ,_GUILD_INFO_STRUCT *> >
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH
  00045	5f		 pop	 edi

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);
; 595  : 		_RERAISE;
; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  00046	8b c6		 mov	 eax, esi
  00048	5e		 pop	 esi

; 599  : 		}

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

$LN12@Buynode@3:
  0004f	8d 4d 08	 lea	 ecx, DWORD PTR $T163233[ebp]
  00052	51		 push	 ecx
  00053	8d 4d f4	 lea	 ecx, DWORD PTR $T163280[ebp]
  00056	89 45 08	 mov	 DWORD PTR $T163233[ebp], eax
  00059	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  0005e	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  00063	8d 55 f4	 lea	 edx, DWORD PTR $T163280[ebp]
  00066	52		 push	 edx
  00067	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T163280[ebp], OFFSET ??_7bad_alloc@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN44@Buynode@3:
$LN43@Buynode@3:
  00073	cc		 int	 3
??$_Buynode@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z PROC ; std::_Destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 62   : 	{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 63   : 	_Ptr->~_Ty();

  00004	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  00007	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0000b	72 0b		 jb	 SHORT $LN20@Destroy
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$LN20@Destroy:
  00018	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00026	c6 06 00	 mov	 BYTE PTR [esi], 0
  00029	5e		 pop	 esi

; 64   : 	}

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Destroy@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@YAXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ENDP ; std::_Destroy<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 543  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 544  : 		_Tidy();
; 545  : 		assign(_Right, 0, npos);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	56		 push	 esi
  00007	6a ff		 push	 -1
  00009	8b f1		 mov	 esi, ecx
  0000b	6a 00		 push	 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001b	50		 push	 eax
  0001c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0001f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 546  : 		}

  00024	8b c6		 mov	 eax, esi
  00026	5e		 pop	 esi
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogtp
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 929  : 		{	// assign [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 930  : 		_DEBUG_POINTER(_Ptr);
; 931  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00004	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  00007	8b c6		 mov	 eax, esi
  00009	57		 push	 edi
  0000a	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000d	8d 49 00	 npad	 3
$LL5@assign@3:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $LL5@assign@3
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 932  : 		}

  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
;	COMDAT ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z
_TEXT	SEGMENT
_Itor$ = -4						; size = 4
_number$ = 8						; size = 4
?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z PROC ; CGuildClass::SearchGuild_Number, COMDAT
; _this$ = ecx

; 223  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 224  : 	std::map<int , _GUILD_INFO_STRUCT *>::iterator Itor = this->m_GuildNumberMap.find(number);

  00007	8d 45 08	 lea	 eax, DWORD PTR _number$[ebp]
  0000a	50		 push	 eax
  0000b	8d 4d fc	 lea	 ecx, DWORD PTR _Itor$[ebp]
  0000e	51		 push	 ecx
  0000f	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  00012	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::find

; 225  : 
; 226  : 	if ( Itor == this->m_GuildNumberMap.end() )

  00017	8b 45 fc	 mov	 eax, DWORD PTR _Itor$[ebp]
  0001a	3b 46 20	 cmp	 eax, DWORD PTR [esi+32]
  0001d	5e		 pop	 esi
  0001e	75 08		 jne	 SHORT $LN1@SearchGuil

; 227  : 	{
; 228  : 		return NULL;

  00020	33 c0		 xor	 eax, eax

; 232  : }

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
$LN1@SearchGuil:

; 229  : 	}
; 230  : 
; 231  : 	return (*(Itor)).second;

  00028	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 232  : }

  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 04 00	 ret	 4
?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ENDP ; CGuildClass::SearchGuild_Number
_TEXT	ENDS
PUBLIC	?SearchGuild_NumberAndId@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPAD@Z ; CGuildClass::SearchGuild_NumberAndId
; Function compile flags: /Ogtp
;	COMDAT ?SearchGuild_NumberAndId@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPAD@Z
_TEXT	SEGMENT
_pNode$ = 8						; size = 4
_number$ = 8						; size = 4
_name$ = 12						; size = 4
?SearchGuild_NumberAndId@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPAD@Z PROC ; CGuildClass::SearchGuild_NumberAndId, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 238  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild_Number(number);

  00003	8b 45 08	 mov	 eax, DWORD PTR _number$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?SearchGuild_Number@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@H@Z ; CGuildClass::SearchGuild_Number
  0000f	89 45 08	 mov	 DWORD PTR _pNode$[ebp], eax

; 239  : 
; 240  : 	if ( pNode != NULL )

  00012	85 c0		 test	 eax, eax
  00014	74 40		 je	 SHORT $LN2@SearchGuil@2

; 241  : 	{
; 242  : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  00016	8d 70 2f	 lea	 esi, DWORD PTR [eax+47]
  00019	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  0001c	33 ff		 xor	 edi, edi
  0001e	8b ff		 npad	 2
$LL4@SearchGuil@2:

; 243  : 		{
; 244  : 			if ( strcmp(pNode->Names[i], name) == 0 )

  00020	8b d0		 mov	 edx, eax
  00022	8b ce		 mov	 ecx, esi
$LL11@SearchGuil@2:
  00024	8a 19		 mov	 bl, BYTE PTR [ecx]
  00026	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00028	75 1a		 jne	 SHORT $LN12@SearchGuil@2
  0002a	84 db		 test	 bl, bl
  0002c	74 12		 je	 SHORT $LN13@SearchGuil@2
  0002e	8a 59 01	 mov	 bl, BYTE PTR [ecx+1]
  00031	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00034	75 0e		 jne	 SHORT $LN12@SearchGuil@2
  00036	83 c1 02	 add	 ecx, 2
  00039	83 c2 02	 add	 edx, 2
  0003c	84 db		 test	 bl, bl
  0003e	75 e4		 jne	 SHORT $LL11@SearchGuil@2
$LN13@SearchGuil@2:
  00040	33 c9		 xor	 ecx, ecx
  00042	eb 05		 jmp	 SHORT $LN14@SearchGuil@2
$LN12@SearchGuil@2:
  00044	1b c9		 sbb	 ecx, ecx
  00046	83 d9 ff	 sbb	 ecx, -1
$LN14@SearchGuil@2:
  00049	85 c9		 test	 ecx, ecx
  0004b	74 12		 je	 SHORT $LN9@SearchGuil@2

; 241  : 	{
; 242  : 		for ( int i=0;i<MAX_USER_GUILD;i++)

  0004d	47		 inc	 edi
  0004e	83 c6 0b	 add	 esi, 11			; 0000000bH
  00051	83 ff 50	 cmp	 edi, 80			; 00000050H
  00054	7c ca		 jl	 SHORT $LL4@SearchGuil@2
$LN2@SearchGuil@2:
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi

; 247  : 			}
; 248  : 		}
; 249  : 	}
; 250  : 
; 251  : 	return NULL;

  00058	33 c0		 xor	 eax, eax
  0005a	5b		 pop	 ebx

; 252  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
$LN9@SearchGuil@2:

; 245  : 			{
; 246  : 				return pNode;

  0005f	8b 45 08	 mov	 eax, DWORD PTR _pNode$[ebp]
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx

; 252  : }

  00065	5d		 pop	 ebp
  00066	c2 08 00	 ret	 8
?SearchGuild_NumberAndId@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPAD@Z ENDP ; CGuildClass::SearchGuild_NumberAndId
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::find
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
$T163628 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::find, COMDAT
; _this$ = ecx

; 1423 : 		{	// find an element in mutable sequence that matches _Keyval

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1424 : 		iterator _Where = lower_bound(_Keyval);

  00006	8b 7d 0c	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
  00011	89 45 0c	 mov	 DWORD PTR __Where$[ebp], eax

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  00014	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00017	74 33		 je	 SHORT $LN3@find@2
  00019	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0001c	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00023	72 02		 jb	 SHORT $LN45@find@2
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
$LN45@find@2:
  00027	51		 push	 ecx
  00028	50		 push	 eax
  00029	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0002c	50		 push	 eax
  0002d	6a 00		 push	 0
  0002f	8b cf		 mov	 ecx, edi
  00031	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  00036	85 c0		 test	 eax, eax
  00038	78 12		 js	 SHORT $LN3@find@2
  0003a	8d 45 0c	 lea	 eax, DWORD PTR __Where$[ebp]
  0003d	8b 10		 mov	 edx, DWORD PTR [eax]
  0003f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00042	5f		 pop	 edi
  00043	89 10		 mov	 DWORD PTR [eax], edx
  00045	5e		 pop	 esi

; 1429 : 		}

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 08 00	 ret	 8
$LN3@find@2:

; 1425 : 		return (_Where == end()
; 1426 : 			|| _DEBUG_LT_PRED(this->comp,
; 1427 : 				_Keyval, this->_Key(_Where._Mynode()))
; 1428 : 					? end() : _Where);

  0004c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0004f	8d 45 fc	 lea	 eax, DWORD PTR $T163628[ebp]
  00052	89 4d fc	 mov	 DWORD PTR $T163628[ebp], ecx
  00055	8b 10		 mov	 edx, DWORD PTR [eax]
  00057	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0005a	5f		 pop	 edi
  0005b	89 10		 mov	 DWORD PTR [eax], edx
  0005d	5e		 pop	 esi

; 1429 : 		}

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::find
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T163925 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T163925[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase

; 792  : 		}

  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
PUBLIC	??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z PROC ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 150  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	56		 push	 esi
  00007	6a ff		 push	 -1
  00009	8b f1		 mov	 esi, ecx
  0000b	6a 00		 push	 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001b	50		 push	 eax
  0001c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0001f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	89 56 1c	 mov	 DWORD PTR [esi+28], edx

; 151  : 		}

  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z ENDP ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??$insert@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::insert<std::pair<int const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ??$insert@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
??$insert@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::insert<std::pair<int const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 760  : 		typename _STD tr1::enable_if<!_STD tr1::is_same<const_iterator,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 761  : 			typename _STD tr1::remove_reference<_Valty>::type>::value,
; 762  : 				iterator>::type
; 763  : 		insert(const_iterator _Where,
; 764  : 			_Valty&& _Val)
; 765  : 		{	// try to insert node with value _Val using _Where as a hint
; 766  : 		return (_Insert(_Where,
; 767  : 			this->_Buynode(_STD forward<_Valty>(_Val))));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	50		 push	 eax
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<int const ,_GUILD_INFO_STRUCT *> >
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00013	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	57		 push	 edi
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00020	8b c7		 mov	 eax, edi
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi

; 768  : 		}

  00024	5d		 pop	 ebp
  00025	c2 0c 00	 ret	 12			; 0000000cH
??$insert@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::insert<std::pair<int const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::destroy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::destroy, COMDAT
; _this$ = ecx

; 212  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 213  : 		_Destroy(_Ptr);

  00004	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  00007	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0000b	72 0b		 jb	 SHORT $LN22@destroy
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$LN22@destroy:
  00018	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00026	c6 06 00	 mov	 BYTE PTR [esi], 0
  00029	5e		 pop	 esi

; 214  : 		}

  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?destroy@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::destroy
_TEXT	ENDS
PUBLIC	??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z PROC ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 145  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	56		 push	 esi
  00007	6a ff		 push	 -1
  00009	8b f1		 mov	 esi, ecx
  0000b	6a 00		 push	 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001b	50		 push	 eax
  0001c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0001f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	89 56 1c	 mov	 DWORD PTR [esi+28], edx

; 146  : 		}

  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
??0?$_Pair_base@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z ENDP ; std::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::_Pair_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 592  : 		{	// construct from [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 593  : 		_Tidy();
; 594  : 		assign(_Ptr);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	8b c2		 mov	 eax, edx
  0000b	57		 push	 edi
  0000c	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00013	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001a	c6 06 00	 mov	 BYTE PTR [esi], 0
  0001d	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
$LL31@basic_stri@2:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $LL31@basic_stri@2
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 595  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::~map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T164567 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::~map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T164567[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
__ehhandler$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::~map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z$0
__ehfuncinfo$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
xdata$x	ENDS
;	COMDAT ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z
_TEXT	SEGMENT
__Where$165044 = -56					; size = 4
_this$GSCopy$ = -52					; size = 4
$T165031 = -48						; size = 4
$T153859 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_guildname$ = 8						; size = 4
?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z PROC ; CGuildClass::SearchGuild, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b f9		 mov	 edi, ecx
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _guildname$[ebp]

; 209  : 	std::map<std::string, _GUILD_INFO_STRUCT *>::iterator Itor = this->m_GuildMap.find(guildname);

  00030	33 db		 xor	 ebx, ebx
  00032	8b c1		 mov	 eax, ecx
  00034	89 7d cc	 mov	 DWORD PTR _this$GSCopy$[ebp], edi
  00037	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T153859[ebp+20], 15 ; 0000000fH
  0003e	89 5d e4	 mov	 DWORD PTR $T153859[ebp+16], ebx
  00041	88 5d d4	 mov	 BYTE PTR $T153859[ebp], bl
  00044	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL153@SearchGuil@3:
  00047	8a 10		 mov	 dl, BYTE PTR [eax]
  00049	40		 inc	 eax
  0004a	84 d2		 test	 dl, dl
  0004c	75 f9		 jne	 SHORT $LL153@SearchGuil@3
  0004e	2b c6		 sub	 eax, esi
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	8d 4d d4	 lea	 ecx, DWORD PTR $T153859[ebp]
  00055	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0005a	8d 45 d4	 lea	 eax, DWORD PTR $T153859[ebp]
  0005d	50		 push	 eax
  0005e	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00061	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00064	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
  00069	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  0006c	89 45 c8	 mov	 DWORD PTR __Where$165044[ebp], eax
  0006f	3b c6		 cmp	 eax, esi
  00071	74 46		 je	 SHORT $LN37@SearchGuil@3
  00073	8b 78 1c	 mov	 edi, DWORD PTR [eax+28]
  00076	83 c0 0c	 add	 eax, 12			; 0000000cH
  00079	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0007d	72 02		 jb	 SHORT $LN79@SearchGuil@3
  0007f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN79@SearchGuil@3:
  00081	8b 5d e4	 mov	 ebx, DWORD PTR $T153859[ebp+16]
  00084	8b d3		 mov	 edx, ebx
  00086	3b df		 cmp	 ebx, edi
  00088	72 02		 jb	 SHORT $LN86@SearchGuil@3
  0008a	8b d7		 mov	 edx, edi
$LN86@SearchGuil@3:
  0008c	83 7d e8 10	 cmp	 DWORD PTR $T153859[ebp+20], 16 ; 00000010H
  00090	8b 4d d4	 mov	 ecx, DWORD PTR $T153859[ebp]
  00093	73 03		 jae	 SHORT $LN97@SearchGuil@3
  00095	8d 4d d4	 lea	 ecx, DWORD PTR $T153859[ebp]
$LN97@SearchGuil@3:
  00098	52		 push	 edx
  00099	50		 push	 eax
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a3	85 c0		 test	 eax, eax
  000a5	75 0b		 jne	 SHORT $LN156@SearchGuil@3
  000a7	3b df		 cmp	 ebx, edi
  000a9	72 0e		 jb	 SHORT $LN37@SearchGuil@3
  000ab	3b df		 cmp	 ebx, edi
  000ad	0f 95 c0	 setne	 al
  000b0	85 c0		 test	 eax, eax
$LN156@SearchGuil@3:
  000b2	78 05		 js	 SHORT $LN37@SearchGuil@3
  000b4	8d 45 c8	 lea	 eax, DWORD PTR __Where$165044[ebp]
  000b7	eb 06		 jmp	 SHORT $LN38@SearchGuil@3
$LN37@SearchGuil@3:
  000b9	89 75 d0	 mov	 DWORD PTR $T165031[ebp], esi
  000bc	8d 45 d0	 lea	 eax, DWORD PTR $T165031[ebp]
$LN38@SearchGuil@3:
  000bf	83 7d e8 10	 cmp	 DWORD PTR $T153859[ebp+20], 16 ; 00000010H
  000c3	8b 30		 mov	 esi, DWORD PTR [eax]
  000c5	72 0c		 jb	 SHORT $LN123@SearchGuil@3
  000c7	8b 4d d4	 mov	 ecx, DWORD PTR $T153859[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d0	83 c4 04	 add	 esp, 4
$LN123@SearchGuil@3:

; 210  : 
; 211  : 	if( Itor == this->m_GuildMap.end() )

  000d3	8b 55 cc	 mov	 edx, DWORD PTR _this$GSCopy$[ebp]
  000d6	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T153859[ebp+20], 15 ; 0000000fH
  000dd	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T153859[ebp+16], 0
  000e4	c6 45 d4 00	 mov	 BYTE PTR $T153859[ebp], 0
  000e8	3b 72 10	 cmp	 esi, DWORD PTR [edx+16]
  000eb	75 04		 jne	 SHORT $LN1@SearchGuil@3

; 212  : 	{
; 213  : 		return NULL;

  000ed	33 c0		 xor	 eax, eax
  000ef	eb 03		 jmp	 SHORT $LN2@SearchGuil@3
$LN1@SearchGuil@3:

; 214  : 	}
; 215  : 
; 216  : 	return (*(Itor)).second;

  000f1	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
$LN2@SearchGuil@3:

; 217  : }

  000f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fe	59		 pop	 ecx
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
  00102	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00105	33 cd		 xor	 ecx, ebp
  00107	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T153859[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ENDP ; CGuildClass::SearchGuild
PUBLIC	?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z ; CGuildClass::AddMember
; Function compile flags: /Ogtp
;	COMDAT ?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_blank$ = 8						; size = 4
_guild_name$ = 8					; size = 4
_player_name$ = 12					; size = 4
_aIndex$ = 16						; size = 4
_totalcount$ = 20					; size = 4
_iGuildStatus$ = 24					; size = 4
_pServer$ = 28						; size = 4
?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z PROC ; CGuildClass::AddMember, COMDAT
; _this$ = ecx

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 296  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(guild_name);

  00004	8b 45 08	 mov	 eax, DWORD PTR _guild_name$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx
  0000b	50		 push	 eax
  0000c	89 7d fc	 mov	 DWORD PTR _this$[ebp], edi
  0000f	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00014	8b f0		 mov	 esi, eax

; 297  : 	int blank = -1;

  00016	c7 45 08 ff ff
	ff ff		 mov	 DWORD PTR _blank$[ebp], -1

; 298  : 
; 299  : 	if ( pNode == NULL )

  0001d	85 f6		 test	 esi, esi
  0001f	75 08		 jne	 SHORT $LN14@AddMember@2
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi

; 361  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c2 18 00	 ret	 24			; 00000018H
$LN14@AddMember@2:
  00029	53		 push	 ebx

; 300  : 	{
; 301  : 		return NULL;
; 302  : 	}
; 303  : 
; 304  : 	this->BuildMemberTotal(pNode);

  0002a	56		 push	 esi
  0002b	8b cf		 mov	 ecx, edi
  0002d	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal

; 305  : 
; 306  : 	if ( strcmp(player_name, pNode->Names[0] ) == 0 )

  00032	8b 5d 0c	 mov	 ebx, DWORD PTR _player_name$[ebp]
  00035	8d 4e 2f	 lea	 ecx, DWORD PTR [esi+47]
  00038	8b c3		 mov	 eax, ebx
  0003a	8d 9b 00 00 00
	00		 npad	 6
$LL22@AddMember@2:
  00040	8a 10		 mov	 dl, BYTE PTR [eax]
  00042	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00044	75 1a		 jne	 SHORT $LN23@AddMember@2
  00046	84 d2		 test	 dl, dl
  00048	74 12		 je	 SHORT $LN24@AddMember@2
  0004a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0004d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00050	75 0e		 jne	 SHORT $LN23@AddMember@2
  00052	83 c0 02	 add	 eax, 2
  00055	83 c1 02	 add	 ecx, 2
  00058	84 d2		 test	 dl, dl
  0005a	75 e4		 jne	 SHORT $LL22@AddMember@2
$LN24@AddMember@2:
  0005c	33 c0		 xor	 eax, eax
  0005e	eb 05		 jmp	 SHORT $LN25@AddMember@2
$LN23@AddMember@2:
  00060	1b c0		 sbb	 eax, eax
  00062	83 d8 ff	 sbb	 eax, -1
$LN25@AddMember@2:
  00065	85 c0		 test	 eax, eax
  00067	75 07		 jne	 SHORT $LN13@AddMember@2

; 307  : 	{
; 308  : 		blank = 0;

  00069	33 ff		 xor	 edi, edi

; 309  : 	}
; 310  : 	else

  0006b	e9 ac 00 00 00	 jmp	 $LN3@AddMember@2
$LN13@AddMember@2:

; 311  : 	{
; 312  : 		for ( int i = 1;i<MAX_USER_GUILD ; i++)

  00070	bf 01 00 00 00	 mov	 edi, 1
  00075	8d 5e 3a	 lea	 ebx, DWORD PTR [esi+58]
  00078	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL11@AddMember@2:

; 313  : 		{
; 314  : 			if ( pNode->Use[i] == TRUE )

  00080	80 bc 3e 40 04
	00 00 01	 cmp	 BYTE PTR [esi+edi+1088], 1
  00088	75 70		 jne	 SHORT $LN8@AddMember@2

; 315  : 			{
; 316  : 				if ( strcmp(pNode->Names[i], player_name) == 0 )

  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _player_name$[ebp]
  0008d	8b c3		 mov	 eax, ebx
  0008f	90		 npad	 1
$LL26@AddMember@2:
  00090	8a 10		 mov	 dl, BYTE PTR [eax]
  00092	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00094	75 1a		 jne	 SHORT $LN27@AddMember@2
  00096	84 d2		 test	 dl, dl
  00098	74 12		 je	 SHORT $LN28@AddMember@2
  0009a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0009d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000a0	75 0e		 jne	 SHORT $LN27@AddMember@2
  000a2	83 c0 02	 add	 eax, 2
  000a5	83 c1 02	 add	 ecx, 2
  000a8	84 d2		 test	 dl, dl
  000aa	75 e4		 jne	 SHORT $LL26@AddMember@2
$LN28@AddMember@2:
  000ac	33 c0		 xor	 eax, eax
  000ae	eb 05		 jmp	 SHORT $LN29@AddMember@2
$LN27@AddMember@2:
  000b0	1b c0		 sbb	 eax, eax
  000b2	83 d8 ff	 sbb	 eax, -1
$LN29@AddMember@2:
  000b5	85 c0		 test	 eax, eax
  000b7	75 4a		 jne	 SHORT $LN10@AddMember@2

; 317  : 				{
; 318  : 					if ( aIndex != -1 )

  000b9	8b 45 10	 mov	 eax, DWORD PTR _aIndex$[ebp]
  000bc	83 f8 ff	 cmp	 eax, -1
  000bf	74 25		 je	 SHORT $LN6@AddMember@2

; 319  : 					{
; 320  : 						pNode->Use[i] = TRUE;
; 321  : 						pNode->Index[i] = aIndex;
; 322  : 						pNode->pServer[i] = pServer;

  000c1	8a 4d 1c	 mov	 cl, BYTE PTR _pServer$[ebp]
  000c4	c6 84 37 40 04
	00 00 01	 mov	 BYTE PTR [edi+esi+1088], 1
  000cc	66 89 84 7e a0
	03 00 00	 mov	 WORD PTR [esi+edi*2+928], ax
  000d4	88 8c 37 90 04
	00 00		 mov	 BYTE PTR [edi+esi+1168], cl

; 323  : 						pNode->GuildStatus[i] = G_MASTER;

  000db	c7 84 be d8 05
	00 00 80 00 00
	00		 mov	 DWORD PTR [esi+edi*4+1496], 128 ; 00000080H
$LN6@AddMember@2:

; 324  : 					}
; 325  : 
; 326  : 					this->BuildMemberTotal(pNode);

  000e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	56		 push	 esi
  000ea	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
$LN32@AddMember@2:

; 327  : 					return FALSE;

  000ef	5b		 pop	 ebx
  000f0	5f		 pop	 edi
  000f1	33 c0		 xor	 eax, eax
  000f3	5e		 pop	 esi

; 361  : }

  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 18 00	 ret	 24			; 00000018H
$LN8@AddMember@2:

; 328  : 				}
; 329  : 			}
; 330  : 			else if ( blank < 0 )

  000fa	83 7d 08 00	 cmp	 DWORD PTR _blank$[ebp], 0
  000fe	7d 03		 jge	 SHORT $LN10@AddMember@2

; 331  : 			{
; 332  : 				blank = i;

  00100	89 7d 08	 mov	 DWORD PTR _blank$[ebp], edi
$LN10@AddMember@2:

; 311  : 	{
; 312  : 		for ( int i = 1;i<MAX_USER_GUILD ; i++)

  00103	47		 inc	 edi
  00104	83 c3 0b	 add	 ebx, 11			; 0000000bH
  00107	83 ff 50	 cmp	 edi, 80			; 00000050H
  0010a	0f 8c 70 ff ff
	ff		 jl	 $LL11@AddMember@2

; 333  : 			}
; 334  : 		}
; 335  : 	}
; 336  : 
; 337  : 	if (blank < 0 )

  00110	83 7d 08 00	 cmp	 DWORD PTR _blank$[ebp], 0

; 338  : 	{
; 339  : 		return NULL;

  00114	7c d9		 jl	 SHORT $LN32@AddMember@2

; 333  : 			}
; 334  : 		}
; 335  : 	}
; 336  : 
; 337  : 	if (blank < 0 )

  00116	8b 5d 0c	 mov	 ebx, DWORD PTR _player_name$[ebp]
  00119	8b 7d 08	 mov	 edi, DWORD PTR _blank$[ebp]
$LN3@AddMember@2:

; 340  : 	}
; 341  : 
; 342  : 	strcpy(pNode->Names[blank], player_name);

  0011c	8b d7		 mov	 edx, edi
  0011e	6b d2 0b	 imul	 edx, 11			; 0000000bH
  00121	8d 54 32 2f	 lea	 edx, DWORD PTR [edx+esi+47]
  00125	8b c3		 mov	 eax, ebx
  00127	2b d3		 sub	 edx, ebx
  00129	8d a4 24 00 00
	00 00		 npad	 7
$LL17@AddMember@2:
  00130	8a 08		 mov	 cl, BYTE PTR [eax]
  00132	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00135	40		 inc	 eax
  00136	84 c9		 test	 cl, cl
  00138	75 f6		 jne	 SHORT $LL17@AddMember@2

; 343  : 	pNode->Use[blank] = TRUE;
; 344  : 	pNode->pServer[blank] = pServer;

  0013a	8a 45 1c	 mov	 al, BYTE PTR _pServer$[ebp]

; 345  : 	pNode->GuildStatus[blank] = iGuildStatus;

  0013d	8b 4d 18	 mov	 ecx, DWORD PTR _iGuildStatus$[ebp]
  00140	88 84 37 90 04
	00 00		 mov	 BYTE PTR [edi+esi+1168], al

; 346  : 
; 347  : 	if ( aIndex != -1 )

  00147	8b 45 10	 mov	 eax, DWORD PTR _aIndex$[ebp]
  0014a	c6 84 37 40 04
	00 00 01	 mov	 BYTE PTR [edi+esi+1088], 1
  00152	89 8c be d8 05
	00 00		 mov	 DWORD PTR [esi+edi*4+1496], ecx
  00159	83 f8 ff	 cmp	 eax, -1
  0015c	74 0b		 je	 SHORT $LN2@AddMember@2

; 348  : 	{
; 349  : 		pNode->Index[blank] = aIndex;

  0015e	66 89 84 7e a0
	03 00 00	 mov	 WORD PTR [esi+edi*2+928], ax

; 350  : 		pNode->Count++;

  00166	fe 46 2d	 inc	 BYTE PTR [esi+45]
$LN2@AddMember@2:

; 351  : 	}
; 352  : 
; 353  : 	if ( totalcount > 0 )

  00169	8b 45 14	 mov	 eax, DWORD PTR _totalcount$[ebp]
  0016c	85 c0		 test	 eax, eax
  0016e	7e 03		 jle	 SHORT $LN1@AddMember@2

; 354  : 	{
; 355  : 		pNode->TotalCount = totalcount;

  00170	88 46 2e	 mov	 BYTE PTR [esi+46], al
$LN1@AddMember@2:

; 356  : 	}
; 357  : 
; 358  : 	this->BuildMemberTotal(pNode);

  00173	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00176	56		 push	 esi
  00177	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
  0017c	5b		 pop	 ebx
  0017d	5f		 pop	 edi

; 359  : 
; 360  : 	return pNode;

  0017e	8b c6		 mov	 eax, esi
  00180	5e		 pop	 esi

; 361  : }

  00181	8b e5		 mov	 esp, ebp
  00183	5d		 pop	 ebp
  00184	c2 18 00	 ret	 24			; 00000018H
?AddMember@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD0HHHH@Z ENDP ; CGuildClass::AddMember
_TEXT	ENDS
PUBLIC	?GetGuildMemberStatus@CGuildClass@@QAEHPAD0@Z	; CGuildClass::GetGuildMemberStatus
; Function compile flags: /Ogtp
;	COMDAT ?GetGuildMemberStatus@CGuildClass@@QAEHPAD0@Z
_TEXT	SEGMENT
_iKey$ = 8						; size = 4
_szGuildName$ = 8					; size = 4
_szMemberName$ = 12					; size = 4
?GetGuildMemberStatus@CGuildClass@@QAEHPAD0@Z PROC	; CGuildClass::GetGuildMemberStatus, COMDAT
; _this$ = ecx

; 432  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 433  : 	int iGuildStatus = 0;
; 434  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(szGuildName);

  00003	8b 45 08	 mov	 eax, DWORD PTR _szGuildName$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

; 435  : 	int iKey = -1;

  0000c	c7 45 08 ff ff
	ff ff		 mov	 DWORD PTR _iKey$[ebp], -1

; 436  : 
; 437  : 	if ( pNode == NULL )

  00013	85 c0		 test	 eax, eax
  00015	75 07		 jne	 SHORT $LN7@GetGuildMe
$LN17@GetGuildMe:

; 438  : 	{
; 439  : 		return -1;

  00017	83 c8 ff	 or	 eax, -1

; 460  : }

  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
$LN7@GetGuildMe:
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi

; 440  : 	}
; 441  : 
; 442  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00021	33 f6		 xor	 esi, esi
  00023	8d 78 2f	 lea	 edi, DWORD PTR [eax+47]
$LL6@GetGuildMe:

; 443  : 	{
; 444  : 		if ( pNode->Use[n] == TRUE )

  00026	80 bc 30 40 04
	00 00 01	 cmp	 BYTE PTR [eax+esi+1088], 1
  0002e	75 31		 jne	 SHORT $LN5@GetGuildMe

; 445  : 		{
; 446  : 			if ( strcmp(pNode->Names[n], szMemberName) == 0 )

  00030	8b 55 0c	 mov	 edx, DWORD PTR _szMemberName$[ebp]
  00033	8b cf		 mov	 ecx, edi
$LL12@GetGuildMe:
  00035	8a 19		 mov	 bl, BYTE PTR [ecx]
  00037	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00039	75 1a		 jne	 SHORT $LN13@GetGuildMe
  0003b	84 db		 test	 bl, bl
  0003d	74 12		 je	 SHORT $LN14@GetGuildMe
  0003f	8a 59 01	 mov	 bl, BYTE PTR [ecx+1]
  00042	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00045	75 0e		 jne	 SHORT $LN13@GetGuildMe
  00047	83 c1 02	 add	 ecx, 2
  0004a	83 c2 02	 add	 edx, 2
  0004d	84 db		 test	 bl, bl
  0004f	75 e4		 jne	 SHORT $LL12@GetGuildMe
$LN14@GetGuildMe:
  00051	33 c9		 xor	 ecx, ecx
  00053	eb 05		 jmp	 SHORT $LN15@GetGuildMe
$LN13@GetGuildMe:
  00055	1b c9		 sbb	 ecx, ecx
  00057	83 d9 ff	 sbb	 ecx, -1
$LN15@GetGuildMe:
  0005a	85 c9		 test	 ecx, ecx
  0005c	75 03		 jne	 SHORT $LN5@GetGuildMe

; 447  : 			{
; 448  : 				iKey = n;

  0005e	89 75 08	 mov	 DWORD PTR _iKey$[ebp], esi
$LN5@GetGuildMe:

; 440  : 	}
; 441  : 
; 442  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00061	46		 inc	 esi
  00062	83 c7 0b	 add	 edi, 11			; 0000000bH
  00065	83 fe 50	 cmp	 esi, 80			; 00000050H
  00068	7c bc		 jl	 SHORT $LL6@GetGuildMe

; 449  : 			}
; 450  : 		}
; 451  : 	}
; 452  : 
; 453  : 	if ( iKey < 0 )

  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _iKey$[ebp]
  0006d	5f		 pop	 edi
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
  00070	85 c9		 test	 ecx, ecx

; 454  : 	{
; 455  : 		return -1;

  00072	78 a3		 js	 SHORT $LN17@GetGuildMe

; 456  : 	}
; 457  : 
; 458  : 	iGuildStatus = pNode->GuildStatus[iKey];
; 459  : 	return iGuildStatus;

  00074	8b 84 88 d8 05
	00 00		 mov	 eax, DWORD PTR [eax+ecx*4+1496]

; 460  : }

  0007b	5d		 pop	 ebp
  0007c	c2 08 00	 ret	 8
?GetGuildMemberStatus@CGuildClass@@QAEHPAD0@Z ENDP	; CGuildClass::GetGuildMemberStatus
_TEXT	ENDS
PUBLIC	??_C@_0CP@HIDOPNM@?$EASetGuildMemberStatus?$CI?$CJ?5error?9L2@ ; `string'
PUBLIC	??_C@_0P@PMCIECBD@GuildClass?4cpp?$AA@		; `string'
PUBLIC	?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z	; CGuildClass::SetGuildMemberStatus
EXTRN	?GCGuildViewportNowPaint@@YAXHPADPAEH@Z:PROC	; GCGuildViewportNowPaint
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	?gObjIsConnectedGP@@YAHH@Z:PROC			; gObjIsConnectedGP
;	COMDAT ??_C@_0CP@HIDOPNM@?$EASetGuildMemberStatus?$CI?$CJ?5error?9L2@
CONST	SEGMENT
??_C@_0CP@HIDOPNM@?$EASetGuildMemberStatus?$CI?$CJ?5error?9L2@ DB '@SetGu'
	DB	'ildMemberStatus() error-L2 : Index %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMCIECBD@GuildClass?4cpp?$AA@
CONST	SEGMENT
??_C@_0P@PMCIECBD@GuildClass?4cpp?$AA@ DB 'GuildClass.cpp', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z
_TEXT	SEGMENT
_iKey$ = 8						; size = 4
_szGuildName$ = 8					; size = 4
_szMemberName$ = 12					; size = 4
_iGuildStatus$ = 16					; size = 4
?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z PROC	; CGuildClass::SetGuildMemberStatus, COMDAT
; _this$ = ecx

; 465  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 466  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(szGuildName);

  00003	8b 45 08	 mov	 eax, DWORD PTR _szGuildName$[ebp]
  00006	57		 push	 edi
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  0000d	8b f8		 mov	 edi, eax

; 467  : 	int iKey = -1;

  0000f	83 c8 ff	 or	 eax, -1
  00012	89 45 08	 mov	 DWORD PTR _iKey$[ebp], eax

; 468  : 
; 469  : 	if ( pNode == NULL )

  00015	85 ff		 test	 edi, edi

; 470  : 	{
; 471  : 		return -1;

  00017	0f 84 1d 01 00
	00		 je	 $LN12@SetGuildMe

; 472  : 	}
; 473  : 
; 474  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	33 f6		 xor	 esi, esi
  00021	8d 5f 2f	 lea	 ebx, DWORD PTR [edi+47]
$LL10@SetGuildMe:

; 475  : 	{
; 476  : 		if ( pNode->Use[n] == TRUE )

  00024	80 bc 37 40 04
	00 00 01	 cmp	 BYTE PTR [edi+esi+1088], 1
  0002c	75 31		 jne	 SHORT $LN9@SetGuildMe

; 477  : 		{
; 478  : 			if ( strcmp(pNode->Names[n], szMemberName) == 0 )

  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _szMemberName$[ebp]
  00031	8b c3		 mov	 eax, ebx
$LL19@SetGuildMe:
  00033	8a 10		 mov	 dl, BYTE PTR [eax]
  00035	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00037	75 1a		 jne	 SHORT $LN20@SetGuildMe
  00039	84 d2		 test	 dl, dl
  0003b	74 12		 je	 SHORT $LN21@SetGuildMe
  0003d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00040	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00043	75 0e		 jne	 SHORT $LN20@SetGuildMe
  00045	83 c0 02	 add	 eax, 2
  00048	83 c1 02	 add	 ecx, 2
  0004b	84 d2		 test	 dl, dl
  0004d	75 e4		 jne	 SHORT $LL19@SetGuildMe
$LN21@SetGuildMe:
  0004f	33 c0		 xor	 eax, eax
  00051	eb 05		 jmp	 SHORT $LN22@SetGuildMe
$LN20@SetGuildMe:
  00053	1b c0		 sbb	 eax, eax
  00055	83 d8 ff	 sbb	 eax, -1
$LN22@SetGuildMe:
  00058	85 c0		 test	 eax, eax
  0005a	75 03		 jne	 SHORT $LN9@SetGuildMe

; 479  : 			{
; 480  : 				iKey = n;

  0005c	89 75 08	 mov	 DWORD PTR _iKey$[ebp], esi
$LN9@SetGuildMe:

; 472  : 	}
; 473  : 
; 474  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  0005f	46		 inc	 esi
  00060	83 c3 0b	 add	 ebx, 11			; 0000000bH
  00063	83 fe 50	 cmp	 esi, 80			; 00000050H
  00066	7c bc		 jl	 SHORT $LL10@SetGuildMe

; 481  : 			}
; 482  : 		}
; 483  : 	}
; 484  : 
; 485  : 	if ( iKey < 0 )

  00068	83 7d 08 00	 cmp	 DWORD PTR _iKey$[ebp], 0

; 486  : 	{
; 487  : 		return 0;

  0006c	7c 46		 jl	 SHORT $LN18@SetGuildMe

; 488  : 	}
; 489  : 	
; 490  : 	pNode->GuildStatus[iKey] = iGuildStatus;

  0006e	8b 75 08	 mov	 esi, DWORD PTR _iKey$[ebp]
  00071	8b 5d 10	 mov	 ebx, DWORD PTR _iGuildStatus$[ebp]
  00074	89 9c b7 d8 05
	00 00		 mov	 DWORD PTR [edi+esi*4+1496], ebx

; 491  : 
; 492  : 	if ( pNode->Index[iKey] > 0 )

  0007b	0f b7 84 77 a0
	03 00 00	 movzx	 eax, WORD PTR [edi+esi*2+928]
  00083	66 85 c0	 test	 ax, ax
  00086	0f 8e a7 00 00
	00		 jle	 $LN1@SetGuildMe

; 493  : 	{
; 494  : 		if ( gObjIsConnectedGP(pNode->Index[iKey]) == FALSE )

  0008c	0f bf c8	 movsx	 ecx, ax
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  00095	83 c4 04	 add	 esp, 4
  00098	85 c0		 test	 eax, eax
  0009a	75 21		 jne	 SHORT $LN3@SetGuildMe

; 495  : 		{
; 496  : 			LogAdd(LOG_BLACK, "@SetGuildMemberStatus() error-L2 : Index %s %d", __FILE__, __LINE__);

  0009c	68 f0 01 00 00	 push	 496			; 000001f0H
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PMCIECBD@GuildClass?4cpp?$AA@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@HIDOPNM@?$EASetGuildMemberStatus?$CI?$CJ?5error?9L2@
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  000b1	83 c4 10	 add	 esp, 16			; 00000010H
$LN18@SetGuildMe:

; 497  : 			return false;

  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	33 c0		 xor	 eax, eax
  000b8	5f		 pop	 edi

; 516  : }

  000b9	5d		 pop	 ebp
  000ba	c2 0c 00	 ret	 12			; 0000000cH
$LN3@SetGuildMe:

; 498  : 		}
; 499  : 
; 500  : 		if ( !OBJMAX_RANGE(pNode->Index[iKey]) )

  000bd	0f b7 84 77 a0
	03 00 00	 movzx	 eax, WORD PTR [edi+esi*2+928]
  000c5	66 85 c0	 test	 ax, ax
  000c8	78 ea		 js	 SHORT $LN18@SetGuildMe
  000ca	33 c9		 xor	 ecx, ecx
  000cc	ba e7 1c 00 00	 mov	 edx, 7399		; 00001ce7H
  000d1	66 3b c2	 cmp	 ax, dx
  000d4	0f 9e c1	 setle	 cl
  000d7	85 c9		 test	 ecx, ecx

; 501  : 		{
; 502  : 			return 0;

  000d9	74 d9		 je	 SHORT $LN18@SetGuildMe

; 503  : 		}
; 504  : 		
; 505  : 		LPOBJ lpObj = &gObj[pNode->Index[iKey]];
; 506  : 
; 507  : 		if ( strcmp(lpObj->Name, szMemberName) == 0 )

  000db	8b 4d 0c	 mov	 ecx, DWORD PTR _szMemberName$[ebp]
  000de	0f bf f0	 movsx	 esi, ax
  000e1	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  000e7	81 c6 00 00 00
	00		 add	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000ed	8d 46 6f	 lea	 eax, DWORD PTR [esi+111]
$LL23@SetGuildMe:
  000f0	8a 10		 mov	 dl, BYTE PTR [eax]
  000f2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000f4	75 1a		 jne	 SHORT $LN24@SetGuildMe
  000f6	84 d2		 test	 dl, dl
  000f8	74 12		 je	 SHORT $LN25@SetGuildMe
  000fa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000fd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00100	75 0e		 jne	 SHORT $LN24@SetGuildMe
  00102	83 c0 02	 add	 eax, 2
  00105	83 c1 02	 add	 ecx, 2
  00108	84 d2		 test	 dl, dl
  0010a	75 e4		 jne	 SHORT $LL23@SetGuildMe
$LN25@SetGuildMe:
  0010c	33 c0		 xor	 eax, eax
  0010e	eb 05		 jmp	 SHORT $LN26@SetGuildMe
$LN24@SetGuildMe:
  00110	1b c0		 sbb	 eax, eax
  00112	83 d8 ff	 sbb	 eax, -1
$LN26@SetGuildMe:
  00115	85 c0		 test	 eax, eax
  00117	75 1a		 jne	 SHORT $LN1@SetGuildMe

; 508  : 		{
; 509  : 			lpObj->GuildStatus = iGuildStatus;
; 510  : 			GCGuildViewportNowPaint(lpObj->m_Index, lpObj->GuildName, 0, 0);

  00119	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0011b	50		 push	 eax
  0011c	50		 push	 eax
  0011d	8d 86 b8 02 00
	00		 lea	 eax, DWORD PTR [esi+696]
  00123	50		 push	 eax
  00124	51		 push	 ecx
  00125	89 9e c4 02 00
	00		 mov	 DWORD PTR [esi+708], ebx
  0012b	e8 00 00 00 00	 call	 ?GCGuildViewportNowPaint@@YAXHPADPAEH@Z ; GCGuildViewportNowPaint
  00130	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@SetGuildMe:

; 511  : 		}
; 512  : 
; 513  : 	}
; 514  : 
; 515  : 	return true;

  00133	5e		 pop	 esi
  00134	b8 01 00 00 00	 mov	 eax, 1
  00139	5b		 pop	 ebx
$LN12@SetGuildMe:
  0013a	5f		 pop	 edi

; 516  : }

  0013b	5d		 pop	 ebp
  0013c	c2 0c 00	 ret	 12			; 0000000cH
?SetGuildMemberStatus@CGuildClass@@QAEHPAD0H@Z ENDP	; CGuildClass::SetGuildMemberStatus
_TEXT	ENDS
PUBLIC	?GetGuildType@CGuildClass@@QAEHPAD@Z		; CGuildClass::GetGuildType
; Function compile flags: /Ogtp
;	COMDAT ?GetGuildType@CGuildClass@@QAEHPAD@Z
_TEXT	SEGMENT
_szGuildName$ = 8					; size = 4
?GetGuildType@CGuildClass@@QAEHPAD@Z PROC		; CGuildClass::GetGuildType, COMDAT
; _this$ = ecx

; 521  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 522  : 	int iGuildType = 0;
; 523  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(szGuildName);

  00003	8b 45 08	 mov	 eax, DWORD PTR _szGuildName$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

; 524  : 
; 525  : 	if (pNode == NULL )

  0000c	85 c0		 test	 eax, eax
  0000e	75 07		 jne	 SHORT $LN1@GetGuildTy

; 526  : 	{
; 527  : 		return -1;

  00010	83 c8 ff	 or	 eax, -1

; 532  : }

  00013	5d		 pop	 ebp
  00014	c2 04 00	 ret	 4
$LN1@GetGuildTy:

; 528  : 	}
; 529  : 
; 530  : 	iGuildType = pNode->btGuildType;
; 531  : 	return iGuildType;

  00017	0f b6 80 18 07
	00 00		 movzx	 eax, BYTE PTR [eax+1816]

; 532  : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?GetGuildType@CGuildClass@@QAEHPAD@Z ENDP		; CGuildClass::GetGuildType
_TEXT	ENDS
PUBLIC	??_C@_0CG@LGPJFFA@SetGuildType?$CI?$CJ?5error?9L2?5?3?5Index?5@ ; `string'
PUBLIC	?SetGuildType@CGuildClass@@QAEHPADH@Z		; CGuildClass::SetGuildType
;	COMDAT ??_C@_0CG@LGPJFFA@SetGuildType?$CI?$CJ?5error?9L2?5?3?5Index?5@
CONST	SEGMENT
??_C@_0CG@LGPJFFA@SetGuildType?$CI?$CJ?5error?9L2?5?3?5Index?5@ DB 'SetGu'
	DB	'ildType() error-L2 : Index %s %d', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?SetGuildType@CGuildClass@@QAEHPADH@Z
_TEXT	SEGMENT
_szGuildName$ = 8					; size = 4
_iGuildType$ = 12					; size = 4
?SetGuildType@CGuildClass@@QAEHPADH@Z PROC		; CGuildClass::SetGuildType, COMDAT
; _this$ = ecx

; 536  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 537  : 	
; 538  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(szGuildName);

  00003	8b 45 08	 mov	 eax, DWORD PTR _szGuildName$[ebp]
  00006	53		 push	 ebx
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  0000d	8b d8		 mov	 ebx, eax

; 539  : 
; 540  : 	if (pNode == NULL )

  0000f	85 db		 test	 ebx, ebx
  00011	75 05		 jne	 SHORT $LN8@SetGuildTy
  00013	5b		 pop	 ebx

; 571  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
$LN8@SetGuildTy:

; 541  : 	{
; 542  : 		return FALSE;
; 543  : 	}
; 544  : 
; 545  : 	pNode->btGuildType = iGuildType;

  00018	8a 4d 0c	 mov	 cl, BYTE PTR _iGuildType$[ebp]
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	88 8b 18 07 00
	00		 mov	 BYTE PTR [ebx+1816], cl

; 546  : 
; 547  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00023	33 f6		 xor	 esi, esi
  00025	8d bb a0 03 00
	00		 lea	 edi, DWORD PTR [ebx+928]
  0002b	eb 03 8d 49 00	 npad	 5
$LL16@SetGuildTy:

; 548  : 	{
; 549  : 		if ( pNode->Use[n] == TRUE )

  00030	80 bc 33 40 04
	00 00 01	 cmp	 BYTE PTR [ebx+esi+1088], 1
  00038	75 6c		 jne	 SHORT $LN6@SetGuildTy

; 550  : 		{
; 551  : 			if ( pNode->Index[n] > 0 )

  0003a	0f b7 07	 movzx	 eax, WORD PTR [edi]
  0003d	66 85 c0	 test	 ax, ax
  00040	7e 64		 jle	 SHORT $LN6@SetGuildTy

; 552  : 			{
; 553  : 				if ( gObjIsConnectedGP(pNode->Index[n]) == FALSE )

  00042	0f bf d0	 movsx	 edx, ax
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 ?gObjIsConnectedGP@@YAHH@Z ; gObjIsConnectedGP
  0004b	83 c4 04	 add	 esp, 4
  0004e	85 c0		 test	 eax, eax
  00050	75 17		 jne	 SHORT $LN2@SetGuildTy

; 554  : 				{
; 555  : 					LogAdd(LOG_BLACK, "SetGuildType() error-L2 : Index %s %d", __FILE__, __LINE__);

  00052	68 2b 02 00 00	 push	 555			; 0000022bH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PMCIECBD@GuildClass?4cpp?$AA@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@LGPJFFA@SetGuildType?$CI?$CJ?5error?9L2?5?3?5Index?5@
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 556  : 					continue;

  00067	eb 3a		 jmp	 SHORT $LN17@SetGuildTy
$LN2@SetGuildTy:

; 557  : 				}
; 558  : 
; 559  : 				if ( !OBJMAX_RANGE(pNode->Index[n]) )

  00069	0f b7 07	 movzx	 eax, WORD PTR [edi]
  0006c	66 85 c0	 test	 ax, ax
  0006f	78 35		 js	 SHORT $LN6@SetGuildTy
  00071	33 d2		 xor	 edx, edx
  00073	b9 e7 1c 00 00	 mov	 ecx, 7399		; 00001ce7H
  00078	66 3b c1	 cmp	 ax, cx
  0007b	0f 9e c2	 setle	 dl
  0007e	8b ca		 mov	 ecx, edx
  00080	85 c9		 test	 ecx, ecx
  00082	74 22		 je	 SHORT $LN6@SetGuildTy

; 560  : 				{
; 561  : 					continue;
; 562  : 				}
; 563  : 
; 564  : 				LPOBJ lpObj = &gObj[pNode->Index[n]];

  00084	98		 cwde
  00085	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  0008b	05 00 00 00 00	 add	 eax, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 565  : 				GCGuildViewportNowPaint(lpObj->m_Index, lpObj->GuildName, 0, 0);

  00090	8b 10		 mov	 edx, DWORD PTR [eax]
  00092	6a 00		 push	 0
  00094	6a 00		 push	 0
  00096	8d 88 b8 02 00
	00		 lea	 ecx, DWORD PTR [eax+696]
  0009c	51		 push	 ecx
  0009d	52		 push	 edx
  0009e	e8 00 00 00 00	 call	 ?GCGuildViewportNowPaint@@YAXHPADPAEH@Z ; GCGuildViewportNowPaint
$LN17@SetGuildTy:
  000a3	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@SetGuildTy:

; 546  : 
; 547  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  000a6	46		 inc	 esi
  000a7	83 c7 02	 add	 edi, 2
  000aa	83 fe 50	 cmp	 esi, 80			; 00000050H
  000ad	7c 81		 jl	 SHORT $LL16@SetGuildTy

; 566  : 			}
; 567  : 		}
; 568  : 	}
; 569  : 
; 570  : 	return TRUE;

  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	b8 01 00 00 00	 mov	 eax, 1
  000b6	5b		 pop	 ebx

; 571  : }

  000b7	5d		 pop	 ebp
  000b8	c2 08 00	 ret	 8
?SetGuildType@CGuildClass@@QAEHPADH@Z ENDP		; CGuildClass::SetGuildType
_TEXT	ENDS
PUBLIC	?DelMember@CGuildClass@@QAEHPAD0@Z		; CGuildClass::DelMember
; Function compile flags: /Ogtp
;	COMDAT ?DelMember@CGuildClass@@QAEHPAD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_guild_name$ = 8					; size = 4
_player_name$ = 12					; size = 4
?DelMember@CGuildClass@@QAEHPAD0@Z PROC			; CGuildClass::DelMember, COMDAT
; _this$ = ecx

; 601  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 602  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(guild_name);

  00004	8b 45 08	 mov	 eax, DWORD PTR _guild_name$[ebp]
  00007	57		 push	 edi
  00008	50		 push	 eax
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00011	8b f8		 mov	 edi, eax

; 603  : 
; 604  : 	if (pNode == NULL )

  00013	85 ff		 test	 edi, edi
  00015	75 07		 jne	 SHORT $LN6@DelMember
  00017	5f		 pop	 edi

; 624  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
$LN6@DelMember:
  0001e	53		 push	 ebx
  0001f	56		 push	 esi

; 605  : 	{
; 606  : 		return FALSE;
; 607  : 	}
; 608  : 
; 609  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00020	33 f6		 xor	 esi, esi
  00022	8d 5f 2f	 lea	 ebx, DWORD PTR [edi+47]
$LL5@DelMember:

; 610  : 	{
; 611  : 		if ( pNode->Use[n] == TRUE )

  00025	80 bc 37 40 04
	00 00 01	 cmp	 BYTE PTR [edi+esi+1088], 1
  0002d	75 2e		 jne	 SHORT $LN4@DelMember

; 612  : 		{
; 613  : 			if ( strcmp(pNode->Names[n], player_name ) == 0 )

  0002f	8b 55 0c	 mov	 edx, DWORD PTR _player_name$[ebp]
  00032	8b cb		 mov	 ecx, ebx
$LL12@DelMember:
  00034	8a 01		 mov	 al, BYTE PTR [ecx]
  00036	3a 02		 cmp	 al, BYTE PTR [edx]
  00038	75 1a		 jne	 SHORT $LN13@DelMember
  0003a	84 c0		 test	 al, al
  0003c	74 12		 je	 SHORT $LN14@DelMember
  0003e	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00041	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00044	75 0e		 jne	 SHORT $LN13@DelMember
  00046	83 c1 02	 add	 ecx, 2
  00049	83 c2 02	 add	 edx, 2
  0004c	84 c0		 test	 al, al
  0004e	75 e4		 jne	 SHORT $LL12@DelMember
$LN14@DelMember:
  00050	33 c0		 xor	 eax, eax
  00052	eb 05		 jmp	 SHORT $LN15@DelMember
$LN13@DelMember:
  00054	1b c0		 sbb	 eax, eax
  00056	83 d8 ff	 sbb	 eax, -1
$LN15@DelMember:
  00059	85 c0		 test	 eax, eax
  0005b	74 14		 je	 SHORT $LN10@DelMember
$LN4@DelMember:

; 605  : 	{
; 606  : 		return FALSE;
; 607  : 	}
; 608  : 
; 609  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  0005d	46		 inc	 esi
  0005e	83 c3 0b	 add	 ebx, 11			; 0000000bH
  00061	83 fe 50	 cmp	 esi, 80			; 00000050H
  00064	7c bf		 jl	 SHORT $LL5@DelMember

; 619  : 			}
; 620  : 		}
; 621  : 	}
; 622  : 
; 623  : 	return FALSE;

  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	33 c0		 xor	 eax, eax
  0006a	5f		 pop	 edi

; 624  : }

  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 08 00	 ret	 8
$LN10@DelMember:

; 614  : 			{
; 615  : 				pNode->Use[n] = FALSE;
; 616  : 				pNode->Count--;
; 617  : 				this->BuildMemberTotal(pNode);

  00071	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00074	c6 84 3e 40 04
	00 00 00	 mov	 BYTE PTR [esi+edi+1088], 0
  0007c	fe 4f 2d	 dec	 BYTE PTR [edi+45]
  0007f	57		 push	 edi
  00080	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
  00085	5e		 pop	 esi
  00086	5b		 pop	 ebx

; 618  : 				return TRUE;

  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	5f		 pop	 edi

; 624  : }

  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
?DelMember@CGuildClass@@QAEHPAD0@Z ENDP			; CGuildClass::DelMember
_TEXT	ENDS
PUBLIC	?CloseMember@CGuildClass@@QAEHPAD0@Z		; CGuildClass::CloseMember
; Function compile flags: /Ogtp
;	COMDAT ?CloseMember@CGuildClass@@QAEHPAD0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_guild_name$ = 8					; size = 4
_player_name$ = 12					; size = 4
?CloseMember@CGuildClass@@QAEHPAD0@Z PROC		; CGuildClass::CloseMember, COMDAT
; _this$ = ecx

; 628  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 629  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(guild_name);

  00004	8b 45 08	 mov	 eax, DWORD PTR _guild_name$[ebp]
  00007	57		 push	 edi
  00008	50		 push	 eax
  00009	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000c	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
  00011	8b f8		 mov	 edi, eax

; 630  : 
; 631  : 	if (pNode == NULL )

  00013	85 ff		 test	 edi, edi
  00015	75 07		 jne	 SHORT $LN6@CloseMembe
  00017	5f		 pop	 edi

; 652  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
$LN6@CloseMembe:
  0001e	53		 push	 ebx
  0001f	56		 push	 esi

; 632  : 	{
; 633  : 		return FALSE;
; 634  : 	}
; 635  : 
; 636  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00020	33 f6		 xor	 esi, esi
  00022	8d 5f 2f	 lea	 ebx, DWORD PTR [edi+47]
$LL5@CloseMembe:

; 637  : 	{
; 638  : 		if ( pNode->Use[n] == TRUE )

  00025	80 bc 37 40 04
	00 00 01	 cmp	 BYTE PTR [edi+esi+1088], 1
  0002d	75 2e		 jne	 SHORT $LN4@CloseMembe

; 639  : 		{
; 640  : 			if ( strcmp(pNode->Names[n], player_name ) == 0 )

  0002f	8b 55 0c	 mov	 edx, DWORD PTR _player_name$[ebp]
  00032	8b cb		 mov	 ecx, ebx
$LL12@CloseMembe:
  00034	8a 01		 mov	 al, BYTE PTR [ecx]
  00036	3a 02		 cmp	 al, BYTE PTR [edx]
  00038	75 1a		 jne	 SHORT $LN13@CloseMembe
  0003a	84 c0		 test	 al, al
  0003c	74 12		 je	 SHORT $LN14@CloseMembe
  0003e	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00041	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00044	75 0e		 jne	 SHORT $LN13@CloseMembe
  00046	83 c1 02	 add	 ecx, 2
  00049	83 c2 02	 add	 edx, 2
  0004c	84 c0		 test	 al, al
  0004e	75 e4		 jne	 SHORT $LL12@CloseMembe
$LN14@CloseMembe:
  00050	33 c0		 xor	 eax, eax
  00052	eb 05		 jmp	 SHORT $LN15@CloseMembe
$LN13@CloseMembe:
  00054	1b c0		 sbb	 eax, eax
  00056	83 d8 ff	 sbb	 eax, -1
$LN15@CloseMembe:
  00059	85 c0		 test	 eax, eax
  0005b	74 14		 je	 SHORT $LN10@CloseMembe
$LN4@CloseMembe:

; 632  : 	{
; 633  : 		return FALSE;
; 634  : 	}
; 635  : 
; 636  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  0005d	46		 inc	 esi
  0005e	83 c3 0b	 add	 ebx, 11			; 0000000bH
  00061	83 fe 50	 cmp	 esi, 80			; 00000050H
  00064	7c bf		 jl	 SHORT $LL5@CloseMembe

; 647  : 			}
; 648  : 		}
; 649  : 	}
; 650  : 
; 651  : 	return FALSE;

  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	33 c0		 xor	 eax, eax
  0006a	5f		 pop	 edi

; 652  : }

  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 08 00	 ret	 8
$LN10@CloseMembe:

; 641  : 			{
; 642  : 				pNode->Index[n] = -1;

  00071	83 c9 ff	 or	 ecx, -1
  00074	66 89 8c 77 a0
	03 00 00	 mov	 WORD PTR [edi+esi*2+928], cx

; 643  : 				pNode->Count--;

  0007c	fe 4f 2d	 dec	 BYTE PTR [edi+45]

; 644  : 				pNode->pServer[n] = -1;

  0007f	88 8c 3e 90 04
	00 00		 mov	 BYTE PTR [esi+edi+1168], cl

; 645  : 				this->BuildMemberTotal(pNode);

  00086	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx

; 646  : 				return TRUE;

  00091	b8 01 00 00 00	 mov	 eax, 1
  00096	5f		 pop	 edi

; 652  : }

  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 08 00	 ret	 8
?CloseMember@CGuildClass@@QAEHPAD0@Z ENDP		; CGuildClass::CloseMember
_TEXT	ENDS
PUBLIC	?SetServer@CGuildClass@@QAEHPAD0H@Z		; CGuildClass::SetServer
; Function compile flags: /Ogtp
;	COMDAT ?SetServer@CGuildClass@@QAEHPAD0H@Z
_TEXT	SEGMENT
_guild_name$ = 8					; size = 4
_player_name$ = 12					; size = 4
_pServer$ = 16						; size = 4
?SetServer@CGuildClass@@QAEHPAD0H@Z PROC		; CGuildClass::SetServer, COMDAT
; _this$ = ecx

; 656  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 657  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(guild_name);

  00003	8b 45 08	 mov	 eax, DWORD PTR _guild_name$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

; 658  : 
; 659  : 	if (pNode == NULL )

  0000c	85 c0		 test	 eax, eax
  0000e	75 04		 jne	 SHORT $LN6@SetServer

; 677  : }

  00010	5d		 pop	 ebp
  00011	c2 0c 00	 ret	 12			; 0000000cH
$LN6@SetServer:
  00014	56		 push	 esi
  00015	57		 push	 edi

; 660  : 	{
; 661  : 		return FALSE;
; 662  : 	}
; 663  : 
; 664  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00016	33 f6		 xor	 esi, esi
  00018	8d 78 2f	 lea	 edi, DWORD PTR [eax+47]
  0001b	53		 push	 ebx
  0001c	8d 64 24 00	 npad	 4
$LL5@SetServer:

; 665  : 	{
; 666  : 		if ( pNode->Use[n] == TRUE )

  00020	80 bc 30 40 04
	00 00 01	 cmp	 BYTE PTR [eax+esi+1088], 1
  00028	75 2f		 jne	 SHORT $LN4@SetServer

; 667  : 		{
; 668  : 			if ( strcmp(pNode->Names[n], player_name ) == 0 )

  0002a	8b 55 0c	 mov	 edx, DWORD PTR _player_name$[ebp]
  0002d	8b cf		 mov	 ecx, edi
  0002f	90		 npad	 1
$LL12@SetServer:
  00030	8a 19		 mov	 bl, BYTE PTR [ecx]
  00032	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00034	75 1a		 jne	 SHORT $LN13@SetServer
  00036	84 db		 test	 bl, bl
  00038	74 12		 je	 SHORT $LN14@SetServer
  0003a	8a 59 01	 mov	 bl, BYTE PTR [ecx+1]
  0003d	3a 5a 01	 cmp	 bl, BYTE PTR [edx+1]
  00040	75 0e		 jne	 SHORT $LN13@SetServer
  00042	83 c1 02	 add	 ecx, 2
  00045	83 c2 02	 add	 edx, 2
  00048	84 db		 test	 bl, bl
  0004a	75 e4		 jne	 SHORT $LL12@SetServer
$LN14@SetServer:
  0004c	33 c9		 xor	 ecx, ecx
  0004e	eb 05		 jmp	 SHORT $LN15@SetServer
$LN13@SetServer:
  00050	1b c9		 sbb	 ecx, ecx
  00052	83 d9 ff	 sbb	 ecx, -1
$LN15@SetServer:
  00055	85 c9		 test	 ecx, ecx
  00057	74 12		 je	 SHORT $LN10@SetServer
$LN4@SetServer:

; 660  : 	{
; 661  : 		return FALSE;
; 662  : 	}
; 663  : 
; 664  : 	for ( int n=0;n<MAX_USER_GUILD;n++)

  00059	46		 inc	 esi
  0005a	83 c7 0b	 add	 edi, 11			; 0000000bH
  0005d	83 fe 50	 cmp	 esi, 80			; 00000050H
  00060	7c be		 jl	 SHORT $LL5@SetServer

; 672  : 			}
; 673  : 		}
; 674  : 	}
; 675  : 
; 676  : 	return FALSE;

  00062	5b		 pop	 ebx
  00063	5f		 pop	 edi
  00064	33 c0		 xor	 eax, eax
  00066	5e		 pop	 esi

; 677  : }

  00067	5d		 pop	 ebp
  00068	c2 0c 00	 ret	 12			; 0000000cH
$LN10@SetServer:

; 669  : 			{
; 670  : 				pNode->pServer[n] = pServer;

  0006b	8a 4d 10	 mov	 cl, BYTE PTR _pServer$[ebp]
  0006e	5b		 pop	 ebx
  0006f	88 8c 06 90 04
	00 00		 mov	 BYTE PTR [esi+eax+1168], cl
  00076	5f		 pop	 edi

; 671  : 				return TRUE;

  00077	b8 01 00 00 00	 mov	 eax, 1
  0007c	5e		 pop	 esi

; 677  : }

  0007d	5d		 pop	 ebp
  0007e	c2 0c 00	 ret	 12			; 0000000cH
?SetServer@CGuildClass@@QAEHPAD0H@Z ENDP		; CGuildClass::SetServer
_TEXT	ENDS
PUBLIC	??0?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T165448 = -16						; size = 12
$T165346 = -4						; size = 4
??0?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ PROC ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	6a 18		 push	 24			; 00000018H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 26		 je	 SHORT $LN25@map
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 14	 mov	 BYTE PTR [ecx+20], al
  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 15	 mov	 BYTE PTR [edx+21], al

; 107  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0

; 106  : 		{	// construct empty map from defaults

$LN25@map:
  00044	8d 45 fc	 lea	 eax, DWORD PTR $T165346[ebp]
  00047	50		 push	 eax
  00048	8d 4d f0	 lea	 ecx, DWORD PTR $T165448[ebp]
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T165346[ebp], 0
  00052	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00057	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005c	8d 4d f0	 lea	 ecx, DWORD PTR $T165448[ebp]
  0005f	51		 push	 ecx
  00060	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T165448[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00067	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN49@map:
$LN48@map:
  0006c	cc		 int	 3
??0?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >
_TEXT	ENDS
PUBLIC	??A?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABH@Z ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::operator[]
; Function compile flags: /Ogtp
;	COMDAT ??A?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABH@Z
_TEXT	SEGMENT
$T165474 = -8						; size = 8
$T165477 = 8						; size = 4
__Keyval$ = 8						; size = 4
??A?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABH@Z PROC ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::operator[], COMDAT
; _this$ = ecx

; 210  : 		{	// find element matching _Keyval or insert with default mapped

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 211  : 		iterator _Where = this->lower_bound(_Keyval);

  00003	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0000f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00012	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00016	57		 push	 edi
  00017	8b f9		 mov	 edi, ecx
  00019	75 19		 jne	 SHORT $LN9@operator@7
  0001b	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001d	8d 49 00	 npad	 3
$LL10@operator@7:
  00020	39 48 0c	 cmp	 DWORD PTR [eax+12], ecx
  00023	7d 05		 jge	 SHORT $LN8@operator@7
  00025	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00028	eb 04		 jmp	 SHORT $LN7@operator@7
$LN8@operator@7:
  0002a	8b f8		 mov	 edi, eax
  0002c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@operator@7:
  0002e	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00032	74 ec		 je	 SHORT $LL10@operator@7
$LN9@operator@7:

; 212  : 		if (_Where == this->end()
; 213  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

  00034	3b 7e 04	 cmp	 edi, DWORD PTR [esi+4]
  00037	74 07		 je	 SHORT $LN1@operator@7
  00039	8b 02		 mov	 eax, DWORD PTR [edx]
  0003b	3b 47 0c	 cmp	 eax, DWORD PTR [edi+12]
  0003e	7d 32		 jge	 SHORT $LN80@operator@7
$LN1@operator@7:

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

  00040	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00042	8d 55 f8	 lea	 edx, DWORD PTR $T165474[ebp]
  00045	89 4d f8	 mov	 DWORD PTR $T165474[ebp], ecx
  00048	52		 push	 edx
  00049	8b ce		 mov	 ecx, esi
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T165474[ebp+4], 0
  00052	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@1@$$QAU?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<int const ,_GUILD_INFO_STRUCT *> >
  00057	50		 push	 eax
  00058	57		 push	 edi
  00059	8d 45 08	 lea	 eax, DWORD PTR $T165477[ebp]
  0005c	50		 push	 eax
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00064	8b 45 08	 mov	 eax, DWORD PTR $T165477[ebp]
  00067	5f		 pop	 edi

; 216  : 		return ((*_Where).second);

  00068	83 c0 10	 add	 eax, 16			; 00000010H
  0006b	5e		 pop	 esi

; 217  : 		}

  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 04 00	 ret	 4
$LN80@operator@7:

; 216  : 		return ((*_Where).second);

  00072	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi

; 217  : 		}

  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c2 04 00	 ret	 4
??A?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABH@Z ENDP ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::operator[]
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 233  : 		{	// construct from specified values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	56		 push	 esi
  00007	6a ff		 push	 -1
  00009	8b f1		 mov	 esi, ecx
  0000b	6a 00		 push	 0
  0000d	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00014	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001b	50		 push	 eax
  0001c	c6 06 00	 mov	 BYTE PTR [esi], 0
  0001f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR __Val2$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	89 56 1c	 mov	 DWORD PTR [esi+28], edx

; 234  : 		}

  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 08 00	 ret	 8
??0?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QAPAU_GUILD_INFO_STRUCT@@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
;	COMDAT ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z
_TEXT	SEGMENT
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z PROC ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 286  : 	{	// destroy using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 287  : 	_Alval.destroy(_Pdest);

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Pdest$[ebp]
  00007	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H
  0000b	72 0b		 jb	 SHORT $LN24@Dest_val
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$LN24@Dest_val:
  00018	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00026	c6 06 00	 mov	 BYTE PTR [esi], 0
  00029	5e		 pop	 esi

; 288  : 	}

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ENDP ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1631 : 		{	// add node with value next to _Wherenode, to left if _Addleft

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1632 : 		if (max_size() - 1 <= this->_Mysize)

  00003	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	3d fe ff ff 07	 cmp	 eax, 134217726		; 07fffffeH
  0000e	72 23		 jb	 SHORT $LN17@Insert@3

; 1633 : 			{	// tree would get too big, fail
; 1634 : 			_Dest_val(this->_Alval,
; 1635 : 				_STD addressof(this->_Myval(_Newnode)));

  00010	8b 75 14	 mov	 esi, DWORD PTR __Newnode$[ebp]
  00013	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00016	50		 push	 eax
  00017	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >

; 1636 : 
; 1637 : 			this->_Alnod.deallocate(_Newnode, 1);

  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1638 : 
; 1639 : 			_Xlength_error("map/set<T> too long");

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN377@Insert@3:
$LN17@Insert@3:

; 1640 : 			}
; 1641 : 		++this->_Mysize;
; 1642 : 		_Newnode->_Parent = _Wherenode;

  00033	8b 7d 14	 mov	 edi, DWORD PTR __Newnode$[ebp]
  00036	40		 inc	 eax
  00037	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0003a	8b 45 10	 mov	 eax, DWORD PTR __Wherenode$[ebp]
  0003d	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1643 : 
; 1644 : 		if (_Wherenode == this->_Myhead)

  00040	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00043	32 db		 xor	 bl, bl
  00045	3b c2		 cmp	 eax, edx
  00047	75 10		 jne	 SHORT $LN16@Insert@3

; 1645 : 			{	// first node in tree, just set head values
; 1646 : 			_Root() = _Newnode;

  00049	89 7a 04	 mov	 DWORD PTR [edx+4], edi

; 1647 : 			_Lmost() = _Newnode;

  0004c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0004f	89 3a		 mov	 DWORD PTR [edx], edi

; 1648 : 			_Rmost() = _Newnode;

  00051	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00054	89 78 08	 mov	 DWORD PTR [eax+8], edi
  00057	eb 20		 jmp	 SHORT $LN11@Insert@3
$LN16@Insert@3:

; 1649 : 			}
; 1650 : 		else if (_Addleft)

  00059	38 5d 0c	 cmp	 BYTE PTR __Addleft$[ebp], bl
  0005c	74 0d		 je	 SHORT $LN14@Insert@3

; 1651 : 			{	// add to left of _Wherenode
; 1652 : 			this->_Left(_Wherenode) = _Newnode;

  0005e	89 38		 mov	 DWORD PTR [eax], edi

; 1653 : 			if (_Wherenode == _Lmost())

  00060	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00063	3b 02		 cmp	 eax, DWORD PTR [edx]
  00065	75 12		 jne	 SHORT $LN11@Insert@3

; 1654 : 				_Lmost() = _Newnode;

  00067	89 3a		 mov	 DWORD PTR [edx], edi

; 1655 : 			}
; 1656 : 		else

  00069	eb 0e		 jmp	 SHORT $LN11@Insert@3
$LN14@Insert@3:

; 1657 : 			{	// add to right of _Wherenode
; 1658 : 			this->_Right(_Wherenode) = _Newnode;

  0006b	89 78 08	 mov	 DWORD PTR [eax+8], edi

; 1659 : 			if (_Wherenode == _Rmost())

  0006e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00071	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  00074	75 03		 jne	 SHORT $LN11@Insert@3

; 1660 : 				_Rmost() = _Newnode;

  00076	89 7a 08	 mov	 DWORD PTR [edx+8], edi
$LN11@Insert@3:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	8b c7		 mov	 eax, edi
  0007e	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  00081	0f 85 8f 01 00
	00		 jne	 $LN9@Insert@3
$LL10@Insert@3:

; 1665 : 			if (this->_Parent(_Pnode)
; 1666 : 				== this->_Left(this->_Parent(this->_Parent(_Pnode))))

  00087	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0008a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0008d	3b 16		 cmp	 edx, DWORD PTR [esi]
  0008f	0f 85 c1 00 00
	00		 jne	 $LN8@Insert@3

; 1667 : 				{	// fixup red-red in left subtree
; 1668 : 				_Wherenode =
; 1669 : 					this->_Right(this->_Parent(this->_Parent(_Pnode)));

  00095	8b 76 08	 mov	 esi, DWORD PTR [esi+8]

; 1670 : 				if (this->_Color(_Wherenode) == this->_Red)

  00098	38 5e 2c	 cmp	 BYTE PTR [esi+44], bl
  0009b	75 1c		 jne	 SHORT $LN7@Insert@3

; 1671 : 					{	// parent has two red children, blacken both
; 1672 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  0009d	c6 42 2c 01	 mov	 BYTE PTR [edx+44], 1

; 1673 : 					this->_Color(_Wherenode) = this->_Black;

  000a1	c6 46 2c 01	 mov	 BYTE PTR [esi+44], 1

; 1674 : 					this->_Color(this->_Parent(this->_Parent(_Pnode)))
; 1675 : 						= this->_Red;

  000a5	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a8	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000ab	88 5a 2c	 mov	 BYTE PTR [edx+44], bl

; 1676 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  000ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b1	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1677 : 					}
; 1678 : 				else

  000b4	e9 51 01 00 00	 jmp	 $LN316@Insert@3
$LN7@Insert@3:

; 1679 : 					{	// parent has red and black children
; 1680 : 					if (_Pnode == this->_Right(this->_Parent(_Pnode)))

  000b9	3b 42 08	 cmp	 eax, DWORD PTR [edx+8]
  000bc	75 3a		 jne	 SHORT $LN111@Insert@3

; 1681 : 						{	// rotate right child to left
; 1682 : 						_Pnode = this->_Parent(_Pnode);

  000be	8b c2		 mov	 eax, edx

; 1683 : 						_Lrotate(_Pnode);

  000c0	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000c3	8b 32		 mov	 esi, DWORD PTR [edx]
  000c5	89 70 08	 mov	 DWORD PTR [eax+8], esi
  000c8	8b 32		 mov	 esi, DWORD PTR [edx]
  000ca	38 5e 2d	 cmp	 BYTE PTR [esi+45], bl
  000cd	75 03		 jne	 SHORT $LN110@Insert@3
  000cf	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN110@Insert@3:
  000d2	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d5	89 72 04	 mov	 DWORD PTR [edx+4], esi
  000d8	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000db	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000de	75 05		 jne	 SHORT $LN109@Insert@3
  000e0	89 56 04	 mov	 DWORD PTR [esi+4], edx
  000e3	eb 0e		 jmp	 SHORT $LN106@Insert@3
$LN109@Insert@3:
  000e5	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000e8	3b 06		 cmp	 eax, DWORD PTR [esi]
  000ea	75 04		 jne	 SHORT $LN107@Insert@3
  000ec	89 16		 mov	 DWORD PTR [esi], edx
  000ee	eb 03		 jmp	 SHORT $LN106@Insert@3
$LN107@Insert@3:
  000f0	89 56 08	 mov	 DWORD PTR [esi+8], edx
$LN106@Insert@3:
  000f3	89 02		 mov	 DWORD PTR [edx], eax
  000f5	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN111@Insert@3:

; 1684 : 						}
; 1685 : 					this->_Color(this->_Parent(_Pnode)) =
; 1686 : 						this->_Black;	// propagate red up

  000f8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000fb	c6 42 2c 01	 mov	 BYTE PTR [edx+44], 1

; 1687 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1688 : 						this->_Red;

  000ff	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00102	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00105	88 5a 2c	 mov	 BYTE PTR [edx+44], bl

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

  00108	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0010b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0010e	8b 32		 mov	 esi, DWORD PTR [edx]
  00110	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00113	89 3a		 mov	 DWORD PTR [edx], edi
  00115	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00118	38 5f 2d	 cmp	 BYTE PTR [edi+45], bl
  0011b	75 03		 jne	 SHORT $LN173@Insert@3
  0011d	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN173@Insert@3:
  00120	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  00123	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00126	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00129	3b 57 04	 cmp	 edx, DWORD PTR [edi+4]
  0012c	75 0b		 jne	 SHORT $LN172@Insert@3
  0012e	89 77 04	 mov	 DWORD PTR [edi+4], esi
  00131	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00134	e9 cb 00 00 00	 jmp	 $LN376@Insert@3

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN172@Insert@3:
  00139	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  0013c	3b 57 08	 cmp	 edx, DWORD PTR [edi+8]
  0013f	75 0b		 jne	 SHORT $LN170@Insert@3
  00141	89 77 08	 mov	 DWORD PTR [edi+8], esi
  00144	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00147	e9 b8 00 00 00	 jmp	 $LN376@Insert@3

; 1689 : 					_Rrotate(this->_Parent(this->_Parent(_Pnode)));

$LN170@Insert@3:
  0014c	89 37		 mov	 DWORD PTR [edi], esi
  0014e	89 56 08	 mov	 DWORD PTR [esi+8], edx

; 1690 : 					}
; 1691 : 				}
; 1692 : 			else

  00151	e9 ae 00 00 00	 jmp	 $LN376@Insert@3
$LN8@Insert@3:

; 1693 : 				{	// fixup red-red in right subtree
; 1694 : 				_Wherenode =
; 1695 : 					this->_Left(this->_Parent(this->_Parent(_Pnode)));

  00156	8b 36		 mov	 esi, DWORD PTR [esi]

; 1696 : 				if (this->_Color(_Wherenode) == this->_Red)

  00158	38 5e 2c	 cmp	 BYTE PTR [esi+44], bl
  0015b	75 1c		 jne	 SHORT $LN3@Insert@3

; 1697 : 					{	// parent has two red children, blacken both
; 1698 : 					this->_Color(this->_Parent(_Pnode)) = this->_Black;

  0015d	c6 42 2c 01	 mov	 BYTE PTR [edx+44], 1

; 1699 : 					this->_Color(_Wherenode) = this->_Black;

  00161	c6 46 2c 01	 mov	 BYTE PTR [esi+44], 1

; 1700 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1701 : 						this->_Red;

  00165	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00168	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0016b	88 5a 2c	 mov	 BYTE PTR [edx+44], bl

; 1702 : 					_Pnode = this->_Parent(this->_Parent(_Pnode));

  0016e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00171	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 1703 : 					}
; 1704 : 				else

  00174	e9 91 00 00 00	 jmp	 $LN316@Insert@3
$LN3@Insert@3:

; 1705 : 					{	// parent has red and black children
; 1706 : 					if (_Pnode == this->_Left(this->_Parent(_Pnode)))

  00179	3b 02		 cmp	 eax, DWORD PTR [edx]
  0017b	75 3c		 jne	 SHORT $LN253@Insert@3

; 1707 : 						{	// rotate left child to right
; 1708 : 						_Pnode = this->_Parent(_Pnode);

  0017d	8b c2		 mov	 eax, edx

; 1709 : 						_Rrotate(_Pnode);

  0017f	8b 10		 mov	 edx, DWORD PTR [eax]
  00181	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00184	89 30		 mov	 DWORD PTR [eax], esi
  00186	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  00189	38 5e 2d	 cmp	 BYTE PTR [esi+45], bl
  0018c	75 03		 jne	 SHORT $LN252@Insert@3
  0018e	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN252@Insert@3:
  00191	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00194	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00197	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0019a	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0019d	75 05		 jne	 SHORT $LN251@Insert@3
  0019f	89 56 04	 mov	 DWORD PTR [esi+4], edx
  001a2	eb 0f		 jmp	 SHORT $LN248@Insert@3
$LN251@Insert@3:
  001a4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  001a7	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  001aa	75 05		 jne	 SHORT $LN249@Insert@3
  001ac	89 56 08	 mov	 DWORD PTR [esi+8], edx
  001af	eb 02		 jmp	 SHORT $LN248@Insert@3
$LN249@Insert@3:
  001b1	89 16		 mov	 DWORD PTR [esi], edx
$LN248@Insert@3:
  001b3	89 42 08	 mov	 DWORD PTR [edx+8], eax
  001b6	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN253@Insert@3:

; 1710 : 						}
; 1711 : 					this->_Color(this->_Parent(_Pnode)) =
; 1712 : 						this->_Black;	// propagate red up

  001b9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001bc	c6 42 2c 01	 mov	 BYTE PTR [edx+44], 1

; 1713 : 					this->_Color(this->_Parent(this->_Parent(_Pnode))) =
; 1714 : 						this->_Red;

  001c0	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001c3	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001c6	88 5a 2c	 mov	 BYTE PTR [edx+44], bl

; 1715 : 					_Lrotate(this->_Parent(this->_Parent(_Pnode)));

  001c9	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001cc	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  001cf	8b 72 08	 mov	 esi, DWORD PTR [edx+8]
  001d2	8b 3e		 mov	 edi, DWORD PTR [esi]
  001d4	89 7a 08	 mov	 DWORD PTR [edx+8], edi
  001d7	8b 3e		 mov	 edi, DWORD PTR [esi]
  001d9	38 5f 2d	 cmp	 BYTE PTR [edi+45], bl
  001dc	75 03		 jne	 SHORT $LN315@Insert@3
  001de	89 57 04	 mov	 DWORD PTR [edi+4], edx
$LN315@Insert@3:
  001e1	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  001e4	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  001e7	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  001ea	3b 57 04	 cmp	 edx, DWORD PTR [edi+4]
  001ed	75 05		 jne	 SHORT $LN314@Insert@3
  001ef	89 77 04	 mov	 DWORD PTR [edi+4], esi
  001f2	eb 0e		 jmp	 SHORT $LN311@Insert@3
$LN314@Insert@3:
  001f4	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  001f7	3b 17		 cmp	 edx, DWORD PTR [edi]
  001f9	75 04		 jne	 SHORT $LN312@Insert@3
  001fb	89 37		 mov	 DWORD PTR [edi], esi
  001fd	eb 03		 jmp	 SHORT $LN311@Insert@3
$LN312@Insert@3:
  001ff	89 77 08	 mov	 DWORD PTR [edi+8], esi
$LN311@Insert@3:
  00202	89 16		 mov	 DWORD PTR [esi], edx
$LN376@Insert@3:
  00204	8b 7d 14	 mov	 edi, DWORD PTR __Newnode$[ebp]
  00207	89 72 04	 mov	 DWORD PTR [edx+4], esi
$LN316@Insert@3:

; 1661 : 			}
; 1662 : 
; 1663 : 		for (_Nodeptr _Pnode = _Newnode;
; 1664 : 			this->_Color(this->_Parent(_Pnode)) == this->_Red; )

  0020a	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0020d	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  00210	0f 84 71 fe ff
	ff		 je	 $LL10@Insert@3
$LN9@Insert@3:

; 1716 : 					}
; 1717 : 				}
; 1718 : 
; 1719 : 		this->_Color(_Root()) = this->_Black;	// root is always black

  00216	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00219	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1720 : 		return (iterator(_Newnode, this));

  0021c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0021f	89 38		 mov	 DWORD PTR [eax], edi
  00221	5f		 pop	 edi
  00222	5e		 pop	 esi
  00223	c6 41 2c 01	 mov	 BYTE PTR [ecx+44], 1
  00227	5b		 pop	 ebx

; 1721 : 		}

  00228	5d		 pop	 ebp
  00229	c2 10 00	 ret	 16			; 00000010H
$LN375@Insert@3:
?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$?0$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
;	COMDAT ??$?0$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z PROC ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>, COMDAT
; _this$ = ecx

; 255  : 		{	// construct from moved compatible pair

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00008	6a ff		 push	 -1
  0000a	8b f1		 mov	 esi, ecx
  0000c	6a 00		 push	 0
  0000e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00015	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001c	57		 push	 edi
  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0
  00020	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00025	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00028	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0002b	5f		 pop	 edi

; 256  : 		}

  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??$?0$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@$$QAU01@@Z ENDP ; std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *><std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>
_TEXT	ENDS
PUBLIC	?PrintGuild@CGuildClass@@QAEXPAD@Z		; CGuildClass::PrintGuild
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
;	COMDAT ?PrintGuild@CGuildClass@@QAEXPAD@Z
_TEXT	SEGMENT
_guildname$ = 8						; size = 4
?PrintGuild@CGuildClass@@QAEXPAD@Z PROC			; CGuildClass::PrintGuild, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 119  : }

  00003	5d		 pop	 ebp

; 118  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(guildname);

  00004	e9 00 00 00 00	 jmp	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild
?PrintGuild@CGuildClass@@QAEXPAD@Z ENDP			; CGuildClass::PrintGuild
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv797 = -12						; size = 4
__Erasednode$ = -8					; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1195 : 		{	// erase element at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 1196 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1197 : 		if (_Where._Getcont() != this || this->_Isnil(_Where._Mynode()))
; 1198 : 			_DEBUG_ERROR("map/set erase iterator outside range");
; 1199 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1200 : 		++_Where;	// save successor iterator for return
; 1201 : 		_Orphan_ptr(*this, _Erasednode);
; 1202 : 
; 1203 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1204 : 		if (this->_Isnil(_Where._Mynode()))

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Where$[ebp]
  0000a	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00013	74 0a		 je	 SHORT $LN40@erase@4

; 1205 : 			_Xout_of_range("invalid map/set<T> iterator");

  00015	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  0001a	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPBD@Z ; std::_Xout_of_range
$LN297@erase@4:
$LN40@erase@4:

; 1206 : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase
; 1207 : 		++_Where;	// save successor iterator for return

  0001f	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00022	89 5d f8	 mov	 DWORD PTR __Erasednode$[ebp], ebx
  00025	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++

; 1208 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1209 : 
; 1210 : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 1211 : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 1212 : 		_Nodeptr _Pnode = _Erasednode;
; 1213 : 
; 1214 : 		if (this->_Isnil(this->_Left(_Pnode)))

  0002a	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0002c	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00030	74 05		 je	 SHORT $LN39@erase@4

; 1215 : 			_Fixnode = this->_Right(_Pnode);	// stitch up right subtree

  00032	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 1216 : 		else if (this->_Isnil(this->_Right(_Pnode)))

  00035	eb 17		 jmp	 SHORT $LN291@erase@4
$LN39@erase@4:
  00037	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0003a	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  0003e	74 04		 je	 SHORT $LN37@erase@4

; 1217 : 			_Fixnode = this->_Left(_Pnode);	// stitch up left subtree

  00040	8b f9		 mov	 edi, ecx

; 1218 : 		else

  00042	eb 0a		 jmp	 SHORT $LN291@erase@4
$LN37@erase@4:

; 1219 : 			{	// two subtrees, must lift successor node to replace erased
; 1220 : 			_Pnode = _Where._Mynode();	// _Pnode is successor node

  00044	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 1221 : 			_Fixnode = this->_Right(_Pnode);	// _Fixnode is only subtree

  00047	8b 78 08	 mov	 edi, DWORD PTR [eax+8]

; 1222 : 			}
; 1223 : 
; 1224 : 		if (_Pnode == _Erasednode)

  0004a	3b c3		 cmp	 eax, ebx
  0004c	75 72		 jne	 SHORT $LN35@erase@4
$LN291@erase@4:

; 1225 : 			{	// at most one subtree, relink it
; 1226 : 			_Fixnodeparent = this->_Parent(_Erasednode);
; 1227 : 			if (!this->_Isnil(_Fixnode))

  0004e	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  00052	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00055	75 03		 jne	 SHORT $LN34@erase@4

; 1228 : 				this->_Parent(_Fixnode) = _Fixnodeparent;	// link up

  00057	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN34@erase@4:

; 1229 : 
; 1230 : 			if (_Root() == _Erasednode)

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00060	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  00063	75 05		 jne	 SHORT $LN33@erase@4

; 1231 : 				_Root() = _Fixnode;	// link down from root

  00065	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 1232 : 			else if (this->_Left(_Fixnodeparent) == _Erasednode)

  00068	eb 0b		 jmp	 SHORT $LN30@erase@4
$LN33@erase@4:
  0006a	39 1e		 cmp	 DWORD PTR [esi], ebx
  0006c	75 04		 jne	 SHORT $LN31@erase@4

; 1233 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  0006e	89 3e		 mov	 DWORD PTR [esi], edi

; 1234 : 			else

  00070	eb 03		 jmp	 SHORT $LN30@erase@4
$LN31@erase@4:

; 1235 : 				this->_Right(_Fixnodeparent) =
; 1236 : 					_Fixnode;	// link down to right

  00072	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN30@erase@4:

; 1237 : 
; 1238 : 			if (_Lmost() == _Erasednode)

  00075	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00078	39 18		 cmp	 DWORD PTR [eax], ebx
  0007a	75 1b		 jne	 SHORT $LN29@erase@4

; 1239 : 				_Lmost() = this->_Isnil(_Fixnode)
; 1240 : 					? _Fixnodeparent	// smallest is parent of erased node
; 1241 : 					: this->_Min(_Fixnode);	// smallest in relinked subtree

  0007c	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  00080	74 04		 je	 SHORT $LN43@erase@4
  00082	8b c6		 mov	 eax, esi
  00084	eb 0c		 jmp	 SHORT $LN44@erase@4
$LN43@erase@4:
  00086	57		 push	 edi
  00087	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Min
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008f	83 c4 04	 add	 esp, 4
$LN44@erase@4:
  00092	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00095	89 02		 mov	 DWORD PTR [edx], eax
$LN29@erase@4:

; 1242 : 
; 1243 : 			if (_Rmost() == _Erasednode)

  00097	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0009a	89 4d f4	 mov	 DWORD PTR tv797[ebp], ecx
  0009d	39 59 08	 cmp	 DWORD PTR [ecx+8], ebx
  000a0	75 78		 jne	 SHORT $LN165@erase@4

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000a2	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  000a6	74 07		 je	 SHORT $LN45@erase@4
  000a8	8b c6		 mov	 eax, esi
  000aa	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000ad	eb 6b		 jmp	 SHORT $LN165@erase@4
$LN45@erase@4:

; 1244 : 				_Rmost() = this->_Isnil(_Fixnode)
; 1245 : 					? _Fixnodeparent	// largest is parent of erased node
; 1246 : 					: this->_Max(_Fixnode);	// largest in relinked subtree

  000af	57		 push	 edi
  000b0	e8 00 00 00 00	 call	 ?_Max@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@SAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Max
  000b5	8b 4d f4	 mov	 ecx, DWORD PTR tv797[ebp]
  000b8	83 c4 04	 add	 esp, 4
  000bb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 1247 : 			}
; 1248 : 		else

  000be	eb 5a		 jmp	 SHORT $LN165@erase@4
$LN35@erase@4:

; 1249 : 			{	// erased has two subtrees, _Pnode is successor to erased
; 1250 : 			this->_Parent(this->_Left(_Erasednode)) =
; 1251 : 				_Pnode;	// link left up

  000c0	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1252 : 			this->_Left(_Pnode) =
; 1253 : 				this->_Left(_Erasednode);	// link successor down

  000c3	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000c5	89 08		 mov	 DWORD PTR [eax], ecx

; 1254 : 
; 1255 : 			if (_Pnode == this->_Right(_Erasednode))

  000c7	3b 43 08	 cmp	 eax, DWORD PTR [ebx+8]
  000ca	75 04		 jne	 SHORT $LN26@erase@4

; 1256 : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  000cc	8b f0		 mov	 esi, eax

; 1257 : 			else

  000ce	eb 1a		 jmp	 SHORT $LN25@erase@4
$LN26@erase@4:

; 1258 : 				{	// successor further down, link in place of erased
; 1259 : 				_Fixnodeparent =
; 1260 : 					this->_Parent(_Pnode);	// parent is successor's
; 1261 : 				if (!this->_Isnil(_Fixnode))

  000d0	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  000d4	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  000d7	75 03		 jne	 SHORT $LN24@erase@4

; 1262 : 					this->_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  000d9	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN24@erase@4:

; 1263 : 				this->_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  000dc	89 3e		 mov	 DWORD PTR [esi], edi

; 1264 : 				this->_Right(_Pnode) =
; 1265 : 					this->_Right(_Erasednode);	// link next down

  000de	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000e1	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1266 : 				this->_Parent(this->_Right(_Erasednode)) =
; 1267 : 					_Pnode;	// right up

  000e4	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000e7	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN25@erase@4:

; 1268 : 				}
; 1269 : 
; 1270 : 			if (_Root() == _Erasednode)

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000ed	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000f0	39 59 04	 cmp	 DWORD PTR [ecx+4], ebx
  000f3	75 05		 jne	 SHORT $LN23@erase@4

; 1271 : 				_Root() = _Pnode;	// link down from root

  000f5	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1272 : 			else if (this->_Left(this->_Parent(_Erasednode)) == _Erasednode)

  000f8	eb 0e		 jmp	 SHORT $LN20@erase@4
$LN23@erase@4:
  000fa	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000fd	39 19		 cmp	 DWORD PTR [ecx], ebx
  000ff	75 04		 jne	 SHORT $LN21@erase@4

; 1273 : 				this->_Left(this->_Parent(_Erasednode)) =
; 1274 : 					_Pnode;	// link down to left

  00101	89 01		 mov	 DWORD PTR [ecx], eax

; 1275 : 			else

  00103	eb 03		 jmp	 SHORT $LN20@erase@4
$LN21@erase@4:

; 1276 : 				this->_Right(this->_Parent(_Erasednode)) =
; 1277 : 					_Pnode;	// link down to right

  00105	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN20@erase@4:

; 1278 : 
; 1279 : 			this->_Parent(_Pnode) =
; 1280 : 				this->_Parent(_Erasednode);	// link successor up

  00108	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0010b	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 1281 : 			_STD swap(this->_Color(_Pnode),
; 1282 : 				this->_Color(_Erasednode));	// recolor it

  0010e	8a 53 2c	 mov	 dl, BYTE PTR [ebx+44]
  00111	8a 48 2c	 mov	 cl, BYTE PTR [eax+44]
  00114	88 50 2c	 mov	 BYTE PTR [eax+44], dl
  00117	88 4b 2c	 mov	 BYTE PTR [ebx+44], cl
$LN165@erase@4:

; 1283 : 			}
; 1284 : 
; 1285 : 		if (this->_Color(_Erasednode) == this->_Black)

  0011a	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  0011d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00120	b3 01		 mov	 bl, 1
  00122	38 58 2c	 cmp	 BYTE PTR [eax+44], bl
  00125	0f 85 fa 00 00
	00		 jne	 $LN19@erase@4
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	3b 7a 04	 cmp	 edi, DWORD PTR [edx+4]
  00131	0f 84 eb 00 00
	00		 je	 $LN16@erase@4
$LL18@erase@4:
  00137	38 5f 2c	 cmp	 BYTE PTR [edi+44], bl
  0013a	0f 85 e2 00 00
	00		 jne	 $LN16@erase@4

; 1290 : 				if (_Fixnode == this->_Left(_Fixnodeparent))

  00140	8b 06		 mov	 eax, DWORD PTR [esi]
  00142	3b f8		 cmp	 edi, eax
  00144	75 65		 jne	 SHORT $LN15@erase@4

; 1291 : 					{	// fixup left subtree
; 1292 : 					_Pnode = this->_Right(_Fixnodeparent);

  00146	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 1293 : 					if (this->_Color(_Pnode) == this->_Red)

  00149	80 78 2c 00	 cmp	 BYTE PTR [eax+44], 0
  0014d	75 13		 jne	 SHORT $LN14@erase@4

; 1294 : 						{	// rotate red up from right subtree
; 1295 : 						this->_Color(_Pnode) = this->_Black;

  0014f	88 58 2c	 mov	 BYTE PTR [eax+44], bl

; 1296 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1297 : 						_Lrotate(_Fixnodeparent);

  00152	56		 push	 esi
  00153	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
  00157	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate

; 1298 : 						_Pnode = this->_Right(_Fixnodeparent);

  0015c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0015f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN14@erase@4:

; 1299 : 						}
; 1300 : 
; 1301 : 					if (this->_Isnil(_Pnode))

  00162	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0

; 1302 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1303 : 					else if (this->_Color(this->_Left(_Pnode)) == this->_Black

  00166	75 74		 jne	 SHORT $LN294@erase@4

; 1304 : 						&& this->_Color(this->_Right(_Pnode)) == this->_Black)

  00168	8b 10		 mov	 edx, DWORD PTR [eax]
  0016a	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  0016d	75 08		 jne	 SHORT $LN11@erase@4
  0016f	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00172	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  00175	74 61		 je	 SHORT $LN295@erase@4
$LN11@erase@4:

; 1305 : 						{	// redden right subtree with black children
; 1306 : 						this->_Color(_Pnode) = this->_Red;
; 1307 : 						_Fixnode = _Fixnodeparent;
; 1308 : 						}
; 1309 : 					else
; 1310 : 						{	// must rearrange right subtree
; 1311 : 						if (this->_Color(this->_Right(_Pnode))
; 1312 : 							== this->_Black)

  00177	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0017a	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  0017d	75 15		 jne	 SHORT $LN9@erase@4

; 1313 : 							{	// rotate red up from left sub-subtree
; 1314 : 							this->_Color(this->_Left(_Pnode)) = this->_Black;

  0017f	8b 10		 mov	 edx, DWORD PTR [eax]
  00181	88 5a 2c	 mov	 BYTE PTR [edx+44], bl

; 1315 : 							this->_Color(_Pnode) = this->_Red;
; 1316 : 							_Rrotate(_Pnode);

  00184	50		 push	 eax
  00185	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
  00189	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate

; 1317 : 							_Pnode = this->_Right(_Fixnodeparent);

  0018e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN9@erase@4:

; 1318 : 							}
; 1319 : 
; 1320 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  00194	8a 56 2c	 mov	 dl, BYTE PTR [esi+44]
  00197	88 50 2c	 mov	 BYTE PTR [eax+44], dl

; 1321 : 						this->_Color(_Fixnodeparent) = this->_Black;

  0019a	88 5e 2c	 mov	 BYTE PTR [esi+44], bl

; 1322 : 						this->_Color(this->_Right(_Pnode)) = this->_Black;

  0019d	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 1323 : 						_Lrotate(_Fixnodeparent);

  001a0	56		 push	 esi
  001a1	88 58 2c	 mov	 BYTE PTR [eax+44], bl
  001a4	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate

; 1324 : 						break;	// tree now recolored/rebalanced

  001a9	eb 74		 jmp	 SHORT $LN296@erase@4
$LN15@erase@4:

; 1325 : 						}
; 1326 : 					}
; 1327 : 				else
; 1328 : 					{	// fixup right subtree
; 1329 : 					_Pnode = this->_Left(_Fixnodeparent);
; 1330 : 					if (this->_Color(_Pnode) == this->_Red)

  001ab	80 78 2c 00	 cmp	 BYTE PTR [eax+44], 0
  001af	75 12		 jne	 SHORT $LN7@erase@4

; 1331 : 						{	// rotate red up from left subtree
; 1332 : 						this->_Color(_Pnode) = this->_Black;

  001b1	88 58 2c	 mov	 BYTE PTR [eax+44], bl

; 1333 : 						this->_Color(_Fixnodeparent) = this->_Red;
; 1334 : 						_Rrotate(_Fixnodeparent);

  001b4	56		 push	 esi
  001b5	c6 46 2c 00	 mov	 BYTE PTR [esi+44], 0
  001b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate

; 1335 : 						_Pnode = this->_Left(_Fixnodeparent);

  001be	8b 06		 mov	 eax, DWORD PTR [esi]
  001c0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN7@erase@4:

; 1336 : 						}
; 1337 : 					if (this->_Isnil(_Pnode))

  001c3	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0

; 1338 : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 1339 : 					else if (this->_Color(this->_Right(_Pnode)) ==

  001c7	75 13		 jne	 SHORT $LN294@erase@4

; 1340 : 						this->_Black
; 1341 : 						&& this->_Color(this->_Left(_Pnode)) == this->_Black)

  001c9	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001cc	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  001cf	75 1e		 jne	 SHORT $LN4@erase@4
  001d1	8b 10		 mov	 edx, DWORD PTR [eax]
  001d3	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  001d6	75 17		 jne	 SHORT $LN4@erase@4
$LN295@erase@4:

; 1342 : 						{	// redden left subtree with black children
; 1343 : 						this->_Color(_Pnode) = this->_Red;

  001d8	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
$LN294@erase@4:

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001dc	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1344 : 						_Fixnode = _Fixnodeparent;

  001df	8b fe		 mov	 edi, esi
  001e1	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  001e4	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  001e7	0f 85 4a ff ff
	ff		 jne	 $LL18@erase@4

; 1286 : 			{	// erasing black link, must recolor/rebalance tree
; 1287 : 			for (; _Fixnode != _Root()
; 1288 : 				&& this->_Color(_Fixnode) == this->_Black;
; 1289 : 				_Fixnodeparent = this->_Parent(_Fixnode))

  001ed	eb 33		 jmp	 SHORT $LN16@erase@4
$LN4@erase@4:

; 1345 : 						}
; 1346 : 					else
; 1347 : 						{	// must rearrange left subtree
; 1348 : 						if (this->_Color(this->_Left(_Pnode)) == this->_Black)

  001ef	8b 10		 mov	 edx, DWORD PTR [eax]
  001f1	38 5a 2c	 cmp	 BYTE PTR [edx+44], bl
  001f4	75 15		 jne	 SHORT $LN2@erase@4

; 1349 : 							{	// rotate red up from right sub-subtree
; 1350 : 							this->_Color(this->_Right(_Pnode)) = this->_Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001f9	88 5a 2c	 mov	 BYTE PTR [edx+44], bl

; 1351 : 							this->_Color(_Pnode) = this->_Red;
; 1352 : 							_Lrotate(_Pnode);

  001fc	50		 push	 eax
  001fd	c6 40 2c 00	 mov	 BYTE PTR [eax+44], 0
  00201	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lrotate

; 1353 : 							_Pnode = this->_Left(_Fixnodeparent);

  00206	8b 06		 mov	 eax, DWORD PTR [esi]
  00208	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN2@erase@4:

; 1354 : 							}
; 1355 : 
; 1356 : 						this->_Color(_Pnode) = this->_Color(_Fixnodeparent);

  0020b	8a 56 2c	 mov	 dl, BYTE PTR [esi+44]
  0020e	88 50 2c	 mov	 BYTE PTR [eax+44], dl

; 1357 : 						this->_Color(_Fixnodeparent) = this->_Black;

  00211	88 5e 2c	 mov	 BYTE PTR [esi+44], bl

; 1358 : 						this->_Color(this->_Left(_Pnode)) = this->_Black;

  00214	8b 00		 mov	 eax, DWORD PTR [eax]

; 1359 : 						_Rrotate(_Fixnodeparent);

  00216	56		 push	 esi
  00217	88 58 2c	 mov	 BYTE PTR [eax+44], bl
  0021a	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Rrotate
$LN296@erase@4:
  0021f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
$LN16@erase@4:

; 1360 : 						break;	// tree now recolored/rebalanced
; 1361 : 						}
; 1362 : 					}
; 1363 : 
; 1364 : 			this->_Color(_Fixnode) = this->_Black;	// stopping node is black

  00222	88 5f 2c	 mov	 BYTE PTR [edi+44], bl
$LN19@erase@4:

; 1365 : 			}
; 1366 : 
; 1367 : 		_Dest_val(this->_Alval,
; 1368 : 			_STD addressof(this->_Myval(_Erasednode)));	// delete erased node

  00225	8b 55 f8	 mov	 edx, DWORD PTR __Erasednode$[ebp]
  00228	83 c2 0c	 add	 edx, 12			; 0000000cH
  0022b	52		 push	 edx
  0022c	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0022f	51		 push	 ecx
  00230	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >

; 1369 : 
; 1370 : 		this->_Alnod.deallocate(_Erasednode, 1);

  00235	8b 45 f8	 mov	 eax, DWORD PTR __Erasednode$[ebp]
  00238	50		 push	 eax
  00239	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 1371 : 
; 1372 : 		if (0 < this->_Mysize)

  0023e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00241	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00244	83 c4 0c	 add	 esp, 12			; 0000000cH
  00247	5f		 pop	 edi
  00248	5e		 pop	 esi
  00249	5b		 pop	 ebx
  0024a	85 c0		 test	 eax, eax
  0024c	74 04		 je	 SHORT $LN1@erase@4

; 1373 : 			--this->_Mysize;

  0024e	48		 dec	 eax
  0024f	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@erase@4:

; 1374 : 
; 1375 : 		return (iterator(_Where._Ptr, this));	// return successor iterator

  00252	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00255	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00258	89 08		 mov	 DWORD PTR [eax], ecx

; 1376 : 		}

  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c2 08 00	 ret	 8
$LN293@erase@4:
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
; Function compile flags: /Ogtp
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 1610 : 		{	// free entire subtree, recursively

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1611 : 		for (_Nodeptr _Pnode = _Rootnode;

  00006	8b 7d 08	 mov	 edi, DWORD PTR __Rootnode$[ebp]

; 1612 : 			!this->_Isnil(_Pnode); _Rootnode = _Pnode)

  00009	80 7f 2d 00	 cmp	 BYTE PTR [edi+45], 0
  0000d	8b d9		 mov	 ebx, ecx
  0000f	8b f7		 mov	 esi, edi
  00011	75 2b		 jne	 SHORT $LN1@Erase@2
$LL3@Erase@2:

; 1613 : 			{	// free subtrees, then node
; 1614 : 			_Erase(this->_Right(_Pnode));

  00013	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00016	50		 push	 eax
  00017	8b cb		 mov	 ecx, ebx
  00019	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase

; 1615 : 			_Pnode = this->_Left(_Pnode);

  0001e	8b 36		 mov	 esi, DWORD PTR [esi]

; 1616 : 			_Dest_val(this->_Alval,
; 1617 : 				_STD addressof(this->_Myval(_Rootnode)));

  00020	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00023	51		 push	 ecx
  00024	8d 43 0d	 lea	 eax, DWORD PTR [ebx+13]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >

; 1618 : 
; 1619 : 			this->_Alnod.deallocate(_Rootnode, 1);

  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	80 7e 2d 00	 cmp	 BYTE PTR [esi+45], 0
  0003a	8b fe		 mov	 edi, esi
  0003c	74 d5		 je	 SHORT $LL3@Erase@2
$LN1@Erase@2:
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx

; 1620 : 			}
; 1621 : 		}

  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert
; Function compile flags: /Ogtp
;	COMDAT ?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@_N@Z
_TEXT	SEGMENT
__Wherenode$ = -20					; size = 4
tv626 = -16						; size = 4
tv623 = -12						; size = 4
_this$ = -8						; size = 4
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Node$ = 12						; size = 4
$T167441 = 16						; size = 4
__Where$155636 = 16					; size = 4
__Leftish$ = 16						; size = 1
?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@_N@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert, COMDAT
; _this$ = ecx

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 945  : 		const value_type& _Val = this->_Myval(_Node);
; 946  : 
; 947  : 		_Nodeptr _Trynode = _Root();

  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00009	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  0000c	53		 push	 ebx
  0000d	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  00010	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b f8		 mov	 edi, eax
  00018	b0 01		 mov	 al, 1
  0001a	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  0001d	88 45 fc	 mov	 BYTE PTR __Addleft$[ebp], al
  00020	0f 85 e7 00 00
	00		 jne	 $LN11@Linsert@2

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  00026	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00029	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0002c	89 4d f4	 mov	 DWORD PTR tv623[ebp], ecx
  0002f	89 45 f0	 mov	 DWORD PTR tv626[ebp], eax
  00032	eb 03		 jmp	 SHORT $LN12@Linsert@2
$LL218@Linsert@2:

; 944  : 		{	// try to insert node at _Node, on left if _Leftish

  00034	8b 4d f4	 mov	 ecx, DWORD PTR tv623[ebp]
$LN12@Linsert@2:

; 951  : 			{	// look for leaf to insert before (_Addleft) or after
; 952  : 			_Wherenode = _Trynode;
; 953  : 			if (_Leftish)

  00037	80 7d 10 00	 cmp	 BYTE PTR __Leftish$[ebp], 0
  0003b	89 5d ec	 mov	 DWORD PTR __Wherenode$[ebp], ebx

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

  0003e	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00041	74 55		 je	 SHORT $LN10@Linsert@2
  00043	83 7d f0 10	 cmp	 DWORD PTR tv626[ebp], 16 ; 00000010H
  00047	72 05		 jb	 SHORT $LN43@Linsert@2
  00049	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  0004c	eb 03		 jmp	 SHORT $LN44@Linsert@2
$LN43@Linsert@2:
  0004e	83 c2 0c	 add	 edx, 12			; 0000000cH
$LN44@Linsert@2:
  00051	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
  00054	8b ce		 mov	 ecx, esi
  00056	3b ce		 cmp	 ecx, esi
  00058	73 00		 jae	 SHORT $LN45@Linsert@2
$LN45@Linsert@2:
  0005a	8b 7d f4	 mov	 edi, DWORD PTR tv623[ebp]
  0005d	8b ce		 mov	 ecx, esi
  0005f	3b f7		 cmp	 esi, edi
  00061	72 02		 jb	 SHORT $LN50@Linsert@2
  00063	8b cf		 mov	 ecx, edi
$LN50@Linsert@2:
  00065	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00069	72 02		 jb	 SHORT $LN60@Linsert@2
  0006b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN60@Linsert@2:
  0006d	51		 push	 ecx
  0006e	52		 push	 edx
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	85 c0		 test	 eax, eax
  0007a	75 17		 jne	 SHORT $LN219@Linsert@2
  0007c	3b f7		 cmp	 esi, edi
  0007e	73 0a		 jae	 SHORT $LN51@Linsert@2
  00080	83 c8 ff	 or	 eax, -1
  00083	85 c0		 test	 eax, eax
  00085	0f 99 c0	 setns	 al

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00088	eb 62		 jmp	 SHORT $LN220@Linsert@2

; 954  : 				_Addleft = !_DEBUG_LT_PRED(this->comp,

$LN51@Linsert@2:
  0008a	33 c0		 xor	 eax, eax
  0008c	3b f7		 cmp	 esi, edi
  0008e	0f 95 c0	 setne	 al
  00091	85 c0		 test	 eax, eax
$LN219@Linsert@2:
  00093	0f 99 c0	 setns	 al

; 955  : 					this->_Key(_Trynode),
; 956  : 					this->_Kfn(_Val));	// favor left end
; 957  : 			else

  00096	eb 54		 jmp	 SHORT $LN220@Linsert@2
$LN10@Linsert@2:

; 958  : 				_Addleft = _DEBUG_LT_PRED(this->comp,

  00098	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0009c	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
  0009f	72 02		 jb	 SHORT $LN84@Linsert@2
  000a1	8b 00		 mov	 eax, DWORD PTR [eax]
$LN84@Linsert@2:
  000a3	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  000a6	8b 72 1c	 mov	 esi, DWORD PTR [edx+28]
  000a9	3b ce		 cmp	 ecx, esi
  000ab	73 02		 jae	 SHORT $LN86@Linsert@2
  000ad	8b f1		 mov	 esi, ecx
$LN86@Linsert@2:
  000af	8b d6		 mov	 edx, esi
  000b1	3b f7		 cmp	 esi, edi
  000b3	72 02		 jb	 SHORT $LN91@Linsert@2
  000b5	8b d7		 mov	 edx, edi
$LN91@Linsert@2:
  000b7	83 7d f0 10	 cmp	 DWORD PTR tv626[ebp], 16 ; 00000010H
  000bb	8b 4d 0c	 mov	 ecx, DWORD PTR __Node$[ebp]
  000be	72 05		 jb	 SHORT $LN101@Linsert@2
  000c0	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  000c3	eb 03		 jmp	 SHORT $LN102@Linsert@2
$LN101@Linsert@2:
  000c5	83 c1 0c	 add	 ecx, 12			; 0000000cH
$LN102@Linsert@2:
  000c8	52		 push	 edx
  000c9	50		 push	 eax
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  000d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d3	85 c0		 test	 eax, eax
  000d5	75 12		 jne	 SHORT $LN221@Linsert@2
  000d7	3b f7		 cmp	 esi, edi
  000d9	73 05		 jae	 SHORT $LN92@Linsert@2
  000db	83 c8 ff	 or	 eax, -1
  000de	eb 07		 jmp	 SHORT $LN93@Linsert@2
$LN92@Linsert@2:
  000e0	33 c0		 xor	 eax, eax
  000e2	3b f7		 cmp	 esi, edi
  000e4	0f 95 c0	 setne	 al
$LN93@Linsert@2:
  000e7	85 c0		 test	 eax, eax
$LN221@Linsert@2:
  000e9	0f 98 c0	 sets	 al
$LN220@Linsert@2:
  000ec	88 45 fc	 mov	 BYTE PTR __Addleft$[ebp], al

; 959  : 					this->_Kfn(_Val),
; 960  : 					this->_Key(_Trynode));	// favor right end
; 961  : 			_Trynode = _Addleft ? this->_Left(_Trynode)
; 962  : 				: this->_Right(_Trynode);

  000ef	84 c0		 test	 al, al
  000f1	74 04		 je	 SHORT $LN15@Linsert@2
  000f3	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  000f5	eb 03		 jmp	 SHORT $LN16@Linsert@2
$LN15@Linsert@2:
  000f7	8b 5b 08	 mov	 ebx, DWORD PTR [ebx+8]
$LN16@Linsert@2:

; 948  : 		_Nodeptr _Wherenode = this->_Myhead;
; 949  : 		bool _Addleft = true;	// add to left of head if tree empty
; 950  : 		while (!this->_Isnil(_Trynode))

  000fa	80 7b 2d 00	 cmp	 BYTE PTR [ebx+45], 0
  000fe	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
  00101	0f 84 2d ff ff
	ff		 je	 $LL218@Linsert@2
  00107	8b 7d ec	 mov	 edi, DWORD PTR __Wherenode$[ebp]
  0010a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
$LN11@Linsert@2:

; 963  : 			}
; 964  : 
; 965  : 		if (this->_Multi)
; 966  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));
; 967  : 		else
; 968  : 			{	// insert only if unique
; 969  : 			iterator _Where = iterator(_Wherenode, this);

  0010d	8b f7		 mov	 esi, edi
  0010f	89 75 10	 mov	 DWORD PTR __Where$155636[ebp], esi

; 970  : 			if (!_Addleft)

  00112	84 c0		 test	 al, al
  00114	74 36		 je	 SHORT $LN160@Linsert@2

; 971  : 				;	// need to test if insert after is okay
; 972  : 			else if (_Where == begin())

  00116	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00119	3b 38		 cmp	 edi, DWORD PTR [eax]
  0011b	75 21		 jne	 SHORT $LN4@Linsert@2

; 973  : 				return (_Pairib(_Insert(true, _Wherenode, _Node), true));

  0011d	52		 push	 edx
  0011e	57		 push	 edi
  0011f	6a 01		 push	 1
$LN223@Linsert@2:
  00121	8d 55 10	 lea	 edx, DWORD PTR $T167441[ebp]
  00124	52		 push	 edx
  00125	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	89 08		 mov	 DWORD PTR [eax], ecx
  00133	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  00137	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c2 0c 00	 ret	 12			; 0000000cH
$LN4@Linsert@2:

; 974  : 			else
; 975  : 				--_Where;	// need to test if insert before is okay

  0013e	8d 4d 10	 lea	 ecx, DWORD PTR __Where$155636[ebp]
  00141	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
  00146	8b 75 10	 mov	 esi, DWORD PTR __Where$155636[ebp]
  00149	8b 55 0c	 mov	 edx, DWORD PTR __Node$[ebp]
$LN160@Linsert@2:

; 976  : 
; 977  : 			if (_DEBUG_LT_PRED(this->comp,

  0014c	83 7a 20 10	 cmp	 DWORD PTR [edx+32], 16	; 00000010H
  00150	8d 5a 0c	 lea	 ebx, DWORD PTR [edx+12]
  00153	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  00156	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00159	72 04		 jb	 SHORT $LN182@Linsert@2
  0015b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0015d	eb 02		 jmp	 SHORT $LN183@Linsert@2
$LN182@Linsert@2:
  0015f	8b c3		 mov	 eax, ebx
$LN183@Linsert@2:
  00161	52		 push	 edx
  00162	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00165	50		 push	 eax
  00166	52		 push	 edx
  00167	6a 00		 push	 0
  00169	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  0016e	85 c0		 test	 eax, eax
  00170	79 0e		 jns	 SHORT $LN2@Linsert@2

; 978  : 				this->_Key(_Where._Mynode()),
; 979  : 				this->_Kfn(_Val)))
; 980  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Node), true));

  00172	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  00175	8b 4d fc	 mov	 ecx, DWORD PTR __Addleft$[ebp]
  00178	50		 push	 eax
  00179	57		 push	 edi
  0017a	51		 push	 ecx
  0017b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0017e	eb a1		 jmp	 SHORT $LN223@Linsert@2
$LN2@Linsert@2:

; 981  : 			else
; 982  : 				{	// duplicate, don't insert
; 983  : 				_Dest_val(this->_Alval,
; 984  : 					_STD addressof(this->_Myval(_Node)));

  00180	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00183	83 c2 0d	 add	 edx, 13			; 0000000dH
  00186	53		 push	 ebx
  00187	52		 push	 edx
  00188	e8 00 00 00 00	 call	 ??$_Dest_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@@Z ; std::_Dest_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >

; 985  : 
; 986  : 				this->_Alnod.deallocate(_Node, 1);

  0018d	8b 45 0c	 mov	 eax, DWORD PTR __Node$[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 987  : 
; 988  : 				return (_Pairib(_Where, false));

  00196	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00199	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019c	5f		 pop	 edi
  0019d	89 30		 mov	 DWORD PTR [eax], esi
  0019f	5e		 pop	 esi
  001a0	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  001a4	5b		 pop	 ebx

; 989  : 				}
; 990  : 			}
; 991  : 		}

  001a5	8b e5		 mov	 esp, ebp
  001a7	5d		 pop	 ebp
  001a8	c2 0c 00	 ret	 12			; 0000000cH
?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@_N@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert
_TEXT	ENDS
PUBLIC	?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z$0
__ehfuncinfo$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z
_TEXT	SEGMENT
$T168079 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z PROC ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::construct, COMDAT
; _this$ = ecx

; 201  : 		{	// construct object at _Ptr with value _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 202  : 		::new ((void _FARQ *)_Ptr) _Ty(_STD forward<_Ty>(_Val));

  00025	8b 75 08	 mov	 esi, DWORD PTR __Ptr$[ebp]
  00028	89 75 f0	 mov	 DWORD PTR $T168079[ebp], esi
  0002b	33 c0		 xor	 eax, eax
  0002d	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00030	3b f0		 cmp	 esi, eax
  00032	74 20		 je	 SHORT $LN3@construct@2
  00034	8b 7d 0c	 mov	 edi, DWORD PTR __Val$[ebp]
  00037	6a ff		 push	 -1
  00039	50		 push	 eax
  0003a	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00041	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00044	57		 push	 edi
  00045	8b ce		 mov	 ecx, esi
  00047	88 06		 mov	 BYTE PTR [esi], al
  00049	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004e	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00051	89 46 1c	 mov	 DWORD PTR [esi+28], eax
$LN3@construct@2:

; 203  : 		}

  00054	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005e	59		 pop	 ecx
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z$0:
  00000	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00003	50		 push	 eax
  00004	8b 4d f0	 mov	 ecx, DWORD PTR $T168079[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?construct@?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@QAEXPAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@$$QAU32@@Z ENDP ; std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >::construct
PUBLIC	__$ArrayPad$
PUBLIC	?DeleteGuild@CGuildClass@@QAEHPAD0@Z		; CGuildClass::DeleteGuild
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$?DeleteGuild@CGuildClass@@QAEHPAD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DeleteGuild@CGuildClass@@QAEHPAD0@Z$0
__ehfuncinfo$?DeleteGuild@CGuildClass@@QAEHPAD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DeleteGuild@CGuildClass@@QAEHPAD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
xdata$x	ENDS
;	COMDAT ?DeleteGuild@CGuildClass@@QAEHPAD0@Z
_TEXT	SEGMENT
_pNode$ = -56						; size = 4
$T168499 = -52						; size = 4
$T168674 = -52						; size = 4
__Where$168746 = -48					; size = 4
$T168288 = -48						; size = 4
__Itor$ = -48						; size = 4
$T168285 = -48						; size = 4
$T153640 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_guildname$ = 8						; size = 4
_commander$ = 12					; size = 4
?DeleteGuild@CGuildClass@@QAEHPAD0@Z PROC		; CGuildClass::DeleteGuild, COMDAT
; _this$ = ecx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?DeleteGuild@CGuildClass@@QAEHPAD0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 75 08	 mov	 esi, DWORD PTR _guildname$[ebp]

; 145  : 	_GUILD_INFO_STRUCT * pNode = this->SearchGuild(guildname);

  0002e	56		 push	 esi
  0002f	8b d9		 mov	 ebx, ecx
  00031	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

; 146  : 	_GUILD_INFO_STRUCT * pprev;
; 147  : 	_GUILD_INFO_STRUCT * pnext;
; 148  : 
; 149  : 
; 150  : 	if ( pNode == NULL )

  00036	33 ff		 xor	 edi, edi
  00038	89 45 c8	 mov	 DWORD PTR _pNode$[ebp], eax
  0003b	3b c7		 cmp	 eax, edi
  0003d	75 07		 jne	 SHORT $LN11@DeleteGuil

; 151  : 	{
; 152  : 		return false;

  0003f	33 c0		 xor	 eax, eax
  00041	e9 5c 01 00 00	 jmp	 $LN12@DeleteGuil
$LN11@DeleteGuil:

; 153  : 	}
; 154  : 
; 155  : 	std::map<std::string, _GUILD_INFO_STRUCT *>::iterator Itor = this->m_GuildMap.find(guildname);

  00046	8b c6		 mov	 eax, esi
  00048	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T153640[ebp+20], 15 ; 0000000fH
  0004f	89 7d e4	 mov	 DWORD PTR $T153640[ebp+16], edi
  00052	c6 45 d4 00	 mov	 BYTE PTR $T153640[ebp], 0
  00056	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00059	8d a4 24 00 00
	00 00		 npad	 7
$LL176@DeleteGuil:
  00060	8a 10		 mov	 dl, BYTE PTR [eax]
  00062	40		 inc	 eax
  00063	84 d2		 test	 dl, dl
  00065	75 f9		 jne	 SHORT $LL176@DeleteGuil
  00067	2b c1		 sub	 eax, ecx
  00069	50		 push	 eax
  0006a	56		 push	 esi
  0006b	8d 4d d4	 lea	 ecx, DWORD PTR $T153640[ebp]
  0006e	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00073	8d 45 d4	 lea	 eax, DWORD PTR $T153640[ebp]
  00076	50		 push	 eax
  00077	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  0007a	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0007d	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
  00082	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00085	89 45 d0	 mov	 DWORD PTR __Where$168746[ebp], eax
  00088	3b c7		 cmp	 eax, edi
  0008a	74 5b		 je	 SHORT $LN47@DeleteGuil
  0008c	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0008f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00092	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00096	89 55 cc	 mov	 DWORD PTR $T168499[ebp], edx
  00099	72 02		 jb	 SHORT $LN89@DeleteGuil
  0009b	8b 00		 mov	 eax, DWORD PTR [eax]
$LN89@DeleteGuil:
  0009d	8b 4d e4	 mov	 ecx, DWORD PTR $T153640[ebp+16]
  000a0	3b ca		 cmp	 ecx, edx
  000a2	73 02		 jae	 SHORT $LN95@DeleteGuil
  000a4	8b d1		 mov	 edx, ecx
$LN95@DeleteGuil:
  000a6	83 7d e8 10	 cmp	 DWORD PTR $T153640[ebp+20], 16 ; 00000010H
  000aa	8b 4d d4	 mov	 ecx, DWORD PTR $T153640[ebp]
  000ad	73 03		 jae	 SHORT $LN107@DeleteGuil
  000af	8d 4d d4	 lea	 ecx, DWORD PTR $T153640[ebp]
$LN107@DeleteGuil:
  000b2	52		 push	 edx
  000b3	50		 push	 eax
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ?compare@?$char_traits@D@std@@SAHPBD0I@Z ; std::char_traits<char>::compare
  000ba	83 c4 0c	 add	 esp, 12			; 0000000cH
  000bd	85 c0		 test	 eax, eax
  000bf	75 1a		 jne	 SHORT $LN179@DeleteGuil
  000c1	8b 45 e4	 mov	 eax, DWORD PTR $T153640[ebp+16]
  000c4	8b 4d cc	 mov	 ecx, DWORD PTR $T168499[ebp]
  000c7	3b c1		 cmp	 eax, ecx
  000c9	73 05		 jae	 SHORT $LN97@DeleteGuil
  000cb	83 c8 ff	 or	 eax, -1
  000ce	eb 09		 jmp	 SHORT $LN98@DeleteGuil
$LN97@DeleteGuil:
  000d0	33 d2		 xor	 edx, edx
  000d2	3b c1		 cmp	 eax, ecx
  000d4	0f 95 c2	 setne	 dl
  000d7	8b c2		 mov	 eax, edx
$LN98@DeleteGuil:
  000d9	85 c0		 test	 eax, eax
$LN179@DeleteGuil:
  000db	0f 98 c0	 sets	 al
  000de	84 c0		 test	 al, al
  000e0	75 05		 jne	 SHORT $LN47@DeleteGuil
  000e2	8d 45 d0	 lea	 eax, DWORD PTR __Where$168746[ebp]
  000e5	eb 06		 jmp	 SHORT $LN48@DeleteGuil
$LN47@DeleteGuil:
  000e7	89 7d cc	 mov	 DWORD PTR $T168674[ebp], edi
  000ea	8d 45 cc	 lea	 eax, DWORD PTR $T168674[ebp]
$LN48@DeleteGuil:
  000ed	83 7d e8 10	 cmp	 DWORD PTR $T153640[ebp+20], 16 ; 00000010H
  000f1	8b 38		 mov	 edi, DWORD PTR [eax]
  000f3	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000fa	72 0c		 jb	 SHORT $LN133@DeleteGuil
  000fc	8b 45 d4	 mov	 eax, DWORD PTR $T153640[ebp]
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00105	83 c4 04	 add	 esp, 4
$LN133@DeleteGuil:

; 156  : 
; 157  : 	if( Itor != this->m_GuildMap.end() )

  00108	3b 7b 10	 cmp	 edi, DWORD PTR [ebx+16]
  0010b	74 0d		 je	 SHORT $LN10@DeleteGuil

; 158  : 	{
; 159  : 		this->m_GuildMap.erase(Itor);

  0010d	57		 push	 edi
  0010e	8d 4d d0	 lea	 ecx, DWORD PTR $T168285[ebp]
  00111	51		 push	 ecx
  00112	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  00115	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
$LN10@DeleteGuil:

; 160  : 	}
; 161  : 
; 162  : 	std::map<int , _GUILD_INFO_STRUCT *>::iterator _Itor = this->m_GuildNumberMap.find(pNode->Number);

  0011a	8b 7d c8	 mov	 edi, DWORD PTR _pNode$[ebp]
  0011d	57		 push	 edi
  0011e	8d 55 d0	 lea	 edx, DWORD PTR __Itor$[ebp]
  00121	52		 push	 edx
  00122	8d 4b 1c	 lea	 ecx, DWORD PTR [ebx+28]
  00125	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@ABH@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::find

; 163  : 
; 164  : 	if ( _Itor != this->m_GuildNumberMap.end() )

  0012a	8b 45 d0	 mov	 eax, DWORD PTR __Itor$[ebp]
  0012d	3b 43 20	 cmp	 eax, DWORD PTR [ebx+32]
  00130	74 0d		 je	 SHORT $LN9@DeleteGuil

; 165  : 	{
; 166  : 		this->m_GuildNumberMap.erase(_Itor);

  00132	50		 push	 eax
  00133	8d 45 d0	 lea	 eax, DWORD PTR $T168288[ebp]
  00136	50		 push	 eax
  00137	8d 4b 1c	 lea	 ecx, DWORD PTR [ebx+28]
  0013a	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
$LN9@DeleteGuil:

; 167  : 	}
; 168  : 
; 169  : 	pprev = pNode->back;

  0013f	8b b7 34 07 00
	00		 mov	 esi, DWORD PTR [edi+1844]

; 170  : 	pnext = pNode->next;

  00145	8b bf 38 07 00
	00		 mov	 edi, DWORD PTR [edi+1848]

; 171  : 
; 172  : 	if ( pprev == NULL && pnext == NULL )

  0014b	33 c0		 xor	 eax, eax
  0014d	3b f0		 cmp	 esi, eax
  0014f	75 0f		 jne	 SHORT $LN173@DeleteGuil
  00151	3b f8		 cmp	 edi, eax
  00153	74 26		 je	 SHORT $LN2@DeleteGuil

; 173  : 	{
; 174  : 
; 175  : 	}
; 176  : 	else if ( pprev == NULL && pnext != NULL )
; 177  : 	{
; 178  : 		pnext->back = NULL;

  00155	89 87 34 07 00
	00		 mov	 DWORD PTR [edi+1844], eax

; 179  : 		this->head = pnext;

  0015b	89 7b 04	 mov	 DWORD PTR [ebx+4], edi
  0015e	eb 1b		 jmp	 SHORT $LN2@DeleteGuil
$LN173@DeleteGuil:

; 180  : 	}
; 181  : 	else if ( pprev != NULL && pnext == NULL )

  00160	3b f8		 cmp	 edi, eax
  00162	75 0b		 jne	 SHORT $LN4@DeleteGuil

; 182  : 	{
; 183  : 		pprev->next = NULL;

  00164	89 86 38 07 00
	00		 mov	 DWORD PTR [esi+1848], eax

; 184  : 		this->tail = pprev;

  0016a	89 73 08	 mov	 DWORD PTR [ebx+8], esi
  0016d	eb 0c		 jmp	 SHORT $LN2@DeleteGuil
$LN4@DeleteGuil:

; 185  : 	}
; 186  : 	else if ( pprev != NULL && pnext != NULL )
; 187  : 	{
; 188  : 		pprev->next = pnext;

  0016f	89 be 38 07 00
	00		 mov	 DWORD PTR [esi+1848], edi

; 189  : 		pnext->back = pprev;

  00175	89 b7 34 07 00
	00		 mov	 DWORD PTR [edi+1844], esi
$LN2@DeleteGuil:

; 190  : 	}
; 191  : 
; 192  : 	HeapFree(GetProcessHeap(), 0, pNode);

  0017b	8b 4d c8	 mov	 ecx, DWORD PTR _pNode$[ebp]
  0017e	51		 push	 ecx
  0017f	50		 push	 eax
  00180	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
  00186	50		 push	 eax
  00187	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapFree@12

; 193  : 
; 194  : 	if ( pprev == NULL && pnext == NULL )

  0018d	33 c0		 xor	 eax, eax
  0018f	3b f0		 cmp	 esi, eax
  00191	75 0a		 jne	 SHORT $LN1@DeleteGuil
  00193	3b f8		 cmp	 edi, eax
  00195	75 06		 jne	 SHORT $LN1@DeleteGuil

; 195  : 	{
; 196  : 		this->head=NULL;

  00197	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 197  : 		this->tail = NULL;

  0019a	89 43 08	 mov	 DWORD PTR [ebx+8], eax
$LN1@DeleteGuil:

; 198  : 	}
; 199  : 
; 200  : 	return true;

  0019d	b8 01 00 00 00	 mov	 eax, 1
$LN12@DeleteGuil:

; 201  : }

  001a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ac	59		 pop	 ecx
  001ad	5f		 pop	 edi
  001ae	5e		 pop	 esi
  001af	5b		 pop	 ebx
  001b0	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b3	33 cd		 xor	 ecx, ebp
  001b5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DeleteGuild@CGuildClass@@QAEHPAD0@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T153640[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?DeleteGuild@CGuildClass@@QAEHPAD0@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?DeleteGuild@CGuildClass@@QAEHPAD0@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?DeleteGuild@CGuildClass@@QAEHPAD0@Z ENDP		; CGuildClass::DeleteGuild
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::clear
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::clear, COMDAT
; _this$ = ecx

; 1410 : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1411 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1412 : 		this->_Orphan_ptr(*this, 0);
; 1413 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1414 : 
; 1415 : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase

; 1416 : 		_Root() = this->_Myhead;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 1417 : 		_Lmost() = this->_Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	89 00		 mov	 DWORD PTR [eax], eax

; 1418 : 		_Rmost() = this->_Myhead;

  0001c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001f	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1419 : 		this->_Mysize = 0;

  00022	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00029	5e		 pop	 esi

; 1420 : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
; Function compile flags: /Ogtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z
_TEXT	SEGMENT
$T168969 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase, COMDAT
; _this$ = ecx

; 1379 : 		{	// erase [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1380 : 		if (_First == begin() && _Last == end())

  00004	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  00010	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $LN115@erase@5
  00014	3b d0		 cmp	 edx, eax
  00016	75 34		 jne	 SHORT $LN115@erase@5

; 1381 : 			{	// erase all
; 1382 : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b ce		 mov	 ecx, esi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 00		 mov	 DWORD PTR [eax], eax
  0002e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00031	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 1383 : 			return (begin());

  00034	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00037	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	89 10		 mov	 DWORD PTR [eax], edx
  00045	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 0c 00	 ret	 12			; 0000000cH
$LN115@erase@5:

; 1384 : 			}
; 1385 : 		else
; 1386 : 			{	// partial erase, one at a time
; 1387 : 			while (_First != _Last)

  0004c	3b ca		 cmp	 ecx, edx
  0004e	74 62		 je	 SHORT $LN1@erase@5
$LL2@erase@5:

; 1388 : 				erase(_First++);

  00050	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0
  00054	8b d1		 mov	 edx, ecx
  00056	75 46		 jne	 SHORT $LN77@erase@5
  00058	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0005b	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  0005f	75 1e		 jne	 SHORT $LN117@erase@5
  00061	8b c8		 mov	 ecx, eax
  00063	8b 01		 mov	 eax, DWORD PTR [ecx]
  00065	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  00069	75 0f		 jne	 SHORT $LN91@erase@5
  0006b	eb 03 8d 49 00	 npad	 5
$LL92@erase@5:
  00070	8b c8		 mov	 ecx, eax
  00072	8b 01		 mov	 eax, DWORD PTR [ecx]
  00074	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  00078	74 f6		 je	 SHORT $LL92@erase@5
$LN91@erase@5:
  0007a	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  0007d	eb 1f		 jmp	 SHORT $LN77@erase@5
$LN117@erase@5:
  0007f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00082	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  00086	75 13		 jne	 SHORT $LN75@erase@5
$LL76@erase@5:
  00088	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0008b	75 0e		 jne	 SHORT $LN75@erase@5
  0008d	8b c8		 mov	 ecx, eax
  0008f	89 4d 0c	 mov	 DWORD PTR __First$[ebp], ecx
  00092	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00095	80 78 2d 00	 cmp	 BYTE PTR [eax+45], 0
  00099	74 ed		 je	 SHORT $LL76@erase@5
$LN75@erase@5:
  0009b	89 45 0c	 mov	 DWORD PTR __First$[ebp], eax
$LN77@erase@5:
  0009e	52		 push	 edx
  0009f	8d 45 fc	 lea	 eax, DWORD PTR $T168969[ebp]
  000a2	50		 push	 eax
  000a3	8b ce		 mov	 ecx, esi
  000a5	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
  000aa	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  000ad	3b 4d 10	 cmp	 ecx, DWORD PTR __Last$[ebp]
  000b0	75 9e		 jne	 SHORT $LL2@erase@5
$LN1@erase@5:

; 1389 : 			return (iterator(_First._Ptr, this));

  000b2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000b5	89 08		 mov	 DWORD PTR [eax], ecx
  000b7	5e		 pop	 esi

; 1390 : 			}
; 1391 : 		}

  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
; Function compile flags: /Ogtp
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
$T169360 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Next$ = 16						; size = 4
__Node$ = 16						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 1089 : 		{	// try to insert node at _Node using _Where as a hint

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 1090 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1091 : 		if (_Where._Getcont() != this)
; 1092 : 			_DEBUG_ERROR("map/set insert iterator outside range");
; 1093 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1094 : 
; 1095 : 		const value_type& _Val = this->_Myval(_Node);

  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Node$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx

; 1096 : 
; 1097 : 		const_iterator _Next;
; 1098 : 		bool _Leftish = false;	// assume nearest point is end of sequence
; 1099 : 
; 1100 : 		if (size() == 0)

  0000d	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0

; 1101 : 			return (_Insert(true, this->_Myhead, _Node));	// empty tree

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	57		 push	 edi
  00015	8d 7b 0c	 lea	 edi, DWORD PTR [ebx+12]
  00018	75 18		 jne	 SHORT $LN33@Insert@4
  0001a	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	53		 push	 ebx
  0001e	50		 push	 eax
  0001f	6a 01		 push	 1
  00021	57		 push	 edi
  00022	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00027	8b c7		 mov	 eax, edi
  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx

; 1181 : 		}

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN33@Insert@4:

; 1102 : 		else if (this->_Multi)
; 1103 : 			{	// insert even if duplicate
; 1104 : 			if (_Where == begin())
; 1105 : 				{	// insert at beginning if before first element
; 1106 : 				if (!_DEBUG_LT_PRED(this->comp,
; 1107 : 					this->_Key(_Where._Mynode()), this->_Kfn(_Val)))
; 1108 : 					return (_Insert(true, _Where._Mynode(), _Node));
; 1109 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1110 : 				}
; 1111 : 			else if (_Where == end())
; 1112 : 				{	// insert at end if after last element
; 1113 : 				if (!_DEBUG_LT_PRED(this->comp,
; 1114 : 					this->_Kfn(_Val), this->_Key(_Rmost())))
; 1115 : 					return (_Insert(false, _Rmost(), _Node));
; 1116 : 				}
; 1117 : 			else if (!_DEBUG_LT_PRED(this->comp,
; 1118 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1119 : 				&& !_DEBUG_LT_PRED(this->comp,
; 1120 : 					this->_Kfn(_Val),
; 1121 : 					this->_Key((--(_Next = _Where))._Mynode())))
; 1122 : 				{	// insert before _Where
; 1123 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))
; 1124 : 					return (_Insert(false, _Next._Mynode(), _Node));
; 1125 : 				else
; 1126 : 					return (_Insert(true, _Where._Mynode(), _Node));
; 1127 : 				}
; 1128 : 			else if (!_DEBUG_LT_PRED(this->comp,
; 1129 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1130 : 				&& (++(_Next = _Where) == end()
; 1131 : 					|| !_DEBUG_LT_PRED(this->comp,
; 1132 : 						this->_Key(_Next._Mynode()), this->_Kfn(_Val))))
; 1133 : 				{	// insert after _Where
; 1134 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))
; 1135 : 					return (_Insert(false, _Where._Mynode(), _Node));
; 1136 : 				else
; 1137 : 					return (_Insert(true, _Next._Mynode(), _Node));
; 1138 : 				}
; 1139 : 			else
; 1140 : 				_Leftish = true;	// nearest point is beginning of sequence
; 1141 : 			}
; 1142 : 		else
; 1143 : 			{	// insert only if unique
; 1144 : 			if (_Where == begin())

  00032	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00035	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00037	75 42		 jne	 SHORT $LN14@Insert@4

; 1145 : 				{	// insert at beginning if before first element
; 1146 : 				if (_DEBUG_LT_PRED(this->comp,

  00039	83 79 20 10	 cmp	 DWORD PTR [ecx+32], 16	; 00000010H
  0003d	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00040	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00043	72 02		 jb	 SHORT $LN224@Insert@4
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
$LN224@Insert@4:
  00047	51		 push	 ecx
  00048	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0004b	50		 push	 eax
  0004c	51		 push	 ecx
  0004d	6a 00		 push	 0
  0004f	8b cf		 mov	 ecx, edi
  00051	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  00056	85 c0		 test	 eax, eax
  00058	0f 89 3e 01 00
	00		 jns	 $LN1@Insert@4

; 1147 : 					this->_Kfn(_Val), this->_Key(_Where._Mynode())))
; 1148 : 					return (_Insert(true, _Where._Mynode(), _Node));

  0005e	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00061	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00064	53		 push	 ebx
  00065	52		 push	 edx
  00066	6a 01		 push	 1
  00068	57		 push	 edi
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00070	8b c7		 mov	 eax, edi
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx

; 1181 : 		}

  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 0c 00	 ret	 12			; 0000000cH
$LN14@Insert@4:

; 1149 : 				}
; 1150 : 			else if (_Where == end())

  0007b	3b c8		 cmp	 ecx, eax
  0007d	75 37		 jne	 SHORT $LN11@Insert@4

; 1151 : 				{	// insert at end if after last element
; 1152 : 				if (_DEBUG_LT_PRED(this->comp,

  0007f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00082	83 c0 0c	 add	 eax, 12			; 0000000cH
  00085	57		 push	 edi
  00086	50		 push	 eax
  00087	8b ce		 mov	 ecx, esi
  00089	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  0008e	84 c0		 test	 al, al
  00090	0f 84 06 01 00
	00		 je	 $LN1@Insert@4

; 1153 : 					this->_Key(_Rmost()), this->_Kfn(_Val)))
; 1154 : 					return (_Insert(false, _Rmost(), _Node));

  00096	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00099	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0009c	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0009f	53		 push	 ebx
  000a0	51		 push	 ecx
  000a1	6a 00		 push	 0
  000a3	57		 push	 edi
  000a4	8b ce		 mov	 ecx, esi
  000a6	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  000ab	8b c7		 mov	 eax, edi
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx

; 1181 : 		}

  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 0c 00	 ret	 12			; 0000000cH
$LN11@Insert@4:

; 1155 : 				}
; 1156 : 			else if (_DEBUG_LT_PRED(this->comp,
; 1157 : 				this->_Kfn(_Val), this->_Key(_Where._Mynode()))
; 1158 : 				&& _DEBUG_LT_PRED(this->comp,

  000b6	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000b9	51		 push	 ecx
  000ba	57		 push	 edi
  000bb	8b ce		 mov	 ecx, esi
  000bd	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  000c2	84 c0		 test	 al, al
  000c4	74 5e		 je	 SHORT $LN8@Insert@4
  000c6	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  000c9	8d 4d 10	 lea	 ecx, DWORD PTR __Next$[ebp]
  000cc	89 55 10	 mov	 DWORD PTR __Next$[ebp], edx
  000cf	e8 00 00 00 00	 call	 ??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator--
  000d4	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
  000d7	57		 push	 edi
  000d8	83 c0 0c	 add	 eax, 12			; 0000000cH
  000db	50		 push	 eax
  000dc	8b ce		 mov	 ecx, esi
  000de	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  000e3	84 c0		 test	 al, al
  000e5	74 3d		 je	 SHORT $LN8@Insert@4

; 1159 : 					this->_Key((--(_Next = _Where))._Mynode()),
; 1160 : 					this->_Kfn(_Val)))
; 1161 : 				{	// insert before _Where
; 1162 : 				if (this->_Isnil(this->_Right(_Next._Mynode())))

  000e7	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
  000ea	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000ed	80 79 2d 00	 cmp	 BYTE PTR [ecx+45], 0

; 1163 : 					return (_Insert(false, _Next._Mynode(), _Node));

  000f1	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  000f4	53		 push	 ebx
  000f5	8b ce		 mov	 ecx, esi
  000f7	74 14		 je	 SHORT $LN7@Insert@4
  000f9	50		 push	 eax
  000fa	6a 00		 push	 0
  000fc	57		 push	 edi
  000fd	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00102	8b c7		 mov	 eax, edi
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx

; 1181 : 		}

  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c2 0c 00	 ret	 12			; 0000000cH
$LN7@Insert@4:

; 1164 : 				else
; 1165 : 					return (_Insert(true, _Where._Mynode(), _Node));

  0010d	8b 55 0c	 mov	 edx, DWORD PTR __Where$[ebp]
  00110	52		 push	 edx
  00111	6a 01		 push	 1
  00113	57		 push	 edi
  00114	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00119	8b c7		 mov	 eax, edi
  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5b		 pop	 ebx

; 1181 : 		}

  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 0c 00	 ret	 12			; 0000000cH
$LN8@Insert@4:

; 1166 : 				}
; 1167 : 			else if (_DEBUG_LT_PRED(this->comp,
; 1168 : 				this->_Key(_Where._Mynode()), this->_Kfn(_Val))
; 1169 : 				&& (++(_Next = _Where) == end()
; 1170 : 					|| _DEBUG_LT_PRED(this->comp,

  00124	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00127	57		 push	 edi
  00128	83 c0 0c	 add	 eax, 12			; 0000000cH
  0012b	50		 push	 eax
  0012c	8b ce		 mov	 ecx, esi
  0012e	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  00133	84 c0		 test	 al, al
  00135	74 65		 je	 SHORT $LN1@Insert@4
  00137	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  0013a	89 4d 10	 mov	 DWORD PTR __Next$[ebp], ecx
  0013d	8d 4d 10	 lea	 ecx, DWORD PTR __Next$[ebp]
  00140	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >,std::_Iterator_base0>::operator++
  00145	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
  00148	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0014b	74 13		 je	 SHORT $LN3@Insert@4
  0014d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00150	50		 push	 eax
  00151	57		 push	 edi
  00152	8b ce		 mov	 ecx, esi
  00154	e8 00 00 00 00	 call	 ??R?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QBE_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
  00159	84 c0		 test	 al, al
  0015b	74 3f		 je	 SHORT $LN1@Insert@4
  0015d	8b 45 10	 mov	 eax, DWORD PTR __Next$[ebp]
$LN3@Insert@4:

; 1171 : 						this->_Kfn(_Val), this->_Key(_Next._Mynode()))))
; 1172 : 				{	// insert after _Where
; 1173 : 				if (this->_Isnil(this->_Right(_Where._Mynode())))

  00160	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00163	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00166	80 7a 2d 00	 cmp	 BYTE PTR [edx+45], 0

; 1174 : 					return (_Insert(false, _Where._Mynode(), _Node));

  0016a	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0016d	53		 push	 ebx
  0016e	74 16		 je	 SHORT $LN2@Insert@4
  00170	51		 push	 ecx
  00171	6a 00		 push	 0
  00173	57		 push	 edi
  00174	8b ce		 mov	 ecx, esi
  00176	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  0017b	8b c7		 mov	 eax, edi
  0017d	5f		 pop	 edi
  0017e	5e		 pop	 esi
  0017f	5b		 pop	 ebx

; 1181 : 		}

  00180	8b e5		 mov	 esp, ebp
  00182	5d		 pop	 ebp
  00183	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Insert@4:

; 1175 : 				else
; 1176 : 					return (_Insert(true, _Next._Mynode(), _Node));

  00186	50		 push	 eax
  00187	6a 01		 push	 1
  00189	57		 push	 edi
  0018a	8b ce		 mov	 ecx, esi
  0018c	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@1@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00191	8b c7		 mov	 eax, edi
  00193	5f		 pop	 edi
  00194	5e		 pop	 esi
  00195	5b		 pop	 ebx

; 1181 : 		}

  00196	8b e5		 mov	 esp, ebp
  00198	5d		 pop	 ebp
  00199	c2 0c 00	 ret	 12			; 0000000cH
$LN1@Insert@4:

; 1177 : 				}
; 1178 : 			}
; 1179 : 
; 1180 : 		return (_Linsert(_Node, _Leftish).first);	// try usual insert

  0019c	6a 00		 push	 0
  0019e	53		 push	 ebx
  0019f	8d 45 f8	 lea	 eax, DWORD PTR $T169360[ebp]
  001a2	50		 push	 eax
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?_Linsert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@std@@_N@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@_N@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Linsert
  001aa	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ac	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi
  001b1	89 08		 mov	 DWORD PTR [eax], ecx
  001b3	5b		 pop	 ebx

; 1181 : 		}

  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c2 0c 00	 ret	 12			; 0000000cH
?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
_TEXT	ENDS
PUBLIC	??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z$0
__ehfuncinfo$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z
_TEXT	SEGMENT
$T170276 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Alval$ = 8						; size = 4
__Pdest$ = 12						; size = 4
__Src$ = 16						; size = 4
??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z PROC ; std::_Cons_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT

; 279  : 	{	// construct using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 280  : 	_Alval.construct(_Pdest, _STD forward<_Ty2>(_Src));

  00025	8b 75 0c	 mov	 esi, DWORD PTR __Pdest$[ebp]
  00028	89 75 f0	 mov	 DWORD PTR $T170276[ebp], esi
  0002b	33 c0		 xor	 eax, eax
  0002d	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  00030	3b f0		 cmp	 esi, eax
  00032	74 20		 je	 SHORT $LN7@Cons_val@2
  00034	8b 7d 10	 mov	 edi, DWORD PTR __Src$[ebp]
  00037	6a ff		 push	 -1
  00039	50		 push	 eax
  0003a	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH
  00041	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00044	57		 push	 edi
  00045	8b ce		 mov	 ecx, esi
  00047	88 06		 mov	 BYTE PTR [esi], al
  00049	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004e	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00051	89 46 1c	 mov	 DWORD PTR [esi+28], eax
$LN7@Cons_val@2:

; 281  : 	}

  00054	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00057	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005e	59		 pop	 ecx
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z$0:
  00000	8b 45 0c	 mov	 eax, DWORD PTR __Pdest$[ebp]
  00003	50		 push	 eax
  00004	8b 4d f0	 mov	 ecx, DWORD PTR $T170276[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z:
  00011	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00015	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00018	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0001b	33 c8		 xor	 ecx, eax
  0001d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00022	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z
  00027	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z ENDP ; std::_Cons_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
PUBLIC	?Init@CGuildClass@@QAEXXZ			; CGuildClass::Init
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
;	COMDAT ?Init@CGuildClass@@QAEXXZ
_TEXT	SEGMENT
?Init@CGuildClass@@QAEXXZ PROC				; CGuildClass::Init, COMDAT
; _this$ = ecx

; 25   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 26   : 	this->m_GuildMap.clear();

  00004	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00007	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000a	51		 push	 ecx
  0000b	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0000e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
  00013	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00016	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00019	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0001c	89 00		 mov	 DWORD PTR [eax], eax
  0001e	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00021	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00024	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 27   : 	this->m_GuildNumberMap.clear();

  0002b	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	e9 00 00 00 00	 jmp	 ?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::clear
?Init@CGuildClass@@QAEXXZ ENDP				; CGuildClass::Init
_TEXT	ENDS
PUBLIC	?AllDelete@CGuildClass@@QAEXXZ			; CGuildClass::AllDelete
; Function compile flags: /Ogtp
;	COMDAT ?AllDelete@CGuildClass@@QAEXXZ
_TEXT	SEGMENT
?AllDelete@CGuildClass@@QAEXXZ PROC			; CGuildClass::AllDelete, COMDAT
; _this$ = ecx

; 124  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 125  : 	_GUILD_INFO_STRUCT * pNode = this->head;

  00005	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 126  : 	_GUILD_INFO_STRUCT * pTemp;
; 127  : 
; 128  : 	while ( pNode != NULL )

  00008	33 db		 xor	 ebx, ebx
  0000a	3b f3		 cmp	 esi, ebx
  0000c	74 1e		 je	 SHORT $LN1@AllDelete
  0000e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__HeapFree@12
$LL2@AllDelete:

; 129  : 	{
; 130  : 		pTemp = pNode;
; 131  : 		pNode = pNode->next;
; 132  : 		HeapFree(GetProcessHeap(), 0, pTemp);

  00014	56		 push	 esi
  00015	8b b6 38 07 00
	00		 mov	 esi, DWORD PTR [esi+1848]
  0001b	6a 00		 push	 0
  0001d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
  00023	50		 push	 eax
  00024	ff d3		 call	 ebx
  00026	85 f6		 test	 esi, esi
  00028	75 ea		 jne	 SHORT $LL2@AllDelete

; 126  : 	_GUILD_INFO_STRUCT * pTemp;
; 127  : 
; 128  : 	while ( pNode != NULL )

  0002a	33 db		 xor	 ebx, ebx
$LN1@AllDelete:

; 133  : 	}
; 134  : 
; 135  : 	this->head = NULL;

  0002c	89 5f 04	 mov	 DWORD PTR [edi+4], ebx

; 136  : 	this->tail = NULL;

  0002f	89 5f 08	 mov	 DWORD PTR [edi+8], ebx

; 137  : 	this->m_GuildMap.clear();

  00032	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	51		 push	 ecx
  00039	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0003c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Erase
  00041	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00044	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00047	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0004a	89 00		 mov	 DWORD PTR [eax], eax
  0004c	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0004f	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00052	89 5f 14	 mov	 DWORD PTR [edi+20], ebx

; 138  : 	this->m_GuildNumberMap.clear();

  00055	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	e9 00 00 00 00	 jmp	 ?clear@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::clear
?AllDelete@CGuildClass@@QAEXXZ ENDP			; CGuildClass::AllDelete
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tidy
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T170455 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1865 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1866 : 		erase(begin(), end());

  00004	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	52		 push	 edx
  0000b	8d 45 fc	 lea	 eax, DWORD PTR $T170455[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase

; 1867 : 		}

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__catchsym$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z$0
__unwindtable$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z$2
__ehfuncinfo$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
_TEXT	SEGMENT
$T170608 = -32						; size = 12
__Ptr$170602 = -20					; size = 4
__$EHRec$ = -16						; size = 16
$T170554 = 8						; size = 4
__Val$ = 8						; size = 4
??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 586  : 		_Nodeptr _Buynode(_Valty&& _Val)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f9		 mov	 edi, ecx

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

  0002d	6a 30		 push	 48			; 00000030H
  0002f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00034	8b f0		 mov	 esi, eax
  00036	33 c0		 xor	 eax, eax
  00038	83 c4 04	 add	 esp, 4
  0003b	89 75 ec	 mov	 DWORD PTR __Ptr$170602[ebp], esi
  0003e	3b f0		 cmp	 esi, eax
  00040	74 57		 je	 SHORT $LN12@Buynode@4
  00042	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00045	89 0e		 mov	 DWORD PTR [esi], ecx
  00047	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0004a	89 56 04	 mov	 DWORD PTR [esi+4], edx
  0004d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 589  : 
; 590  : 		_TRY_BEGIN
; 591  : 		_Cons_val(this->_Alval, _STD addressof(this->_Myval(_Wherenode)),
; 592  : 			_STD forward<_Valty>(_Val));

  00050	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  00053	66 89 46 2c	 mov	 WORD PTR [esi+44], ax
  00057	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+12], eax
  0005a	52		 push	 edx
  0005b	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0005e	50		 push	 eax
  0005f	83 c7 0d	 add	 edi, 13			; 0000000dH
  00062	57		 push	 edi
  00063	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00066	e8 00 00 00 00	 call	 ??$_Cons_val@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@std@@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@2@U32@@std@@YAXAAV?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@0@PAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@0@$$QAU20@@Z ; std::_Cons_val<std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *>,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 596  : 		_CATCH_END
; 597  : 
; 598  : 		return (_Wherenode);

  0006e	8b c6		 mov	 eax, esi

; 599  : 		}

  00070	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007a	59		 pop	 ecx
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
__catch$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z$0:

; 593  : 		_CATCH_ALL
; 594  : 		this->_Alnod.deallocate(_Wherenode, 1);

  00084	8b 4d ec	 mov	 ecx, DWORD PTR __Ptr$170602[ebp]
  00087	51		 push	 ecx
  00088	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008d	83 c4 04	 add	 esp, 4

; 595  : 		_RERAISE;

  00090	33 c0		 xor	 eax, eax
  00092	50		 push	 eax
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN45@Buynode@4:

; 587  : 		{	// allocate a node with defaults
; 588  : 		_Nodeptr _Wherenode = _Buynode();

$LN12@Buynode@4:
  00099	8d 55 08	 lea	 edx, DWORD PTR $T170554[ebp]
  0009c	52		 push	 edx
  0009d	8d 4d e0	 lea	 ecx, DWORD PTR $T170608[ebp]
  000a0	89 45 08	 mov	 DWORD PTR $T170554[ebp], eax
  000a3	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  000a8	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  000ad	8d 45 e0	 lea	 eax, DWORD PTR $T170608[ebp]
  000b0	50		 push	 eax
  000b1	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T170608[ebp], OFFSET ??_7bad_alloc@std@@6B@
  000b8	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN46@Buynode@4:
$LN44@Buynode@4:
  000bd	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T170747 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >, COMDAT
; _this$ = ecx

; 790  : 		{	// destroy tree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi

; 791  : 		_Tidy();

  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T170747[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase

; 792  : 		}

  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
__ehhandler$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
PUBLIC	??$insert@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
; Function compile flags: /Ogtp
;	COMDAT ??$insert@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
??$insert@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >, COMDAT
; _this$ = ecx

; 760  : 		typename _STD tr1::enable_if<!_STD tr1::is_same<const_iterator,

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 761  : 			typename _STD tr1::remove_reference<_Valty>::type>::value,
; 762  : 				iterator>::type
; 763  : 		insert(const_iterator _Where,
; 764  : 			_Valty&& _Val)
; 765  : 		{	// try to insert node with value _Val using _Where as a hint
; 766  : 		return (_Insert(_Where,
; 767  : 			this->_Buynode(_STD forward<_Valty>(_Val))));

  00003	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	50		 push	 eax
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Where$[ebp]
  00013	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  00016	50		 push	 eax
  00017	51		 push	 ecx
  00018	57		 push	 edi
  00019	8b ce		 mov	 ecx, esi
  0001b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  00020	8b c7		 mov	 eax, edi
  00022	5f		 pop	 edi
  00023	5e		 pop	 esi

; 768  : 		}

  00024	5d		 pop	 ebp
  00025	c2 0c 00	 ret	 12			; 0000000cH
??$insert@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
_TEXT	ENDS
PUBLIC	??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ$1
__ehfuncinfo$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T170936 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	8d 45 ec	 lea	 eax, DWORD PTR $T170936[ebp]
  00035	50		 push	 eax
  00036	8b ce		 mov	 ecx, esi
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
  00044	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004d	83 c4 04	 add	 esp, 4
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	5e		 pop	 esi
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
__ehhandler$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::~map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >
PUBLIC	??_7CGuildClass@@6B@				; CGuildClass::`vftable'
PUBLIC	??1CGuildClass@@UAE@XZ				; CGuildClass::~CGuildClass
PUBLIC	??_R4CGuildClass@@6B@				; CGuildClass::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGuildClass@@@8				; CGuildClass `RTTI Type Descriptor'
PUBLIC	??_R3CGuildClass@@8				; CGuildClass::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGuildClass@@8				; CGuildClass::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGuildClass@@8			; CGuildClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_ECGuildClass@@UAEPAXI@Z:PROC			; CGuildClass::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CGuildClass@@8
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xmemory
rdata$r	SEGMENT
??_R1A@?0A@EA@CGuildClass@@8 DD FLAT:??_R0?AVCGuildClass@@@8 ; CGuildClass::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGuildClass@@8
rdata$r	ENDS
;	COMDAT ??_R2CGuildClass@@8
rdata$r	SEGMENT
??_R2CGuildClass@@8 DD FLAT:??_R1A@?0A@EA@CGuildClass@@8 ; CGuildClass::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGuildClass@@8
rdata$r	SEGMENT
??_R3CGuildClass@@8 DD 00H				; CGuildClass::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGuildClass@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGuildClass@@@8
_DATA	SEGMENT
??_R0?AVCGuildClass@@@8 DD FLAT:??_7type_info@@6B@	; CGuildClass `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGuildClass@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CGuildClass@@6B@
rdata$r	SEGMENT
??_R4CGuildClass@@6B@ DD 00H				; CGuildClass::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGuildClass@@@8
	DD	FLAT:??_R3CGuildClass@@8
rdata$r	ENDS
;	COMDAT ??_7CGuildClass@@6B@
CONST	SEGMENT
??_7CGuildClass@@6B@ DD FLAT:??_R4CGuildClass@@6B@	; CGuildClass::`vftable'
	DD	FLAT:??_ECGuildClass@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CGuildClass@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CGuildClass@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CGuildClass@@UAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??1CGuildClass@@UAE@XZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??1CGuildClass@@UAE@XZ$5
__ehfuncinfo$??1CGuildClass@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CGuildClass@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
xdata$x	ENDS
;	COMDAT ??1CGuildClass@@UAE@XZ
_TEXT	SEGMENT
$T171177 = -24						; size = 4
$T171398 = -24						; size = 4
$T171367 = -20						; size = 4
$T171186 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CGuildClass@@UAE@XZ PROC				; CGuildClass::~CGuildClass, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CGuildClass@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx
  00029	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGuildClass@@6B@
  00032	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 21   : 	this->AllDelete();

  00039	e8 00 00 00 00	 call	 ?AllDelete@CGuildClass@@QAEXXZ ; CGuildClass::AllDelete

; 22   : }

  0003e	8d 7e 1c	 lea	 edi, DWORD PTR [esi+28]
  00041	89 7d ec	 mov	 DWORD PTR $T171186[ebp], edi
  00044	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	50		 push	 eax
  0004a	51		 push	 ecx
  0004b	8d 45 e8	 lea	 eax, DWORD PTR $T171177[ebp]
  0004e	50		 push	 eax
  0004f	8b cf		 mov	 ecx, edi
  00051	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00055	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::erase
  0005a	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0005d	57		 push	 edi
  0005e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00063	83 c6 0c	 add	 esi, 12			; 0000000cH
  00066	83 c4 04	 add	 esp, 4
  00069	89 75 e8	 mov	 DWORD PTR $T171398[ebp], esi
  0006c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	50		 push	 eax
  00072	51		 push	 ecx
  00073	8d 4d ec	 lea	 ecx, DWORD PTR $T171367[ebp]
  00076	51		 push	 ecx
  00077	8b ce		 mov	 ecx, esi
  00079	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00080	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@0@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::erase
  00085	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00088	52		 push	 edx
  00089	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008e	83 c4 04	 add	 esp, 4
  00091	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00094	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009b	59		 pop	 ecx
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CGuildClass@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
__unwindfunclet$??1CGuildClass@@UAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00011	e9 00 00 00 00	 jmp	 ??1?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAE@XZ
__unwindfunclet$??1CGuildClass@@UAE@XZ$3:
  00016	8b 4d ec	 mov	 ecx, DWORD PTR $T171186[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> >,0> >
__unwindfunclet$??1CGuildClass@@UAE@XZ$5:
  0001e	8b 4d e8	 mov	 ecx, DWORD PTR $T171398[ebp]
  00021	e9 00 00 00 00	 jmp	 ??1?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::~_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >
__ehhandler$??1CGuildClass@@UAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CGuildClass@@UAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CGuildClass@@UAE@XZ ENDP				; CGuildClass::~CGuildClass
PUBLIC	??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
;	COMDAT ??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T171553 = -16						; size = 12
$T171451 = -4						; size = 4
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >, COMDAT
; _this$ = ecx

; 106  : 		{	// construct empty map from defaults

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	6a 30		 push	 48			; 00000030H
  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 26		 je	 SHORT $LN25@map@2
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002c	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0002f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00032	b0 01		 mov	 al, 1
  00034	88 41 2c	 mov	 BYTE PTR [ecx+44], al
  00037	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003a	88 42 2d	 mov	 BYTE PTR [edx+45], al

; 107  : 		}

  0003d	8b c6		 mov	 eax, esi
  0003f	5e		 pop	 esi
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0

; 106  : 		{	// construct empty map from defaults

$LN25@map@2:
  00044	8d 45 fc	 lea	 eax, DWORD PTR $T171451[ebp]
  00047	50		 push	 eax
  00048	8d 4d f0	 lea	 ecx, DWORD PTR $T171553[ebp]
  0004b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR $T171451[ebp], 0
  00052	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  00057	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  0005c	8d 4d f0	 lea	 ecx, DWORD PTR $T171553[ebp]
  0005f	51		 push	 ecx
  00060	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T171553[ebp], OFFSET ??_7bad_alloc@std@@6B@
  00067	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN49@map@2:
$LN48@map@2:
  0006c	cc		 int	 3
??0?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::operator[]
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\map
xdata$x	ENDS
;	COMDAT ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T171582 = -52						; size = 4
$T154397 = -48						; size = 32
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::operator[], COMDAT
; _this$ = ecx

; 210  : 		{	// find element matching _Keyval or insert with default mapped

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 08	 mov	 edi, DWORD PTR __Keyval$[ebp]

; 211  : 		iterator _Where = this->lower_bound(_Keyval);

  0002e	57		 push	 edi
  0002f	8b f1		 mov	 esi, ecx
  00031	e8 00 00 00 00	 call	 ?_Lbound@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Lbound
  00036	8b d8		 mov	 ebx, eax

; 212  : 		if (_Where == this->end()
; 213  : 			|| this->comp(_Keyval, this->_Key(_Where._Mynode())))

  00038	3b 5e 04	 cmp	 ebx, DWORD PTR [esi+4]
  0003b	74 21		 je	 SHORT $LN1@operator@8
  0003d	83 7b 20 10	 cmp	 DWORD PTR [ebx+32], 16	; 00000010H
  00041	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  00044	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00047	72 02		 jb	 SHORT $LN46@operator@8
  00049	8b 00		 mov	 eax, DWORD PTR [eax]
$LN46@operator@8:
  0004b	51		 push	 ecx
  0004c	50		 push	 eax
  0004d	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	8b cf		 mov	 ecx, edi
  00055	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  0005a	85 c0		 test	 eax, eax
  0005c	79 59		 jns	 SHORT $LN121@operator@8
$LN1@operator@8:

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

  0005e	6a ff		 push	 -1
  00060	6a 00		 push	 0
  00062	57		 push	 edi
  00063	8d 4d d0	 lea	 ecx, DWORD PTR $T154397[ebp]
  00066	c7 45 e4 0f 00
	00 00		 mov	 DWORD PTR $T154397[ebp+20], 15 ; 0000000fH
  0006d	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T154397[ebp+16], 0
  00074	c6 45 d0 00	 mov	 BYTE PTR $T154397[ebp], 0
  00078	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0007d	33 c0		 xor	 eax, eax
  0007f	89 45 ec	 mov	 DWORD PTR $T154397[ebp+28], eax
  00082	8d 4d d0	 lea	 ecx, DWORD PTR $T154397[ebp]
  00085	51		 push	 ecx
  00086	8b ce		 mov	 ecx, esi
  00088	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  0008b	e8 00 00 00 00	 call	 ??$_Buynode@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@1@$$QAU?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >
  00090	50		 push	 eax
  00091	53		 push	 ebx
  00092	8d 55 cc	 lea	 edx, DWORD PTR $T171582[ebp]
  00095	52		 push	 edx
  00096	8b ce		 mov	 ecx, esi
  00098	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@V?$_Tree_const_iterator@V?$_Tree_val@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> >,0> >::_Insert
  0009d	83 7d e4 10	 cmp	 DWORD PTR $T154397[ebp+20], 16 ; 00000010H
  000a1	8b 75 cc	 mov	 esi, DWORD PTR $T171582[ebp]
  000a4	72 0c		 jb	 SHORT $LN120@operator@8
  000a6	8b 45 d0	 mov	 eax, DWORD PTR $T154397[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000af	83 c4 04	 add	 esp, 4
$LN120@operator@8:

; 216  : 		return ((*_Where).second);

  000b2	8d 46 28	 lea	 eax, DWORD PTR [esi+40]

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

  000b5	eb 03		 jmp	 SHORT $LN102@operator@8
$LN121@operator@8:

; 216  : 		return ((*_Where).second);

  000b7	8d 43 28	 lea	 eax, DWORD PTR [ebx+40]

; 214  : 			_Where = this->insert(_Where,
; 215  : 				value_type(_Keyval, mapped_type()));

$LN102@operator@8:

; 217  : 		}

  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
  00000	8d 4d d0	 lea	 ecx, DWORD PTR $T154397[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@QAE@XZ
__ehhandler$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::operator[]
PUBLIC	??0CGuildClass@@QAE@XZ				; CGuildClass::CGuildClass
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??0CGuildClass@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGuildClass@@QAE@XZ$0
__ehfuncinfo$??0CGuildClass@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGuildClass@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
xdata$x	ENDS
;	COMDAT ??0CGuildClass@@QAE@XZ
_TEXT	SEGMENT
$T172256 = -48						; size = 12
$T172471 = -36						; size = 12
_this$ = -24						; size = 4
$T172110 = -20						; size = 4
$T172325 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CGuildClass@@QAE@XZ PROC				; CGuildClass::CGuildClass, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGuildClass@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	89 75 e8	 mov	 DWORD PTR _this$[ebp], esi
  0002d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CGuildClass@@6B@
  00033	33 ff		 xor	 edi, edi
  00035	6a 30		 push	 48			; 00000030H
  00037	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  0003a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003f	83 c4 04	 add	 esp, 4
  00042	3b c7		 cmp	 eax, edi
  00044	0f 84 8e 00 00
	00		 je	 $LN29@CGuildClas
  0004a	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0004d	89 00		 mov	 DWORD PTR [eax], eax
  0004f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00052	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00055	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00058	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0005b	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0005e	b3 01		 mov	 bl, 1
  00060	88 58 2c	 mov	 BYTE PTR [eax+44], bl
  00063	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00066	88 59 2d	 mov	 BYTE PTR [ecx+45], bl
  00069	6a 18		 push	 24			; 00000018H
  0006b	89 7d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], edi
  0006e	89 7e 24	 mov	 DWORD PTR [esi+36], edi
  00071	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00076	83 c4 04	 add	 esp, 4
  00079	3b c7		 cmp	 eax, edi
  0007b	74 37		 je	 SHORT $LN76@CGuildClas
  0007d	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00080	89 00		 mov	 DWORD PTR [eax], eax
  00082	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00085	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00088	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0008b	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0008e	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  00091	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00094	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00097	88 58 15	 mov	 BYTE PTR [eax+21], bl

; 15   : 	this->head = NULL;

  0009a	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 16   : 	this->tail = NULL;

  0009d	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 17   : }

  000a0	8b c6		 mov	 eax, esi
  000a2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ac	59		 pop	 ecx
  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0

; 14   : {

$LN76@CGuildClas:
  000b4	8d 4d f0	 lea	 ecx, DWORD PTR $T172325[ebp]
  000b7	51		 push	 ecx
  000b8	8d 4d dc	 lea	 ecx, DWORD PTR $T172471[ebp]
  000bb	89 7d f0	 mov	 DWORD PTR $T172325[ebp], edi
  000be	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  000c3	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  000c8	8d 55 dc	 lea	 edx, DWORD PTR $T172471[ebp]
  000cb	52		 push	 edx
  000cc	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T172471[ebp], OFFSET ??_7bad_alloc@std@@6B@
  000d3	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN102@CGuildClas:
$LN29@CGuildClas:
  000d8	8d 45 ec	 lea	 eax, DWORD PTR $T172110[ebp]
  000db	50		 push	 eax
  000dc	8d 4d d0	 lea	 ecx, DWORD PTR $T172256[ebp]
  000df	89 7d ec	 mov	 DWORD PTR $T172110[ebp], edi
  000e2	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception
  000e7	68 00 00 00 00	 push	 OFFSET __TI2?AVbad_alloc@std@@
  000ec	8d 4d d0	 lea	 ecx, DWORD PTR $T172256[ebp]
  000ef	51		 push	 ecx
  000f0	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T172256[ebp], OFFSET ??_7bad_alloc@std@@6B@
  000f7	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN103@CGuildClas:
$LN101@CGuildClas:
  000fc	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGuildClass@@QAE@XZ$0:
  00000	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAE@XZ
__ehhandler$??0CGuildClass@@QAE@XZ:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGuildClass@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGuildClass@@QAE@XZ ENDP				; CGuildClass::CGuildClass
; Function compile flags: /Ogtp
;	COMDAT ??_GCGuildClass@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCGuildClass@@UAEPAXI@Z PROC				; CGuildClass::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CGuildClass@@UAE@XZ	; CGuildClass::~CGuildClass
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar@3
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar@3:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCGuildClass@@UAEPAXI@Z ENDP				; CGuildClass::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::AddTail
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z$0
__ehfuncinfo$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\guildclass.cpp
xdata$x	ENDS
;	COMDAT ?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z
_TEXT	SEGMENT
tv332 = -48						; size = 4
$T153460 = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pNewNode$ = 8						; size = 4
?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z PROC ; CGuildClass::AddTail, COMDAT
; _this$ = ecx

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 75 08	 mov	 esi, DWORD PTR _pNewNode$[ebp]
  0002e	8b f9		 mov	 edi, ecx

; 85   : 	pNewNode->back = this->tail;

  00030	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 86   : 	pNewNode->next = NULL;

  00033	33 db		 xor	 ebx, ebx
  00035	89 86 34 07 00
	00		 mov	 DWORD PTR [esi+1844], eax
  0003b	89 9e 38 07 00
	00		 mov	 DWORD PTR [esi+1848], ebx

; 87   : 
; 88   : 	if ( this->head == NULL )

  00041	39 5f 04	 cmp	 DWORD PTR [edi+4], ebx
  00044	75 05		 jne	 SHORT $LN2@AddTail

; 89   : 	{
; 90   : 		this->head = pNewNode;

  00046	89 77 04	 mov	 DWORD PTR [edi+4], esi

; 91   : 	}
; 92   : 	else

  00049	eb 09		 jmp	 SHORT $LN1@AddTail
$LN2@AddTail:

; 93   : 	{
; 94   : 		this->tail->next = pNewNode;

  0004b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004e	89 b1 38 07 00
	00		 mov	 DWORD PTR [ecx+1848], esi
$LN1@AddTail:

; 95   : 	}
; 96   : 
; 97   : 	this->tail = pNewNode;
; 98   : 	this->m_GuildMap[pNewNode->Name] = pNewNode;

  00054	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00057	8b c1		 mov	 eax, ecx
  00059	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0005c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0005f	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T153460[ebp+20], 15 ; 0000000fH
  00066	89 5d e4	 mov	 DWORD PTR $T153460[ebp+16], ebx
  00069	88 5d d4	 mov	 BYTE PTR $T153460[ebp], bl
  0006c	89 55 d0	 mov	 DWORD PTR tv332[ebp], edx
  0006f	90		 npad	 1
$LL58@AddTail:
  00070	8a 10		 mov	 dl, BYTE PTR [eax]
  00072	40		 inc	 eax
  00073	3a d3		 cmp	 dl, bl
  00075	75 f9		 jne	 SHORT $LL58@AddTail
  00077	2b 45 d0	 sub	 eax, DWORD PTR tv332[ebp]
  0007a	50		 push	 eax
  0007b	51		 push	 ecx
  0007c	8d 4d d4	 lea	 ecx, DWORD PTR $T153460[ebp]
  0007f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00084	8d 45 d4	 lea	 eax, DWORD PTR $T153460[ebp]
  00087	50		 push	 eax
  00088	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0008b	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  0008e	e8 00 00 00 00	 call	 ??A?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAU_GUILD_INFO_STRUCT@@@std@@@2@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::map<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,_GUILD_INFO_STRUCT *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,_GUILD_INFO_STRUCT *> > >::operator[]
  00093	89 30		 mov	 DWORD PTR [eax], esi
  00095	83 7d e8 10	 cmp	 DWORD PTR $T153460[ebp+20], 16 ; 00000010H
  00099	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000a0	72 0c		 jb	 SHORT $LN46@AddTail
  000a2	8b 4d d4	 mov	 ecx, DWORD PTR $T153460[ebp]
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ab	83 c4 04	 add	 esp, 4
$LN46@AddTail:

; 99   : 	this->m_GuildNumberMap[pNewNode->Number] = pNewNode;

  000ae	56		 push	 esi
  000af	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  000b2	c7 45 e8 0f 00
	00 00		 mov	 DWORD PTR $T153460[ebp+20], 15 ; 0000000fH
  000b9	89 5d e4	 mov	 DWORD PTR $T153460[ebp+16], ebx
  000bc	88 5d d4	 mov	 BYTE PTR $T153460[ebp], bl
  000bf	e8 00 00 00 00	 call	 ??A?$map@HPAU_GUILD_INFO_STRUCT@@U?$less@H@std@@V?$allocator@U?$pair@$$CBHPAU_GUILD_INFO_STRUCT@@@std@@@3@@std@@QAEAAPAU_GUILD_INFO_STRUCT@@ABH@Z ; std::map<int,_GUILD_INFO_STRUCT *,std::less<int>,std::allocator<std::pair<int const ,_GUILD_INFO_STRUCT *> > >::operator[]
  000c4	89 30		 mov	 DWORD PTR [eax], esi

; 100  : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5f		 pop	 edi
  000d2	5e		 pop	 esi
  000d3	5b		 pop	 ebx
  000d4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d7	33 cd		 xor	 ecx, ebp
  000d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z$0:
  00000	8d 4d d4	 lea	 ecx, DWORD PTR $T153460[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001c	33 c8		 xor	 ecx, eax
  0001e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00023	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z ENDP ; CGuildClass::AddTail
PUBLIC	?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z ; CGuildClass::AddGuild
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_number$ = 8						; size = 4
_guildname$ = 12					; size = 4
_mark$ = 16						; size = 4
_mastername$ = 20					; size = 4
_score$ = 24						; size = 4
?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z PROC ; CGuildClass::AddGuild, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 32   : 	_GUILD_INFO_STRUCT * pNewNode;
; 33   : 	_GUILD_INFO_STRUCT * pSearchGuild = this->SearchGuild(guildname);

  00005	8b 75 0c	 mov	 esi, DWORD PTR _guildname$[ebp]
  00008	57		 push	 edi
  00009	56		 push	 esi
  0000a	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  0000d	e8 00 00 00 00	 call	 ?SearchGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@PAD@Z ; CGuildClass::SearchGuild

; 34   : 
; 35   : 	if ( pSearchGuild != NULL )

  00012	33 ff		 xor	 edi, edi
  00014	3b c7		 cmp	 eax, edi

; 36   : 	{
; 37   : 		return pSearchGuild;

  00016	0f 85 f3 00 00
	00		 jne	 $LN7@AddGuild

; 38   : 	}
; 39   : 
; 40   : 	pNewNode = (_GUILD_INFO_STRUCT*)HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(_GUILD_INFO_STRUCT));

  0001c	53		 push	 ebx
  0001d	68 3c 07 00 00	 push	 1852			; 0000073cH
  00022	6a 08		 push	 8
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcessHeap@0
  0002a	50		 push	 eax
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__HeapAlloc@12
  00031	8b d8		 mov	 ebx, eax

; 41   : 
; 42   : 	if ( pNewNode != NULL )
; 43   : 	{
; 44   : 		memset(pNewNode->Name, 0, sizeof(pNewNode->Name));

  00033	33 c0		 xor	 eax, eax
  00035	3b df		 cmp	 ebx, edi
  00037	0f 84 d1 00 00
	00		 je	 $LN15@AddGuild
  0003d	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00040	89 01		 mov	 DWORD PTR [ecx], eax
  00042	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00045	88 41 08	 mov	 BYTE PTR [ecx+8], al

; 45   : 		strcpy(pNewNode->Name, guildname);

  00048	8b c6		 mov	 eax, esi
  0004a	2b ce		 sub	 ecx, esi
  0004c	8d 64 24 00	 npad	 4
$LL9@AddGuild:
  00050	8a 10		 mov	 dl, BYTE PTR [eax]
  00052	88 14 01	 mov	 BYTE PTR [ecx+eax], dl
  00055	40		 inc	 eax
  00056	84 d2		 test	 dl, dl
  00058	75 f6		 jne	 SHORT $LL9@AddGuild

; 46   : 		strcpy(pNewNode->Names[0], mastername);

  0005a	8b 45 14	 mov	 eax, DWORD PTR _mastername$[ebp]
  0005d	8d 53 2f	 lea	 edx, DWORD PTR [ebx+47]
  00060	2b d0		 sub	 edx, eax
$LL10@AddGuild:
  00062	8a 08		 mov	 cl, BYTE PTR [eax]
  00064	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00067	40		 inc	 eax
  00068	84 c9		 test	 cl, cl
  0006a	75 f6		 jne	 SHORT $LL10@AddGuild

; 47   : 
; 48   : 		if ( mark != NULL )

  0006c	8b 75 10	 mov	 esi, DWORD PTR _mark$[ebp]
  0006f	3b f7		 cmp	 esi, edi
  00071	74 0c		 je	 SHORT $LN4@AddGuild

; 49   : 		{
; 50   : 			memcpy(pNewNode->Mark, mark, sizeof(GUILDMARK));

  00073	8d 7b 0d	 lea	 edi, DWORD PTR [ebx+13]
  00076	b9 08 00 00 00	 mov	 ecx, 8
  0007b	f3 a5		 rep movsd
  0007d	33 ff		 xor	 edi, edi
$LN4@AddGuild:

; 51   : 		}
; 52   : 
; 53   : 		pNewNode->Number = number;

  0007f	8b 45 08	 mov	 eax, DWORD PTR _number$[ebp]

; 54   : 		pNewNode->Count = 0;
; 55   : 		pNewNode->TotalCount = 0;
; 56   : 		pNewNode->PlayScore = 0;
; 57   : 		pNewNode->TotalScore = score;

  00082	8b 4d 18	 mov	 ecx, DWORD PTR _score$[ebp]

; 58   : 		pNewNode->next = NULL;
; 59   : 		pNewNode->WarDeclareState = 0;
; 60   : 		pNewNode->WarState = 0;
; 61   : 		memset(pNewNode->Notice, 0, sizeof(pNewNode->Notice));

  00085	6a 3c		 push	 60			; 0000003cH
  00087	8d 93 9c 05 00
	00		 lea	 edx, DWORD PTR [ebx+1436]
  0008d	57		 push	 edi
  0008e	52		 push	 edx
  0008f	89 03		 mov	 DWORD PTR [ebx], eax
  00091	66 c7 43 2d 00
	00		 mov	 WORD PTR [ebx+45], 0
  00097	c6 83 95 05 00
	00 00		 mov	 BYTE PTR [ebx+1429], 0
  0009e	89 8b 98 05 00
	00		 mov	 DWORD PTR [ebx+1432], ecx
  000a4	89 bb 38 07 00
	00		 mov	 DWORD PTR [ebx+1848], edi
  000aa	66 c7 83 90 05
	00 00 00 00	 mov	 WORD PTR [ebx+1424], 0
  000b3	e8 00 00 00 00	 call	 _memset
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 62   : 		pNewNode->iGuildUnion = 0;

  000bb	89 bb 1c 07 00
	00		 mov	 DWORD PTR [ebx+1820], edi

; 63   : 		pNewNode->iGuildRival = 0;

  000c1	89 bb 20 07 00
	00		 mov	 DWORD PTR [ebx+1824], edi
  000c7	8d 83 90 04 00
	00		 lea	 eax, DWORD PTR [ebx+1168]
  000cd	8d 93 d8 05 00
	00		 lea	 edx, DWORD PTR [ebx+1496]
  000d3	8d 8b a0 03 00
	00		 lea	 ecx, DWORD PTR [ebx+928]
  000d9	be 50 00 00 00	 mov	 esi, 80			; 00000050H
  000de	8b ff		 npad	 2
$LL3@AddGuild:

; 64   : 
; 65   : 		for ( int i=0;i<MAX_USER_GUILD;i++)
; 66   : 		{
; 67   : 			pNewNode->Use[i] = FALSE;
; 68   : 			pNewNode->Index[i] = -1;

  000e0	83 cf ff	 or	 edi, -1
  000e3	c6 40 b0 00	 mov	 BYTE PTR [eax-80], 0
  000e7	66 89 39	 mov	 WORD PTR [ecx], di

; 69   : 			pNewNode->pServer[i] = -1;

  000ea	c6 00 ff	 mov	 BYTE PTR [eax], -1

; 70   : 			pNewNode->GuildStatus[i] = -1;

  000ed	89 3a		 mov	 DWORD PTR [edx], edi
  000ef	83 c1 02	 add	 ecx, 2
  000f2	83 c2 04	 add	 edx, 4
  000f5	40		 inc	 eax
  000f6	4e		 dec	 esi
  000f7	75 e7		 jne	 SHORT $LL3@AddGuild

; 71   : 		}
; 72   : #if GS_CASTLE == 1 
; 73   : 		pNewNode->lpLifeStone = NULL;
; 74   : #endif
; 75   : 
; 76   : 		this->BuildMemberTotal(pNewNode);

  000f9	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  000fc	53		 push	 ebx
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ?BuildMemberTotal@CGuildClass@@QAEHPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::BuildMemberTotal

; 77   : 		this->AddTail(pNewNode);

  00104	53		 push	 ebx
  00105	8b ce		 mov	 ecx, esi
  00107	e8 00 00 00 00	 call	 ?AddTail@CGuildClass@@QAEXPAU_GUILD_INFO_STRUCT@@@Z ; CGuildClass::AddTail

; 78   : 		return pNewNode;

  0010c	8b c3		 mov	 eax, ebx
$LN15@AddGuild:
  0010e	5b		 pop	 ebx
$LN7@AddGuild:
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi

; 79   : 	}
; 80   : 	return NULL;
; 81   : }

  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 14 00	 ret	 20			; 00000014H
?AddGuild@CGuildClass@@QAEPAU_GUILD_INFO_STRUCT@@HPADPAE0H@Z ENDP ; CGuildClass::AddGuild
_TEXT	ENDS
END
