; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\SProtocol.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_ARGB@@YAKEEEE@Z				; _ARGB
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\tnotice.h
;	COMDAT ?_ARGB@@YAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?_ARGB@@YAKEEEE@Z PROC					; _ARGB, COMDAT

; 8    : __inline DWORD _ARGB(BYTE a, BYTE r, BYTE g, BYTE b){ return a*16777216 + b*65536 + g*256 + r;}; // in tnotice.h : line 8

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _a$[ebp]
  00007	0f b6 4d 14	 movzx	 ecx, BYTE PTR _b$[ebp]
  0000b	0f b6 55 10	 movzx	 edx, BYTE PTR _g$[ebp]
  0000f	c1 e0 08	 shl	 eax, 8
  00012	03 c1		 add	 eax, ecx
  00014	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _r$[ebp]
  00018	c1 e0 08	 shl	 eax, 8
  0001b	03 c2		 add	 eax, edx
  0001d	c1 e0 08	 shl	 eax, 8
  00020	03 c1		 add	 eax, ecx
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?_ARGB@@YAKEEEE@Z ENDP					; _ARGB
_TEXT	ENDS
PUBLIC	?GetMapSvrGroup@CMapServerManager@@QAEHXZ	; CMapServerManager::GetMapSvrGroup
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.h
;	COMDAT ?GetMapSvrGroup@CMapServerManager@@QAEHXZ
_TEXT	SEGMENT
?GetMapSvrGroup@CMapServerManager@@QAEHXZ PROC		; CMapServerManager::GetMapSvrGroup, COMDAT
; _this$ = ecx

; 50   : 		if ( this->m_lpThisMapSvrData != NULL )

  00000	8b 81 80 af 00
	00		 mov	 eax, DWORD PTR [ecx+44928]
  00006	85 c0		 test	 eax, eax
  00008	74 05		 je	 SHORT $LN1@GetMapSvrG

; 51   : 		{
; 52   : 			return m_lpThisMapSvrData->m_btMAPSVR_GROUP;

  0000a	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]

; 55   : 	}

  0000e	c3		 ret	 0
$LN1@GetMapSvrG:

; 53   : 		}
; 54   : 		return -1;

  0000f	83 c8 ff	 or	 eax, -1

; 55   : 	}

  00012	c3		 ret	 0
?GetMapSvrGroup@CMapServerManager@@QAEHXZ ENDP		; CMapServerManager::GetMapSvrGroup
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJServerLogin@@YAXXZ				; GJServerLogin
EXTRN	?DataSend@wsJoinServerCli@@QAEHPADH@Z:PROC	; wsJoinServerCli::DataSend
EXTRN	?wsJServerCli@@3VwsJoinServerCli@@A:BYTE	; wsJServerCli
EXTRN	?gGameServerCode@@3FA:WORD			; gGameServerCode
EXTRN	?szServerName@@3PADA:BYTE			; szServerName
EXTRN	?GameServerPort@@3GA:WORD			; GameServerPort
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\sprotocol.cpp
;	COMDAT ?GJServerLogin@@YAXXZ
_TEXT	SEGMENT
_pInfo$ = -64						; size = 58
__$ArrayPad$ = -4					; size = 4
?GJServerLogin@@YAXXZ PROC				; GJServerLogin, COMDAT

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 106  : 	SDHP_SERVERINFO pInfo;
; 107  : 
; 108  : 	pInfo.h.c = 0xC1;
; 109  : 	pInfo.h.size = sizeof(SDHP_SERVERINFO);
; 110  : 	pInfo.h.headcode = 0x00;
; 111  : 	pInfo.Port = GameServerPort;

  00010	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?GameServerPort@@3GA ; GameServerPort
  00016	66 89 45 c4	 mov	 WORD PTR _pInfo$[ebp+4], ax
  0001a	c7 45 c0 c1 3a
	00 01		 mov	 DWORD PTR _pInfo$[ebp], 16792257 ; 01003ac1H

; 112  : 	pInfo.Type = 1;
; 113  : 	strcpy(pInfo.ServerName , szServerName);

  00021	33 c0		 xor	 eax, eax
$LL3@GJServerLo:
  00023	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR ?szServerName@@3PADA[eax]
  00029	88 4c 05 c6	 mov	 BYTE PTR _pInfo$[ebp+eax+6], cl
  0002d	40		 inc	 eax
  0002e	84 c9		 test	 cl, cl
  00030	75 f1		 jne	 SHORT $LL3@GJServerLo

; 114  : 	pInfo.ServerCode = gGameServerCode;
; 115  : 
; 116  : 	wsJServerCli.DataSend((char*)&pInfo, pInfo.h.size);

  00032	0f b6 55 c1	 movzx	 edx, BYTE PTR _pInfo$[ebp+1]
  00036	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0003d	52		 push	 edx
  0003e	8d 45 c0	 lea	 eax, DWORD PTR _pInfo$[ebp]
  00041	66 89 4d f8	 mov	 WORD PTR _pInfo$[ebp+56], cx
  00045	50		 push	 eax
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0004b	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 117  : }

  00050	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00053	33 cd		 xor	 ecx, ebp
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?GJServerLogin@@YAXXZ ENDP				; GJServerLogin
_TEXT	ENDS
PUBLIC	?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z	; JGServerLoginResult
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	?JoinServerConnected@@3HA:DWORD			; JoinServerConnected
EXTRN	?gServerReady@@3HA:DWORD			; gServerReady
EXTRN	?ghWnd@@3PAUHWND__@@A:DWORD			; ghWnd
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	?Get@CMsg@@QAEPADH@Z:PROC			; CMsg::Get
EXTRN	?lMsg@@3VCMsg@@A:BYTE				; lMsg
; Function compile flags: /Ogtp
;	COMDAT ?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z PROC	; JGServerLoginResult, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 125  : 	if ( lpMsg->Result == false )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	80 78 03 00	 cmp	 BYTE PTR [eax+3], 0
  0000a	75 1c		 jne	 SHORT $LN1@JGServerLo

; 126  : 	{
; 127  : 		LogAdd(LOG_BLACK, lMsg.Get(MSGGET(1, 210)));

  0000c	68 d2 01 00 00	 push	 466			; 000001d2H
  00011	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00016	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  0001b	50		 push	 eax
  0001c	6a 00		 push	 0
  0001e	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00023	83 c4 08	 add	 esp, 8

; 134  : 
; 135  : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN1@JGServerLo:

; 128  : 		return;
; 129  : 	}
; 130  : 
; 131  : 	JoinServerConnected=TRUE;
; 132  : 	gServerReady++;
; 133  : 	SendMessage(ghWnd, WM_START_SERVER, 0, 0);

  00028	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	01 05 00 00 00
	00		 add	 DWORD PTR ?gServerReady@@3HA, eax ; gServerReady
  0003d	68 05 04 00 00	 push	 1029			; 00000405H
  00042	51		 push	 ecx
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?JoinServerConnected@@3HA, eax ; JoinServerConnected
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 134  : 
; 135  : }

  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ENDP	; JGServerLoginResult
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPUserClose@@YAXPAD@Z				; GJPUserClose
; Function compile flags: /Ogtp
;	COMDAT ?GJPUserClose@@YAXPAD@Z
_TEXT	SEGMENT
_pClose$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_szAccountID$ = 8					; size = 4
?GJPUserClose@@YAXPAD@Z PROC				; GJPUserClose, COMDAT

; 140  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _szAccountID$[ebp]

; 141  : 	SDHP_USERCLOSE_ID pClose;
; 142  : 
; 143  : 	pClose.h.c =0xC1;
; 144  : 	pClose.h.size= sizeof(SDHP_USERCLOSE_ID);
; 145  : 	pClose.h.headcode = 0x05;
; 146  : 	memcpy(pClose.szId , szAccountID, 10);

  00013	8b 08		 mov	 ecx, DWORD PTR [eax]
  00015	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00018	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  0001c	89 4d e3	 mov	 DWORD PTR _pClose$[ebp+3], ecx

; 147  : 
; 148  : 	wsJServerCli.DataSend((char*)&pClose, pClose.h.size);

  0001f	6a 1c		 push	 28			; 0000001cH
  00021	8d 4d e0	 lea	 ecx, DWORD PTR _pClose$[ebp]
  00024	51		 push	 ecx
  00025	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0002a	66 c7 45 e0 c1
	1c		 mov	 WORD PTR _pClose$[ebp], 7361 ; 00001cc1H
  00030	c6 45 e2 05	 mov	 BYTE PTR _pClose$[ebp+2], 5
  00034	89 55 e7	 mov	 DWORD PTR _pClose$[ebp+7], edx
  00037	66 89 45 eb	 mov	 WORD PTR _pClose$[ebp+11], ax
  0003b	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 149  : }

  00040	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00043	33 cd		 xor	 ecx, ebp
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
?GJPUserClose@@YAXPAD@Z ENDP				; GJPUserClose
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z		; GJPUserClose
; Function compile flags: /Ogtp
;	COMDAT ?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pClose$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z PROC		; GJPUserClose, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpObj$[ebp]

; 154  : 	SDHP_USERCLOSE_ID pClose;
; 155  : 
; 156  : 	pClose.h.c =0xC1;
; 157  : 	pClose.h.size= sizeof(SDHP_USERCLOSE_ID);
; 158  : 	pClose.h.headcode = 0x05;
; 159  : 	memcpy(pClose.szId , lpObj->AccountID, 10);

  00013	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00016	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  00019	89 4d e3	 mov	 DWORD PTR _pClose$[ebp+3], ecx
  0001c	0f b7 48 6c	 movzx	 ecx, WORD PTR [eax+108]
  00020	89 55 e7	 mov	 DWORD PTR _pClose$[ebp+7], edx

; 160  : 	memcpy(pClose.szName, lpObj->BackName, 10);

  00023	8b 90 15 0f 00
	00		 mov	 edx, DWORD PTR [eax+3861]
  00029	66 89 4d eb	 mov	 WORD PTR _pClose$[ebp+11], cx
  0002d	8b 88 19 0f 00
	00		 mov	 ecx, DWORD PTR [eax+3865]
  00033	89 55 ed	 mov	 DWORD PTR _pClose$[ebp+13], edx
  00036	66 8b 90 1d 0f
	00 00		 mov	 dx, WORD PTR [eax+3869]
  0003d	89 4d f1	 mov	 DWORD PTR _pClose$[ebp+17], ecx

; 161  : 	pClose.Level = lpObj->Level;

  00040	0f b7 88 9c 00
	00 00		 movzx	 ecx, WORD PTR [eax+156]
  00047	66 89 55 f5	 mov	 WORD PTR _pClose$[ebp+21], dx

; 162  : 	pClose.DbClass = lpObj->DbClass;

  0004b	8a 90 9a 00 00
	00		 mov	 dl, BYTE PTR [eax+154]

; 163  : 
; 164  : 	wsJServerCli.DataSend((char*)&pClose, pClose.h.size);

  00051	6a 1c		 push	 28			; 0000001cH
  00053	8d 45 e0	 lea	 eax, DWORD PTR _pClose$[ebp]
  00056	66 89 4d f8	 mov	 WORD PTR _pClose$[ebp+24], cx
  0005a	50		 push	 eax
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00060	66 c7 45 e0 c1
	1c		 mov	 WORD PTR _pClose$[ebp], 7361 ; 00001cc1H
  00066	c6 45 e2 05	 mov	 BYTE PTR _pClose$[ebp+2], 5
  0006a	88 55 fa	 mov	 BYTE PTR _pClose$[ebp+26], dl
  0006d	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 165  : }

  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	33 cd		 xor	 ecx, ebp
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
?GJPUserClose@@YAXPAUOBJECTSTRUCT@@@Z ENDP		; GJPUserClose
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPAccountFail@@YAXFPADHH@Z			; GJPAccountFail
; Function compile flags: /Ogtp
;	COMDAT ?GJPAccountFail@@YAXFPADHH@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 2
_Id$ = 12						; size = 4
_DBNumber$ = 16						; size = 4
_UserNumber$ = 20					; size = 4
?GJPAccountFail@@YAXFPADHH@Z PROC			; GJPAccountFail, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 254  : 	SDHP_JOINFAIL pMsg;
; 255  : 
; 256  : 	memset(&pMsg, 0, sizeof(SDHP_JOINFAIL));
; 257  : 
; 258  : 	pMsg.h.c=0xC1;
; 259  : 	pMsg.h.headcode= 0x02;
; 260  : 	pMsg.h.size = sizeof (SDHP_JOINFAIL);
; 261  : 	pMsg.Number = number;
; 262  : 	pMsg.DBNumber = DBNumber;
; 263  : 	pMsg.UserNumber = UserNumber;

  00010	8b 55 14	 mov	 edx, DWORD PTR _UserNumber$[ebp]
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _DBNumber$[ebp]
  00016	33 c0		 xor	 eax, eax
  00018	89 45 e0	 mov	 DWORD PTR _pMsg$[ebp], eax
  0001b	89 45 e4	 mov	 DWORD PTR _pMsg$[ebp+4], eax
  0001e	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+20], eax
  00021	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+24], eax
  00024	89 45 e8	 mov	 DWORD PTR _pMsg$[ebp+8], eax
  00027	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+12], eax
  0002a	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+16], eax
  0002d	66 8b 45 08	 mov	 ax, WORD PTR _number$[ebp]
  00031	89 55 f4	 mov	 DWORD PTR _pMsg$[ebp+20], edx
  00034	66 89 45 e4	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 264  : 
; 265  : 	strcpy(pMsg.Id , Id);

  00038	8b 45 0c	 mov	 eax, DWORD PTR _Id$[ebp]
  0003b	8d 55 e6	 lea	 edx, DWORD PTR _pMsg$[ebp+6]
  0003e	c6 45 e0 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00042	66 c7 45 e1 1c
	02		 mov	 WORD PTR _pMsg$[ebp+1], 540 ; 0000021cH
  00048	89 4d f8	 mov	 DWORD PTR _pMsg$[ebp+24], ecx
  0004b	2b d0		 sub	 edx, eax
  0004d	8d 49 00	 npad	 3
$LL3@GJPAccount:
  00050	8a 08		 mov	 cl, BYTE PTR [eax]
  00052	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00055	40		 inc	 eax
  00056	84 c9		 test	 cl, cl
  00058	75 f6		 jne	 SHORT $LL3@GJPAccount

; 266  : 
; 267  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  0005a	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  0005e	50		 push	 eax
  0005f	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  00062	51		 push	 ecx
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00068	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 268  : }

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?GJPAccountFail@@YAXFPADHH@Z ENDP			; GJPAccountFail
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPAccountBlock@@YAXFPADHHH@Z			; GJPAccountBlock
; Function compile flags: /Ogtp
;	COMDAT ?GJPAccountBlock@@YAXFPADHHH@Z
_TEXT	SEGMENT
_pMsg$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 2
_Id$ = 12						; size = 4
_DBNumber$ = 16						; size = 4
_UserNumber$ = 20					; size = 4
_BlockCode$ = 24					; size = 4
?GJPAccountBlock@@YAXFPADHHH@Z PROC			; GJPAccountBlock, COMDAT

; 273  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 274  : 	SDHP_COMMAND_BLOCK pMsg;
; 275  : 
; 276  : 	memset(&pMsg, 0, sizeof(SDHP_COMMAND_BLOCK));
; 277  : 
; 278  : 	pMsg.h.c=0xC1;
; 279  : 	pMsg.h.headcode= 0x04;
; 280  : 	pMsg.h.size = sizeof (SDHP_COMMAND_BLOCK);
; 281  : 	pMsg.Number = number;
; 282  : 	pMsg.DBNumber = DBNumber;
; 283  : 	pMsg.UserNumber = UserNumber;

  00010	8b 55 14	 mov	 edx, DWORD PTR _UserNumber$[ebp]
  00013	8b 4d 10	 mov	 ecx, DWORD PTR _DBNumber$[ebp]
  00016	33 c0		 xor	 eax, eax
  00018	89 45 dc	 mov	 DWORD PTR _pMsg$[ebp], eax
  0001b	89 45 e0	 mov	 DWORD PTR _pMsg$[ebp+4], eax
  0001e	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+20], eax
  00021	89 45 f4	 mov	 DWORD PTR _pMsg$[ebp+24], eax
  00024	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+28], eax
  00027	89 45 e4	 mov	 DWORD PTR _pMsg$[ebp+8], eax
  0002a	89 45 e8	 mov	 DWORD PTR _pMsg$[ebp+12], eax
  0002d	89 45 ec	 mov	 DWORD PTR _pMsg$[ebp+16], eax
  00030	66 8b 45 08	 mov	 ax, WORD PTR _number$[ebp]
  00034	66 89 45 e0	 mov	 WORD PTR _pMsg$[ebp+4], ax

; 284  : 	pMsg.BlockCode = BlockCode;

  00038	8a 45 18	 mov	 al, BYTE PTR _BlockCode$[ebp]
  0003b	89 55 f0	 mov	 DWORD PTR _pMsg$[ebp+20], edx
  0003e	88 45 f8	 mov	 BYTE PTR _pMsg$[ebp+28], al

; 285  : 
; 286  : 	strcpy(pMsg.Id , Id);

  00041	8b 45 0c	 mov	 eax, DWORD PTR _Id$[ebp]
  00044	8d 55 e2	 lea	 edx, DWORD PTR _pMsg$[ebp+6]
  00047	c6 45 dc c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  0004b	66 c7 45 dd 20
	04		 mov	 WORD PTR _pMsg$[ebp+1], 1056 ; 00000420H
  00051	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+24], ecx
  00054	2b d0		 sub	 edx, eax
$LL3@GJPAccount@2:
  00056	8a 08		 mov	 cl, BYTE PTR [eax]
  00058	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  0005b	40		 inc	 eax
  0005c	84 c9		 test	 cl, cl
  0005e	75 f6		 jne	 SHORT $LL3@GJPAccount@2

; 287  : 
; 288  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00060	0f b6 4d dd	 movzx	 ecx, BYTE PTR _pMsg$[ebp+1]
  00064	51		 push	 ecx
  00065	8d 55 dc	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00068	52		 push	 edx
  00069	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  0006e	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 289  : }

  00073	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00076	33 cd		 xor	 ecx, ebp
  00078	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
?GJPAccountBlock@@YAXFPADHHH@Z ENDP			; GJPAccountBlock
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z	; GJPUserKillRecv
EXTRN	?gObjUserKill@@YAXH@Z:PROC			; gObjUserKill
EXTRN	?GCServerMsgStringSend@@YAXPADHE@Z:PROC		; GCServerMsgStringSend
EXTRN	?gObjIsAccontConnect@@YAHHPAD@Z:PROC		; gObjIsAccontConnect
; Function compile flags: /Ogtp
;	COMDAT ?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z
_TEXT	SEGMENT
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z PROC	; GJPUserKillRecv, COMDAT

; 320  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 321  : 	char szId[11];
; 322  : 	int number;
; 323  : 	szId[10] = 0;
; 324  : 
; 325  : 	memcpy(szId, lpMsg->Id , sizeof(lpMsg->Id) );

  00013	8b 50 07	 mov	 edx, DWORD PTR [eax+7]
  00016	8b 48 03	 mov	 ecx, DWORD PTR [eax+3]
  00019	56		 push	 esi

; 326  : 	number = lpMsg->Number;

  0001a	0f bf 70 0e	 movsx	 esi, WORD PTR [eax+14]
  0001e	89 55 f4	 mov	 DWORD PTR _szId$[ebp+4], edx

; 327  : 
; 328  : 	if (gObjIsAccontConnect(number, szId) == 0 )

  00021	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  00024	89 4d f0	 mov	 DWORD PTR _szId$[ebp], ecx
  00027	66 8b 48 0b	 mov	 cx, WORD PTR [eax+11]
  0002b	52		 push	 edx
  0002c	56		 push	 esi
  0002d	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0
  00031	66 89 4d f8	 mov	 WORD PTR _szId$[ebp+8], cx
  00035	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  0003a	83 c4 08	 add	 esp, 8
  0003d	85 c0		 test	 eax, eax
  0003f	74 21		 je	 SHORT $LN2@GJPUserKil

; 329  : 	{
; 330  : 		return;
; 331  : 	}
; 332  : 
; 333  : 	GCServerMsgStringSend(lMsg.Get( MSGGET(6, 66)), number, 0);

  00041	6a 00		 push	 0
  00043	56		 push	 esi
  00044	68 42 06 00 00	 push	 1602			; 00000642H
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0004e	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 334  : 	gObjUserKill(number);

  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 ?gObjUserKill@@YAXH@Z	; gObjUserKill
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@GJPUserKil:

; 335  : }

  00062	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00065	33 cd		 xor	 ecx, ebp
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ENDP	; GJPUserKillRecv
_TEXT	ENDS
PUBLIC	?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z	; JGOtherJoin
EXTRN	?gObj@@3PAUOBJECTSTRUCT@@A:BYTE			; gObj
; Function compile flags: /Ogtp
;	COMDAT ?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z
_TEXT	SEGMENT
_szId$ = -12						; size = 11
_lpMsg$ = 8						; size = 4
?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z PROC		; JGOtherJoin, COMDAT

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 341  : 	char szId[11];
; 342  : 	szId[10]=0;
; 343  : 	int n;
; 344  : 
; 345  : 	memcpy(szId, lpMsg->AccountID, sizeof(lpMsg->AccountID));

  00006	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00009	8b 48 03	 mov	 ecx, DWORD PTR [eax+3]
  0000c	8b 50 07	 mov	 edx, DWORD PTR [eax+7]
  0000f	66 8b 40 0b	 mov	 ax, WORD PTR [eax+11]
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	c6 45 fe 00	 mov	 BYTE PTR _szId$[ebp+10], 0
  00019	89 4d f4	 mov	 DWORD PTR _szId$[ebp], ecx
  0001c	89 55 f8	 mov	 DWORD PTR _szId$[ebp+4], edx
  0001f	66 89 45 fc	 mov	 WORD PTR _szId$[ebp+8], ax

; 346  : 
; 347  : 	for (n= OBJ_STARTUSERINDEX; n<OBJMAX;n++)

  00023	bf 00 19 00 00	 mov	 edi, 6400		; 00001900H
  00028	be 64 c4 16 02	 mov	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+35046500
  0002d	8d 49 00	 npad	 3
$LL7@JGOtherJoi:

; 348  : 	{
; 349  : 		if ( gObj[n].Connected >= PLAYER_LOGGED )

  00030	80 7e a0 02	 cmp	 BYTE PTR [esi-96], 2
  00034	72 43		 jb	 SHORT $LN6@JGOtherJoi

; 350  : 		{
; 351  : 			if ( gObj[n].AccountID[0] == szId[0] )

  00036	8a 4d f4	 mov	 cl, BYTE PTR _szId$[ebp]
  00039	38 0e		 cmp	 BYTE PTR [esi], cl
  0003b	75 3c		 jne	 SHORT $LN6@JGOtherJoi

; 352  : 			{
; 353  : 				if ( gObj[n].AccountID[1] == szId[1] )

  0003d	8a 55 f5	 mov	 dl, BYTE PTR _szId$[ebp+1]
  00040	38 56 01	 cmp	 BYTE PTR [esi+1], dl
  00043	75 34		 jne	 SHORT $LN6@JGOtherJoi

; 354  : 				{
; 355  : 					if ( strcmp(gObj[n].AccountID , szId) == 0 )

  00045	8d 4d f4	 lea	 ecx, DWORD PTR _szId$[ebp]
  00048	8b c6		 mov	 eax, esi
  0004a	8d 9b 00 00 00
	00		 npad	 6
$LL13@JGOtherJoi:
  00050	8a 10		 mov	 dl, BYTE PTR [eax]
  00052	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00054	75 1a		 jne	 SHORT $LN14@JGOtherJoi
  00056	84 d2		 test	 dl, dl
  00058	74 12		 je	 SHORT $LN15@JGOtherJoi
  0005a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0005d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00060	75 0e		 jne	 SHORT $LN14@JGOtherJoi
  00062	83 c0 02	 add	 eax, 2
  00065	83 c1 02	 add	 ecx, 2
  00068	84 d2		 test	 dl, dl
  0006a	75 e4		 jne	 SHORT $LL13@JGOtherJoi
$LN15@JGOtherJoi:
  0006c	33 c0		 xor	 eax, eax
  0006e	eb 05		 jmp	 SHORT $LN16@JGOtherJoi
$LN14@JGOtherJoi:
  00070	1b c0		 sbb	 eax, eax
  00072	83 d8 ff	 sbb	 eax, -1
$LN16@JGOtherJoi:
  00075	85 c0		 test	 eax, eax
  00077	74 15		 je	 SHORT $LN11@JGOtherJoi
$LN6@JGOtherJoi:

; 346  : 
; 347  : 	for (n= OBJ_STARTUSERINDEX; n<OBJMAX;n++)

  00079	81 c6 64 15 00
	00		 add	 esi, 5476		; 00001564H
  0007f	47		 inc	 edi
  00080	81 fe 04 53 6a
	02		 cmp	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+40522500
  00086	7c a8		 jl	 SHORT $LL7@JGOtherJoi
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi

; 358  : 						break;
; 359  : 					}
; 360  : 				}
; 361  : 			}
; 362  : 		}
; 363  : 	}
; 364  : }

  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
$LN11@JGOtherJoi:

; 356  : 					{
; 357  : 						GCServerMsgStringSend(lMsg.Get( MSGGET(4, 107)), n, 1 );

  0008e	6a 01		 push	 1
  00090	57		 push	 edi
  00091	68 6b 04 00 00	 push	 1131			; 0000046bH
  00096	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0009b	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi

; 358  : 						break;
; 359  : 					}
; 360  : 				}
; 361  : 			}
; 362  : 		}
; 363  : 	}
; 364  : }

  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z ENDP		; JGOtherJoin
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserDisconnectRecv
; Function compile flags: /Ogtp
;	COMDAT ?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z
_TEXT	SEGMENT
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z PROC ; GJPUserDisconnectRecv, COMDAT

; 368  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 369  : 	char szId[11];
; 370  : 	szId[10]=0;
; 371  : 	int number;
; 372  : 
; 373  : 	memcpy( szId, lpMsg->Id , sizeof( lpMsg->Id ) );

  00013	8b 50 07	 mov	 edx, DWORD PTR [eax+7]
  00016	8b 48 03	 mov	 ecx, DWORD PTR [eax+3]
  00019	56		 push	 esi

; 374  : 	number = lpMsg->Number;

  0001a	0f bf 70 0e	 movsx	 esi, WORD PTR [eax+14]
  0001e	89 55 f4	 mov	 DWORD PTR _szId$[ebp+4], edx

; 375  : 
; 376  : 	if ( gObjIsAccontConnect(number, szId ) == 0 )

  00021	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  00024	89 4d f0	 mov	 DWORD PTR _szId$[ebp], ecx
  00027	66 8b 48 0b	 mov	 cx, WORD PTR [eax+11]
  0002b	52		 push	 edx
  0002c	56		 push	 esi
  0002d	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0
  00031	66 89 4d f8	 mov	 WORD PTR _szId$[ebp+8], cx
  00035	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  0003a	83 c4 08	 add	 esp, 8
  0003d	85 c0		 test	 eax, eax
  0003f	74 21		 je	 SHORT $LN2@GJPUserDis

; 377  : 	{
; 378  : 		return;
; 379  : 	}
; 380  : 
; 381  : 	GCServerMsgStringSend(lMsg.Get( MSGGET(6, 67) ), number, 0 );

  00041	6a 00		 push	 0
  00043	56		 push	 esi
  00044	68 43 06 00 00	 push	 1603			; 00000643H
  00049	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0004e	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend

; 382  : 	gObjUserKill(number);

  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 ?gObjUserKill@@YAXH@Z	; gObjUserKill
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@GJPUserDis:

; 383  : }

  00062	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00065	33 cd		 xor	 ecx, ebp
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ENDP ; GJPUserDisconnectRecv
_TEXT	ENDS
PUBLIC	?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z	; JGPExitCodeRecv
; Function compile flags: /Ogtp
;	COMDAT ?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z PROC		; JGPExitCodeRecv, COMDAT

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 389  : 	if ( lpMsg->ExitCode[0] == 70 && lpMsg->ExitCode[1] == 70 && lpMsg->ExitCode[2] == 88 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	b1 46		 mov	 cl, 70			; 00000046H
  00008	38 48 03	 cmp	 BYTE PTR [eax+3], cl
  0000b	75 23		 jne	 SHORT $LN1@JGPExitCod
  0000d	38 48 04	 cmp	 BYTE PTR [eax+4], cl
  00010	75 1e		 jne	 SHORT $LN1@JGPExitCod
  00012	80 78 05 58	 cmp	 BYTE PTR [eax+5], 88	; 00000058H
  00016	75 18		 jne	 SHORT $LN1@JGPExitCod

; 390  : 	{
; 391  : 		SendMessage( ghWnd, WM_COMMAND, IDM_3_MINUTE_CLOSE, 0 );

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ghWnd@@3PAUHWND__@@A ; ghWnd
  0001d	6a 00		 push	 0
  0001f	68 12 80 00 00	 push	 32786			; 00008012H
  00024	68 11 01 00 00	 push	 273			; 00000111H
  00029	50		 push	 eax
  0002a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
$LN1@JGPExitCod:

; 392  : 	}
; 393  : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z ENDP		; JGPExitCodeRecv
_TEXT	ENDS
PUBLIC	?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z	; JGPOptionControl
EXTRN	?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z:PROC	; ReadGameEtcInfo
EXTRN	?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z:PROC	; ReadEventInfo
EXTRN	?ShopDataLoad@@YAHXZ:PROC			; ShopDataLoad
EXTRN	?GameMonsterAllCloseAndReLoad@@YAXXZ:PROC	; GameMonsterAllCloseAndReLoad
EXTRN	?ReadCommonServerInfo@@YAXXZ:PROC		; ReadCommonServerInfo
; Function compile flags: /Ogtp
;	COMDAT ?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z PROC	; JGPOptionControl, COMDAT

; 455  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 456  : 	switch ( lpMsg->Option )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	0f b6 40 03	 movzx	 eax, BYTE PTR [eax+3]
  0000a	83 f8 05	 cmp	 eax, 5
  0000d	77 39		 ja	 SHORT $LN7@JGPOptionC
  0000f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@JGPOptionC[eax*4]
$LN6@JGPOptionC:

; 482  : 			break;
; 483  : 	}
; 484  : }

  00016	5d		 pop	 ebp

; 457  : 	{
; 458  : 		case OPTION_RELOAD:
; 459  : 			ReadCommonServerInfo();

  00017	e9 00 00 00 00	 jmp	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo
$LN5@JGPOptionC:

; 482  : 			break;
; 483  : 	}
; 484  : }

  0001c	5d		 pop	 ebp

; 460  : 			break;
; 461  : 
; 462  : 		case MONSTER_RELOAD:
; 463  : 			GameMonsterAllCloseAndReLoad();

  0001d	e9 00 00 00 00	 jmp	 ?GameMonsterAllCloseAndReLoad@@YAXXZ ; GameMonsterAllCloseAndReLoad
$LN3@JGPOptionC:

; 464  : 			break;
; 465  : 
; 466  : 		case SHOP_RELOAD:
; 467  : 			ShopDataLoad();
; 468  : 			break;
; 469  : 
; 470  : 		case ALLOPTION_RELOAD:
; 471  : 			ReadCommonServerInfo();

  00022	e8 00 00 00 00	 call	 ?ReadCommonServerInfo@@YAXXZ ; ReadCommonServerInfo

; 472  : 			GameMonsterAllCloseAndReLoad();

  00027	e8 00 00 00 00	 call	 ?GameMonsterAllCloseAndReLoad@@YAXXZ ; GameMonsterAllCloseAndReLoad
$LN4@JGPOptionC:

; 482  : 			break;
; 483  : 	}
; 484  : }

  0002c	5d		 pop	 ebp

; 473  : 			ShopDataLoad();

  0002d	e9 00 00 00 00	 jmp	 ?ShopDataLoad@@YAHXZ	; ShopDataLoad
$LN2@JGPOptionC:

; 474  : 			break;
; 475  : 
; 476  : 		case EVENTINFO_RELOAD:
; 477  : 			ReadEventInfo(MU_EVENT_ALL );

  00032	6a 00		 push	 0
  00034	e8 00 00 00 00	 call	 ?ReadEventInfo@@YAXW4MU_EVENT_TYPE@@@Z ; ReadEventInfo

; 478  : 			break;
; 479  : 
; 480  : 		case ETCINFO_RELOAD:
; 481  : 			ReadGameEtcInfo(MU_ETC_ALL );

  00039	83 c4 04	 add	 esp, 4

; 482  : 			break;
; 483  : 	}
; 484  : }

  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN1@JGPOptionC:

; 478  : 			break;
; 479  : 
; 480  : 		case ETCINFO_RELOAD:
; 481  : 			ReadGameEtcInfo(MU_ETC_ALL );

  0003e	6a 00		 push	 0
  00040	e8 00 00 00 00	 call	 ?ReadGameEtcInfo@@YAXW4MU_ETC_TYPE@@@Z ; ReadGameEtcInfo
  00045	83 c4 04	 add	 esp, 4
$LN7@JGPOptionC:

; 482  : 			break;
; 483  : 	}
; 484  : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
  0004a	8b ff		 npad	 2
$LN14@JGPOptionC:
  0004c	00 00 00 00	 DD	 $LN6@JGPOptionC
  00050	00 00 00 00	 DD	 $LN5@JGPOptionC
  00054	00 00 00 00	 DD	 $LN4@JGPOptionC
  00058	00 00 00 00	 DD	 $LN3@JGPOptionC
  0005c	00 00 00 00	 DD	 $LN2@JGPOptionC
  00060	00 00 00 00	 DD	 $LN1@JGPOptionC
?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z ENDP	; JGPOptionControl
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?LoveHeartEventSend@@YAXHPAD0@Z			; LoveHeartEventSend
; Function compile flags: /Ogtp
;	COMDAT ?LoveHeartEventSend@@YAXHPAD0@Z
_TEXT	SEGMENT
_pMsg$ = -28						; size = 23
__$ArrayPad$ = -4					; size = 4
_aIndex$ = 8						; size = 4
_AcountId$ = 12						; size = 4
_Name$ = 16						; size = 4
?LoveHeartEventSend@@YAXHPAD0@Z PROC			; LoveHeartEventSend, COMDAT

; 489  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _AcountId$[ebp]

; 490  : 	SDHP_LOVEHEARTEVENT pMsg;
; 491  : 
; 492  : 	pMsg.h.c = 0xC1;
; 493  : 	pMsg.h.headcode = 0x30;
; 494  : 	pMsg.h.size = sizeof(SDHP_LOVEHEARTEVENT);
; 495  : 
; 496  : 	memcpy(pMsg.Account , AcountId, sizeof(pMsg.Account));

  00013	8b 10		 mov	 edx, DWORD PTR [eax]
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _Name$[ebp]
  00018	89 55 e7	 mov	 DWORD PTR _pMsg$[ebp+3], edx
  0001b	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0001e	66 8b 40 08	 mov	 ax, WORD PTR [eax+8]
  00022	89 55 eb	 mov	 DWORD PTR _pMsg$[ebp+7], edx

; 497  : 	memcpy(pMsg.Name , Name, sizeof(pMsg.Name) );

  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	66 89 45 ef	 mov	 WORD PTR _pMsg$[ebp+11], ax
  0002b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002e	66 8b 49 08	 mov	 cx, WORD PTR [ecx+8]
  00032	89 55 f1	 mov	 DWORD PTR _pMsg$[ebp+13], edx

; 498  : 
; 499  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00035	6a 17		 push	 23			; 00000017H
  00037	8d 55 e4	 lea	 edx, DWORD PTR _pMsg$[ebp]
  0003a	66 89 4d f9	 mov	 WORD PTR _pMsg$[ebp+21], cx
  0003e	52		 push	 edx
  0003f	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00044	c6 45 e4 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00048	66 c7 45 e5 17
	30		 mov	 WORD PTR _pMsg$[ebp+1], 12311 ; 00003017H
  0004e	89 45 f5	 mov	 DWORD PTR _pMsg$[ebp+17], eax
  00051	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 500  : }

  00056	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00059	33 cd		 xor	 ecx, ebp
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?LoveHeartEventSend@@YAXHPAD0@Z ENDP			; LoveHeartEventSend
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ; LoveHeartEventRecv
EXTRN	?AllSendServerMsg@@YAXPAD@Z:PROC		; AllSendServerMsg
EXTRN	__imp__wsprintfA:PROC
; Function compile flags: /Ogtp
;	COMDAT ?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z
_TEXT	SEGMENT
_Msg$ = -272						; size = 256
_szName$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z PROC ; LoveHeartEventRecv, COMDAT

; 507  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 508  : 	char szName[11];
; 509  : 	int number;
; 510  : 	char Msg[256];
; 511  : 
; 512  : 	szName[10]=0;
; 513  : 
; 514  : 	memcpy(szName, lpMsg->Name, sizeof(lpMsg->Name));

  00016	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00019	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0001c	89 4d f0	 mov	 DWORD PTR _szName$[ebp], ecx
  0001f	66 8b 48 0c	 mov	 cx, WORD PTR [eax+12]
  00023	66 89 4d f8	 mov	 WORD PTR _szName$[ebp+8], cx

; 515  : 	number = lpMsg->Number;

  00027	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]

; 516  : 
; 517  : 	switch ( lpMsg->Result )

  0002a	0f b6 40 03	 movzx	 eax, BYTE PTR [eax+3]
  0002e	83 e8 00	 sub	 eax, 0
  00031	c6 45 fa 00	 mov	 BYTE PTR _szName$[ebp+10], 0
  00035	89 55 f4	 mov	 DWORD PTR _szName$[ebp+4], edx
  00038	74 46		 je	 SHORT $LN9@LoveHeartE
  0003a	48		 dec	 eax
  0003b	0f 85 1a 01 00
	00		 jne	 $LN6@LoveHeartE

; 536  : 									return;
; 537  : 								}
; 538  : 							}
; 539  : 						}
; 540  : 					}
; 541  : 					continue;
; 542  : 				} // For
; 543  : 			}
; 544  : 		break;
; 545  : 
; 546  : 		case 1: // Winner of the Love Pang Pang Event
; 547  : 			wsprintf(Msg, lMsg.Get( MSGGET ( 4, 82 ) ), szName, number);

  00041	51		 push	 ecx
  00042	8d 55 f0	 lea	 edx, DWORD PTR _szName$[ebp]
  00045	52		 push	 edx
  00046	68 52 04 00 00	 push	 1106			; 00000452H
  0004b	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00050	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00055	50		 push	 eax
  00056	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  0005c	50		 push	 eax
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 548  : 			AllSendServerMsg(Msg);

  00063	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _Msg$[ebp]
  00069	51		 push	 ecx
  0006a	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  0006f	83 c4 14	 add	 esp, 20			; 00000014H

; 549  : 			break;
; 550  : 	}
; 551  : }

  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	33 cd		 xor	 ecx, ebp
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN9@LoveHeartE:
  00080	56		 push	 esi
  00081	57		 push	 edi

; 518  : 	{
; 519  : 		case 0: // Registered Hearts of Love PangPangEvent
; 520  : 			{
; 521  : 				wsprintf(Msg, lMsg.Get( MSGGET(4, 80)), number );

  00082	51		 push	 ecx
  00083	68 50 04 00 00	 push	 1104			; 00000450H
  00088	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0008d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00092	50		 push	 eax
  00093	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _Msg$[ebp]
  00099	52		 push	 edx
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 522  : 
; 523  : 				for (int n = OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  000a3	bf 00 19 00 00	 mov	 edi, 6400		; 00001900H
  000a8	be 6f c4 16 02	 mov	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+35046511
  000ad	8d 49 00	 npad	 3
$LL8@LoveHeartE:

; 524  : 				{
; 525  : 					if ( gObj[n].Connected >= PLAYER_LOGGED )

  000b0	80 7e 95 02	 cmp	 BYTE PTR [esi-107], 2
  000b4	72 43		 jb	 SHORT $LN7@LoveHeartE

; 526  : 					{
; 527  : 						if (gObj[n].Name[0] == szName[0] )

  000b6	8a 45 f0	 mov	 al, BYTE PTR _szName$[ebp]
  000b9	38 06		 cmp	 BYTE PTR [esi], al
  000bb	75 3c		 jne	 SHORT $LN7@LoveHeartE

; 528  : 						{
; 529  : 							if ( gObj[n].Name[1] == szName[1] )

  000bd	8a 4d f1	 mov	 cl, BYTE PTR _szName$[ebp+1]
  000c0	38 4e 01	 cmp	 BYTE PTR [esi+1], cl
  000c3	75 34		 jne	 SHORT $LN7@LoveHeartE

; 530  : 							{
; 531  : 								if ( strcmp( gObj[n].Name, szName ) == 0 )

  000c5	8d 4d f0	 lea	 ecx, DWORD PTR _szName$[ebp]
  000c8	8b c6		 mov	 eax, esi
  000ca	8d 9b 00 00 00
	00		 npad	 6
$LL17@LoveHeartE:
  000d0	8a 10		 mov	 dl, BYTE PTR [eax]
  000d2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000d4	75 1a		 jne	 SHORT $LN18@LoveHeartE
  000d6	84 d2		 test	 dl, dl
  000d8	74 12		 je	 SHORT $LN19@LoveHeartE
  000da	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000dd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000e0	75 0e		 jne	 SHORT $LN18@LoveHeartE
  000e2	83 c0 02	 add	 eax, 2
  000e5	83 c1 02	 add	 ecx, 2
  000e8	84 d2		 test	 dl, dl
  000ea	75 e4		 jne	 SHORT $LL17@LoveHeartE
$LN19@LoveHeartE:
  000ec	33 c0		 xor	 eax, eax
  000ee	eb 05		 jmp	 SHORT $LN20@LoveHeartE
$LN18@LoveHeartE:
  000f0	1b c0		 sbb	 eax, eax
  000f2	83 d8 ff	 sbb	 eax, -1
$LN20@LoveHeartE:
  000f5	85 c0		 test	 eax, eax
  000f7	74 1f		 je	 SHORT $LN15@LoveHeartE
$LN7@LoveHeartE:

; 522  : 
; 523  : 				for (int n = OBJ_STARTUSERINDEX;n<OBJMAX;n++)

  000f9	81 c6 64 15 00
	00		 add	 esi, 5476		; 00001564H
  000ff	47		 inc	 edi
  00100	81 fe 0f 53 6a
	02		 cmp	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+40522511
  00106	7c a8		 jl	 SHORT $LL8@LoveHeartE
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi

; 549  : 			break;
; 550  : 	}
; 551  : }

  0010a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010d	33 cd		 xor	 ecx, ebp
  0010f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
$LN15@LoveHeartE:

; 532  : 								{
; 533  : 									GCServerMsgStringSend(Msg, n, 1);

  00118	6a 01		 push	 1
  0011a	8d 95 f0 fe ff
	ff		 lea	 edx, DWORD PTR _Msg$[ebp]
  00120	57		 push	 edi
  00121	52		 push	 edx
  00122	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00127	83 c4 0c	 add	 esp, 12			; 0000000cH

; 534  : 									wsprintf(Msg, lMsg.Get( MSGGET( 4, 81 ) ) );

  0012a	68 51 04 00 00	 push	 1105			; 00000451H
  0012f	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00134	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00139	50		 push	 eax
  0013a	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _Msg$[ebp]
  00140	50		 push	 eax
  00141	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 535  : 									GCServerMsgStringSend(Msg, n, 1);

  00147	6a 01		 push	 1
  00149	8d 8d f0 fe ff
	ff		 lea	 ecx, DWORD PTR _Msg$[ebp]
  0014f	57		 push	 edi
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?GCServerMsgStringSend@@YAXPADHE@Z ; GCServerMsgStringSend
  00156	83 c4 14	 add	 esp, 20			; 00000014H
  00159	5f		 pop	 edi
  0015a	5e		 pop	 esi
$LN6@LoveHeartE:

; 549  : 			break;
; 550  : 	}
; 551  : }

  0015b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015e	33 cd		 xor	 ecx, ebp
  00160	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00165	8b e5		 mov	 esp, ebp
  00167	5d		 pop	 ebp
  00168	c3		 ret	 0
?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ENDP ; LoveHeartEventRecv
_TEXT	ENDS
PUBLIC	?LoveHeartCreateSend@@YAXXZ			; LoveHeartCreateSend
; Function compile flags: /Ogtp
;	COMDAT ?LoveHeartCreateSend@@YAXXZ
_TEXT	SEGMENT
_pMsg$ = -8						; size = 6
?LoveHeartCreateSend@@YAXXZ PROC			; LoveHeartCreateSend, COMDAT

; 558  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 559  : 	SDHP_LOVEHEARTCREATE pMsg;
; 560  : 
; 561  : 	pMsg.h.c= 0xC1;
; 562  : 	pMsg.h.headcode = 0x31;
; 563  : 	pMsg.h.size=sizeof(SDHP_LOVEHEARTCREATE);
; 564  : 
; 565  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00006	6a 06		 push	 6
  00008	8d 45 f8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0000b	50		 push	 eax
  0000c	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00011	c6 45 f8 c1	 mov	 BYTE PTR _pMsg$[ebp], 193 ; 000000c1H
  00015	66 c7 45 f9 06
	31		 mov	 WORD PTR _pMsg$[ebp+1], 12550 ; 00003106H
  0001b	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 566  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?LoveHeartCreateSend@@YAXXZ ENDP			; LoveHeartCreateSend
_TEXT	ENDS
PUBLIC	??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z		; AllNoticeRecv
;	COMDAT ??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@
CONST	SEGMENT
??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@ DB '['
	DB	'Mu Manager][Notice Log][Type:ALL] %s', 00H	; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z
_TEXT	SEGMENT
_szNotice$ = -68					; size = 61
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z PROC		; AllNoticeRecv, COMDAT

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]
  00014	57		 push	 edi

; 573  : 	char szNotice[61];
; 574  : 
; 575  : 	szNotice[60]=0;
; 576  : 
; 577  : 	memcpy(szNotice, lpMsg->Notice , sizeof(lpMsg->Notice)-1);
; 578  : 
; 579  : 	LogAdd(LOG_BLACK, "[Mu Manager][Notice Log][Type:ALL] %s", szNotice);

  00015	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00018	50		 push	 eax
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHIHJKDO@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3AL@
  0001e	c6 45 f8 00	 mov	 BYTE PTR _szNotice$[ebp+60], 0
  00022	83 c6 03	 add	 esi, 3
  00025	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  0002a	8d 7d bc	 lea	 edi, DWORD PTR _szNotice$[ebp]
  0002d	6a 00		 push	 0
  0002f	f3 a5		 rep movsd
  00031	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 580  : 
; 581  : 	if ( strlen(szNotice) > 1 )

  00039	8d 45 bc	 lea	 eax, DWORD PTR _szNotice$[ebp]
  0003c	5f		 pop	 edi
  0003d	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00040	5e		 pop	 esi
$LL4@AllNoticeR:
  00041	8a 08		 mov	 cl, BYTE PTR [eax]
  00043	40		 inc	 eax
  00044	84 c9		 test	 cl, cl
  00046	75 f9		 jne	 SHORT $LL4@AllNoticeR
  00048	2b c2		 sub	 eax, edx
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	76 0c		 jbe	 SHORT $LN1@AllNoticeR

; 582  : 	{
; 583  : 		AllSendServerMsg(szNotice);

  0004f	8d 4d bc	 lea	 ecx, DWORD PTR _szNotice$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?AllSendServerMsg@@YAXPAD@Z ; AllSendServerMsg
  00058	83 c4 04	 add	 esp, 4
$LN1@AllNoticeR:

; 584  : 	}
; 585  : }

  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005e	33 cd		 xor	 ecx, ebp
  00060	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z ENDP		; AllNoticeRecv
_TEXT	ENDS
PUBLIC	??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z	; UserNoticeRecv
EXTRN	?SendNoticeToUser@TNotice@@SAXHPAX@Z:PROC	; TNotice::SendNoticeToUser
EXTRN	?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z:PROC	; TNotice::SetNoticeProperty
EXTRN	?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z:PROC	; TNotice::MakeNoticeMsg
;	COMDAT ??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\tnotice.h
CONST	SEGMENT
??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@ DB '['
	DB	'Mu Manager][Notice Log][Type:USER] (%s) %s', 00H ; `string'
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\sprotocol.cpp
CONST	ENDS
;	COMDAT ?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z
_TEXT	SEGMENT
_pNotice$157099 = -352					; size = 272
_szNotice$ = -80					; size = 61
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z PROC	; UserNoticeRecv, COMDAT

; 591  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 60 01 00
	00		 sub	 esp, 352		; 00000160H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]

; 592  : 	char szNotice[61];
; 593  : 	char szId[11];
; 594  : 
; 595  : 	szNotice[60]=0;
; 596  : 	szId[10]=0;
; 597  : 
; 598  : 	memcpy(szNotice, lpMsg->Notice , sizeof(lpMsg->Notice)-1);
; 599  : 	memcpy(szId, lpMsg->szId , sizeof(lpMsg->szId));

  00016	8b 50 07	 mov	 edx, DWORD PTR [eax+7]
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8d 70 0d	 lea	 esi, DWORD PTR [eax+13]
  0001e	c6 45 ec 00	 mov	 BYTE PTR _szNotice$[ebp+60], 0
  00022	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00027	8d 7d b0	 lea	 edi, DWORD PTR _szNotice$[ebp]
  0002a	f3 a5		 rep movsd
  0002c	8b 48 03	 mov	 ecx, DWORD PTR [eax+3]
  0002f	66 8b 40 0b	 mov	 ax, WORD PTR [eax+11]
  00033	89 4d f0	 mov	 DWORD PTR _szId$[ebp], ecx

; 600  : 
; 601  : 	LogAdd(LOG_BLACK, "[Mu Manager][Notice Log][Type:USER] (%s) %s", szId, szNotice);

  00036	8d 4d b0	 lea	 ecx, DWORD PTR _szNotice$[ebp]
  00039	51		 push	 ecx
  0003a	89 55 f4	 mov	 DWORD PTR _szId$[ebp+4], edx
  0003d	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@EFINMDLC@?$FLMu?5Manager?$FN?$FLNotice?5Log?$FN?$FLType?3US@
  00046	6a 00		 push	 0
  00048	c6 45 fa 00	 mov	 BYTE PTR _szId$[ebp+10], 0
  0004c	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
  00050	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 602  : 
; 603  : 	if ( strlen(szNotice) > 1 )

  00055	8d 45 b0	 lea	 eax, DWORD PTR _szNotice$[ebp]
  00058	83 c4 10	 add	 esp, 16			; 00000010H
  0005b	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0005e	8b ff		 npad	 2
$LL17@UserNotice:
  00060	8a 08		 mov	 cl, BYTE PTR [eax]
  00062	40		 inc	 eax
  00063	84 c9		 test	 cl, cl
  00065	75 f9		 jne	 SHORT $LL17@UserNotice
  00067	2b c2		 sub	 eax, edx
  00069	83 f8 01	 cmp	 eax, 1
  0006c	0f 86 c1 00 00
	00		 jbe	 $LN5@UserNotice

; 604  : 	{
; 605  : 		if ( strlen(szId) > 1 )

  00072	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00075	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL18@UserNotice:
  00078	8a 08		 mov	 cl, BYTE PTR [eax]
  0007a	40		 inc	 eax
  0007b	84 c9		 test	 cl, cl
  0007d	75 f9		 jne	 SHORT $LL18@UserNotice
  0007f	2b c2		 sub	 eax, edx
  00081	83 f8 01	 cmp	 eax, 1
  00084	0f 86 a9 00 00
	00		 jbe	 $LN5@UserNotice

; 606  : 		{
; 607  : 			for ( int n = OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  0008a	bf 00 19 00 00	 mov	 edi, 6400		; 00001900H
  0008f	be 64 c4 16 02	 mov	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+35046500
$LL7@UserNotice:

; 608  : 			{
; 609  : 				if ( gObj[n].Connected >= PLAYER_LOGGED )

  00094	80 7e a0 02	 cmp	 BYTE PTR [esi-96], 2
  00098	72 3f		 jb	 SHORT $LN6@UserNotice

; 610  : 				{
; 611  : 					if ( gObj[n].AccountID[0] == szId[0] )

  0009a	8a 45 f0	 mov	 al, BYTE PTR _szId$[ebp]
  0009d	38 06		 cmp	 BYTE PTR [esi], al
  0009f	75 38		 jne	 SHORT $LN6@UserNotice

; 612  : 					{
; 613  : 						if ( gObj[n].AccountID[1] == szId[1] )

  000a1	8a 4d f1	 mov	 cl, BYTE PTR _szId$[ebp+1]
  000a4	38 4e 01	 cmp	 BYTE PTR [esi+1], cl
  000a7	75 30		 jne	 SHORT $LN6@UserNotice

; 614  : 						{
; 615  : 							if ( strcmp( gObj[n].AccountID , szId) == 0 )

  000a9	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  000ac	8b c6		 mov	 eax, esi
  000ae	8b ff		 npad	 2
$LL19@UserNotice:
  000b0	8a 10		 mov	 dl, BYTE PTR [eax]
  000b2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000b4	75 1a		 jne	 SHORT $LN20@UserNotice
  000b6	84 d2		 test	 dl, dl
  000b8	74 12		 je	 SHORT $LN21@UserNotice
  000ba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000bd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000c0	75 0e		 jne	 SHORT $LN20@UserNotice
  000c2	83 c0 02	 add	 eax, 2
  000c5	83 c1 02	 add	 ecx, 2
  000c8	84 d2		 test	 dl, dl
  000ca	75 e4		 jne	 SHORT $LL19@UserNotice
$LN21@UserNotice:
  000cc	33 c0		 xor	 eax, eax
  000ce	eb 05		 jmp	 SHORT $LN22@UserNotice
$LN20@UserNotice:
  000d0	1b c0		 sbb	 eax, eax
  000d2	83 d8 ff	 sbb	 eax, -1
$LN22@UserNotice:
  000d5	85 c0		 test	 eax, eax
  000d7	74 1f		 je	 SHORT $LN15@UserNotice
$LN6@UserNotice:

; 606  : 		{
; 607  : 			for ( int n = OBJ_STARTUSERINDEX;n<OBJMAX; n++)

  000d9	81 c6 64 15 00
	00		 add	 esi, 5476		; 00001564H
  000df	47		 inc	 edi
  000e0	81 fe 04 53 6a
	02		 cmp	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+40522500
  000e6	7c ac		 jl	 SHORT $LL7@UserNotice
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi

; 621  : 								break;
; 622  : 							}
; 623  : 						}
; 624  : 					}
; 625  : 				}
; 626  : 			} // For
; 627  : 		}
; 628  : 	}
; 629  : }

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ed	33 cd		 xor	 ecx, ebp
  000ef	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
$LN15@UserNotice:

; 616  : 							{
; 617  : 								PMSG_NOTICE pNotice;
; 618  : 								TNotice::MakeNoticeMsg(&pNotice, 0, szNotice);

  000f8	8d 55 b0	 lea	 edx, DWORD PTR _szNotice$[ebp]
  000fb	52		 push	 edx
  000fc	8d 85 a0 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$157099[ebp]
  00102	6a 00		 push	 0
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?MakeNoticeMsg@TNotice@@SAXPAXEPAD@Z ; TNotice::MakeNoticeMsg

; 619  : 								TNotice::SetNoticeProperty(&pNotice, 10,  _ARGB(255, 254, 81, 81), 1, 0, 20);

  0010a	6a 14		 push	 20			; 00000014H
  0010c	6a 00		 push	 0
  0010e	6a 01		 push	 1
  00110	68 fe 51 51 ff	 push	 -11447810		; ff5151feH
  00115	8d 8d a0 fe ff
	ff		 lea	 ecx, DWORD PTR _pNotice$157099[ebp]
  0011b	6a 0a		 push	 10			; 0000000aH
  0011d	51		 push	 ecx
  0011e	e8 00 00 00 00	 call	 ?SetNoticeProperty@TNotice@@SAXPAXEKEGE@Z ; TNotice::SetNoticeProperty

; 620  : 								TNotice::SendNoticeToUser(n, &pNotice);

  00123	8d 95 a0 fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$157099[ebp]
  00129	52		 push	 edx
  0012a	57		 push	 edi
  0012b	e8 00 00 00 00	 call	 ?SendNoticeToUser@TNotice@@SAXHPAX@Z ; TNotice::SendNoticeToUser
  00130	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN5@UserNotice:

; 621  : 								break;
; 622  : 							}
; 623  : 						}
; 624  : 					}
; 625  : 				}
; 626  : 			} // For
; 627  : 		}
; 628  : 	}
; 629  : }

  00133	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00136	5f		 pop	 edi
  00137	33 cd		 xor	 ecx, ebp
  00139	5e		 pop	 esi
  0013a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c3		 ret	 0
?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z ENDP	; UserNoticeRecv
_TEXT	ENDS
PUBLIC	??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GJReqMapSvrMove@@YAXHGGEE@Z			; GJReqMapSvrMove
EXTRN	?PHeadSetB@@YAXPAEEH@Z:PROC			; PHeadSetB
EXTRN	?gObjIsConnected@@YAHH@Z:PROC			; gObjIsConnected
;	COMDAT ??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
CONST	SEGMENT
??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error GJ [0x7A] - User not Connected : %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?GJReqMapSvrMove@@YAXHGGEE@Z
_TEXT	SEGMENT
_pMsg$ = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_wDesMapSvrCode$ = 12					; size = 2
_wMapNumber$ = 16					; size = 2
_btX$ = 20						; size = 1
_btY$ = 24						; size = 1
?GJReqMapSvrMove@@YAXHGGEE@Z PROC			; GJReqMapSvrMove, COMDAT

; 635  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]

; 636  : 	PMSG_REQ_MAPSVRMOVE pMsg;
; 637  : 	
; 638  : 	if ( gObjIsConnected(iIndex) == PLAYER_EMPTY )

  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  0001a	83 c4 04	 add	 esp, 4
  0001d	85 c0		 test	 eax, eax
  0001f	75 1f		 jne	 SHORT $LN2@GJReqMapSv

; 639  : 	{
; 640  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error GJ [0x7A] - User not Connected : %d", iIndex);

  00021	56		 push	 esi
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@LCONAODP@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
  00027	6a 01		 push	 1
  00029	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00031	5e		 pop	 esi

; 659  : 	}
; 660  : }

  00032	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00035	33 cd		 xor	 ecx, ebp
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN2@GJReqMapSv:

; 641  : 	}
; 642  : 	else
; 643  : 	{
; 644  : 		PHeadSetB((LPBYTE)&pMsg, 0x7A, sizeof(PMSG_REQ_MAPSVRMOVE));

  00040	6a 28		 push	 40			; 00000028H
  00042	8d 45 d4	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00045	6a 7a		 push	 122			; 0000007aH
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 645  : 		pMsg.iIndex = iIndex;
; 646  : 
; 647  : 		memcpy(pMsg.szAccountID , gObj[iIndex].AccountID, sizeof( pMsg.szAccountID)-1);

  0004d	8b c6		 mov	 eax, esi
  0004f	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  00055	8b 88 64 00 00
	00		 mov	 ecx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+100]
  0005b	8b 90 68 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+104]
  00061	89 4d dc	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  00064	0f b7 88 6c 00
	00 00		 movzx	 ecx, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+108]
  0006b	89 55 e0	 mov	 DWORD PTR _pMsg$[ebp+12], edx

; 648  : 		pMsg.szAccountID[10] = 0;
; 649  : 		memcpy(pMsg.szCharName, gObj[iIndex].Name, sizeof( pMsg.szCharName)-1);

  0006e	8b 90 6f 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+111]
  00074	66 89 4d e4	 mov	 WORD PTR _pMsg$[ebp+16], cx
  00078	32 c9		 xor	 cl, cl
  0007a	89 55 e7	 mov	 DWORD PTR _pMsg$[ebp+19], edx
  0007d	8b 90 73 00 00
	00		 mov	 edx, DWORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+115]
  00083	0f b7 80 77 00
	00 00		 movzx	 eax, WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+119]
  0008a	88 4d e6	 mov	 BYTE PTR _pMsg$[ebp+18], cl

; 650  : 		pMsg.szCharName[10] = 0;

  0008d	88 4d f1	 mov	 BYTE PTR _pMsg$[ebp+29], cl

; 651  : 
; 652  : 		pMsg.wCurMapSvrCode = gGameServerCode;

  00090	0f b7 0d 00 00
	00 00		 movzx	 ecx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  00097	66 89 45 ef	 mov	 WORD PTR _pMsg$[ebp+27], ax

; 653  : 		pMsg.wDstMapSvrCode = wDesMapSvrCode;
; 654  : 		pMsg.wMapNumber = wMapNumber;

  0009b	66 8b 45 10	 mov	 ax, WORD PTR _wMapNumber$[ebp]
  0009f	66 89 4d f2	 mov	 WORD PTR _pMsg$[ebp+30], cx

; 655  : 		pMsg.btX = btX;

  000a3	8a 4d 14	 mov	 cl, BYTE PTR _btX$[ebp]
  000a6	66 89 45 f6	 mov	 WORD PTR _pMsg$[ebp+34], ax

; 656  : 		pMsg.btY = btY;
; 657  : 
; 658  : 		wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  000aa	0f b6 45 d5	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b1	89 55 eb	 mov	 DWORD PTR _pMsg$[ebp+23], edx
  000b4	66 8b 55 0c	 mov	 dx, WORD PTR _wDesMapSvrCode$[ebp]
  000b8	88 4d f8	 mov	 BYTE PTR _pMsg$[ebp+36], cl
  000bb	50		 push	 eax
  000bc	8d 4d d4	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000bf	66 89 55 f4	 mov	 WORD PTR _pMsg$[ebp+32], dx
  000c3	8a 55 18	 mov	 dl, BYTE PTR _btY$[ebp]
  000c6	51		 push	 ecx
  000c7	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  000cc	89 75 d8	 mov	 DWORD PTR _pMsg$[ebp+4], esi
  000cf	88 55 f9	 mov	 BYTE PTR _pMsg$[ebp+37], dl
  000d2	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 659  : 	}
; 660  : }

  000d7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000da	33 cd		 xor	 ecx, ebp
  000dc	5e		 pop	 esi
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
?GJReqMapSvrMove@@YAXHGGEE@Z ENDP			; GJReqMapSvrMove
_TEXT	ENDS
PUBLIC	??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@ ; `string'
PUBLIC	??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z	; JGAnsMapSvrMove
EXTRN	?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ:PROC	; TNotice::MakeNoticeMsgEx
EXTRN	?DataSend@@YAHHPAEK@Z:PROC			; DataSend
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HH@Z:PROC ; GJSetCharacterInfo
EXTRN	?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z:PROC ; CMapServerManager::GetSvrCodeData
EXTRN	?g_MapServerManager@@3VCMapServerManager@@A:BYTE ; g_MapServerManager
EXTRN	?PHeadSubSetBE@@YAXPAEEEH@Z:PROC		; PHeadSubSetBE
;	COMDAT ??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapservermanager.h
CONST	SEGMENT
??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - User Info Mismatch [%s]['
	DB	'%s]-[%s][%s] (%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - Failed to Authorize User'
	DB	' [%s][%s] Result:%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@
CONST	SEGMENT
??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7A] - Move Map Request OK : MAPS'
	DB	'VR_D:%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - Failed to find Map Info '
	DB	'[%s]-[%s] (%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7A] - User not Connected : %d', 00H ; `string'
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\sprotocol.cpp
CONST	ENDS
;	COMDAT ?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z
_TEXT	SEGMENT
tv230 = -324						; size = 4
tv231 = -320						; size = 4
_pNotice$157147 = -316					; size = 272
_pMsg$157139 = -44					; size = 40
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z PROC	; JGAnsMapSvrMove, COMDAT

; 680  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _lpMsg$[ebp]

; 681  : 	if ( gObjIsConnected(lpMsg->iIndex ) == FALSE )

  00017	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?gObjIsConnected@@YAHH@Z ; gObjIsConnected
  00020	83 c4 04	 add	 esp, 4
  00023	85 c0		 test	 eax, eax
  00025	75 22		 jne	 SHORT $LN6@JGAnsMapSv

; 682  : 	{
; 683  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error JG [0x7A] - User not Connected : %d", lpMsg->iIndex);

  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0002a	51		 push	 ecx
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@OCCMNGHM@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  00030	6a 01		 push	 1
  00032	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	5f		 pop	 edi

; 734  : 	}
; 735  : }

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003e	33 cd		 xor	 ecx, ebp
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
$LN6@JGAnsMapSv:
  00049	53		 push	 ebx
  0004a	56		 push	 esi

; 684  : 		return;
; 685  : 	}
; 686  : 
; 687  : 	LPOBJ lpObj = &gObj[lpMsg->iIndex];

  0004b	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0004e	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H
  00054	81 c6 00 00 00
	00		 add	 esi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj

; 688  : 
; 689  : 	if ( strcmp( lpObj->AccountID , lpMsg->szAccountID )  ||  strcmp( lpObj->Name, lpMsg->szCharName) )

  0005a	8d 5f 08	 lea	 ebx, DWORD PTR [edi+8]
  0005d	8d 46 64	 lea	 eax, DWORD PTR [esi+100]
  00060	89 9d bc fe ff
	ff		 mov	 DWORD PTR tv230[ebp], ebx
  00066	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv231[ebp], eax
  0006c	8b cb		 mov	 ecx, ebx
  0006e	8b ff		 npad	 2
$LL12@JGAnsMapSv:
  00070	8a 10		 mov	 dl, BYTE PTR [eax]
  00072	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00074	75 1a		 jne	 SHORT $LN13@JGAnsMapSv
  00076	84 d2		 test	 dl, dl
  00078	74 12		 je	 SHORT $LN14@JGAnsMapSv
  0007a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0007d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00080	75 0e		 jne	 SHORT $LN13@JGAnsMapSv
  00082	83 c0 02	 add	 eax, 2
  00085	83 c1 02	 add	 ecx, 2
  00088	84 d2		 test	 dl, dl
  0008a	75 e4		 jne	 SHORT $LL12@JGAnsMapSv
$LN14@JGAnsMapSv:
  0008c	33 c0		 xor	 eax, eax
  0008e	eb 05		 jmp	 SHORT $LN15@JGAnsMapSv
$LN13@JGAnsMapSv:
  00090	1b c0		 sbb	 eax, eax
  00092	83 d8 ff	 sbb	 eax, -1
$LN15@JGAnsMapSv:
  00095	85 c0		 test	 eax, eax
  00097	0f 85 8f 01 00
	00		 jne	 $LN4@JGAnsMapSv
  0009d	8d 5e 6f	 lea	 ebx, DWORD PTR [esi+111]
  000a0	8d 4f 13	 lea	 ecx, DWORD PTR [edi+19]
  000a3	8b c3		 mov	 eax, ebx
$LL16@JGAnsMapSv:
  000a5	8a 10		 mov	 dl, BYTE PTR [eax]
  000a7	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000a9	75 1a		 jne	 SHORT $LN17@JGAnsMapSv
  000ab	84 d2		 test	 dl, dl
  000ad	74 12		 je	 SHORT $LN18@JGAnsMapSv
  000af	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000b2	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000b5	75 0e		 jne	 SHORT $LN17@JGAnsMapSv
  000b7	83 c0 02	 add	 eax, 2
  000ba	83 c1 02	 add	 ecx, 2
  000bd	84 d2		 test	 dl, dl
  000bf	75 e4		 jne	 SHORT $LL16@JGAnsMapSv
$LN18@JGAnsMapSv:
  000c1	33 c0		 xor	 eax, eax
  000c3	eb 05		 jmp	 SHORT $LN19@JGAnsMapSv
$LN17@JGAnsMapSv:
  000c5	1b c0		 sbb	 eax, eax
  000c7	83 d8 ff	 sbb	 eax, -1
$LN19@JGAnsMapSv:
  000ca	85 c0		 test	 eax, eax
  000cc	0f 85 54 01 00
	00		 jne	 $LN20@JGAnsMapSv

; 692  : 		return;
; 693  : 	}
; 694  : 
; 695  : 	if ( lpMsg->iResult == 0	 )

  000d2	39 47 28	 cmp	 DWORD PTR [edi+40], eax
  000d5	0f 85 ea 00 00
	00		 jne	 $LN3@JGAnsMapSv

; 696  : 	{
; 697  : 		PMSG_ANS_MAPSERVERCHANGE pMsg;
; 698  : 
; 699  : 		PHeadSubSetBE((LPBYTE)&pMsg, 0xB1, 0x00, sizeof(pMsg));

  000db	6a 28		 push	 40			; 00000028H
  000dd	50		 push	 eax
  000de	8d 55 d4	 lea	 edx, DWORD PTR _pMsg$157139[ebp]
  000e1	68 b1 00 00 00	 push	 177			; 000000b1H
  000e6	52		 push	 edx
  000e7	e8 00 00 00 00	 call	 ?PHeadSubSetBE@@YAXPAEEEH@Z ; PHeadSubSetBE

; 700  : 		
; 701  : 		pMsg.wMapSvrCode = g_MapServerManager.GetMapSvrGroup();

  000ec	a1 80 af 00 00	 mov	 eax, DWORD PTR ?g_MapServerManager@@3VCMapServerManager@@A+44928
  000f1	83 c4 10	 add	 esp, 16			; 00000010H
  000f4	85 c0		 test	 eax, eax
  000f6	74 06		 je	 SHORT $LN9@JGAnsMapSv
  000f8	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
  000fc	eb 03		 jmp	 SHORT $LN10@JGAnsMapSv
$LN9@JGAnsMapSv:
  000fe	83 c8 ff	 or	 eax, -1
$LN10@JGAnsMapSv:

; 702  : 		pMsg.iJoinAuthCode1 = lpMsg->iJoinAuthCode1 ;
; 703  : 		pMsg.iJoinAuthCode2 = lpMsg->iJoinAuthCode2 ;

  00101	8b 4f 30	 mov	 ecx, DWORD PTR [edi+48]

; 704  : 		pMsg.iJoinAuthCode3 = lpMsg->iJoinAuthCode3;

  00104	8b 57 34	 mov	 edx, DWORD PTR [edi+52]
  00107	66 89 45 ea	 mov	 WORD PTR _pMsg$157139[ebp+22], ax
  0010b	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  0010e	89 45 ec	 mov	 DWORD PTR _pMsg$157139[ebp+24], eax

; 705  : 		pMsg.iJoinAuthCode4 = lpMsg->iJoinAuthCode4 ;

  00111	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00114	89 4d f0	 mov	 DWORD PTR _pMsg$157139[ebp+28], ecx

; 706  : 	
; 707  : 		BOOL bRESULT = g_MapServerManager.GetSvrCodeData(lpMsg->wDstMapSvrCode, pMsg.szMapSvrIpAddress, &pMsg.wMapSvrPort);

  00117	8d 4d e8	 lea	 ecx, DWORD PTR _pMsg$157139[ebp+20]
  0011a	51		 push	 ecx
  0011b	89 55 f4	 mov	 DWORD PTR _pMsg$157139[ebp+32], edx
  0011e	89 45 f8	 mov	 DWORD PTR _pMsg$157139[ebp+36], eax
  00121	0f b7 47 20	 movzx	 eax, WORD PTR [edi+32]
  00125	8d 55 d8	 lea	 edx, DWORD PTR _pMsg$157139[ebp+4]
  00128	52		 push	 edx
  00129	50		 push	 eax
  0012a	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_MapServerManager@@3VCMapServerManager@@A ; g_MapServerManager
  0012f	e8 00 00 00 00	 call	 ?GetSvrCodeData@CMapServerManager@@QAEHGPADPAG@Z ; CMapServerManager::GetSvrCodeData

; 708  : 
; 709  : 		if ( bRESULT == FALSE )

  00134	85 c0		 test	 eax, eax
  00136	75 2d		 jne	 SHORT $LN2@JGAnsMapSv

; 710  : 		{
; 711  : 			LogAdd(LOG_RED,  "[MapServerMng] Packet Error JG [0x7A] - Failed to find Map Info [%s]-[%s] (%d)",
; 712  : 				lpObj->AccountID, lpObj->Name, lpMsg->wDstMapSvrCode);

  00138	0f b7 4f 20	 movzx	 ecx, WORD PTR [edi+32]
  0013c	8b 95 c0 fe ff
	ff		 mov	 edx, DWORD PTR tv231[ebp]
  00142	51		 push	 ecx
  00143	53		 push	 ebx
  00144	52		 push	 edx
  00145	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@JGCJAADJ@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  0014a	6a 01		 push	 1
  0014c	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00151	83 c4 14	 add	 esp, 20			; 00000014H
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
  00156	5f		 pop	 edi

; 734  : 	}
; 735  : }

  00157	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015a	33 cd		 xor	 ecx, ebp
  0015c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c3		 ret	 0
$LN2@JGAnsMapSv:

; 713  : 			return;
; 714  : 		}
; 715  : 
; 716  : 		GJSetCharacterInfo(lpObj, lpObj->m_Index, TRUE);

  00165	8b 06		 mov	 eax, DWORD PTR [esi]
  00167	6a 01		 push	 1
  00169	50		 push	 eax
  0016a	56		 push	 esi
  0016b	e8 00 00 00 00	 call	 ?GJSetCharacterInfo@@YAXPAUOBJECTSTRUCT@@HH@Z ; GJSetCharacterInfo
  00170	83 c4 0c	 add	 esp, 12			; 0000000cH

; 717  : 		lpObj->m_bMapSvrMoveQuit = TRUE;

  00173	c6 86 c4 14 00
	00 01		 mov	 BYTE PTR [esi+5316], 1

; 718  : 		lpObj->m_dwMapSvrQuitTick = GetTickCount();

  0017a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0

; 719  : 
; 720  : 		DataSend(lpMsg->iIndex, (LPBYTE)&pMsg, pMsg.h.size);

  00180	0f b6 4d d5	 movzx	 ecx, BYTE PTR _pMsg$157139[ebp+1]
  00184	51		 push	 ecx
  00185	8d 55 d4	 lea	 edx, DWORD PTR _pMsg$157139[ebp]
  00188	89 86 c8 14 00
	00		 mov	 DWORD PTR [esi+5320], eax
  0018e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00191	52		 push	 edx
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 721  : 
; 722  : 		LogAdd(LOG_BLACK, "[MapServerMng] [%s][%s] JG [0x7A] - Move Map Request OK : MAPSVR_D:%d",
; 723  : 			lpObj->AccountID, lpObj->Name, lpMsg->wDstMapSvrCode);

  00198	0f b7 4f 20	 movzx	 ecx, WORD PTR [edi+32]
  0019c	8b 95 c0 fe ff
	ff		 mov	 edx, DWORD PTR tv231[ebp]
  001a2	51		 push	 ecx
  001a3	53		 push	 ebx
  001a4	52		 push	 edx
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@DBEOMGHG@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7A@
  001aa	6a 00		 push	 0
  001ac	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  001b1	83 c4 20	 add	 esp, 32			; 00000020H
  001b4	5e		 pop	 esi
  001b5	5b		 pop	 ebx
  001b6	5f		 pop	 edi

; 734  : 	}
; 735  : }

  001b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ba	33 cd		 xor	 ecx, ebp
  001bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c1	8b e5		 mov	 esp, ebp
  001c3	5d		 pop	 ebp
  001c4	c3		 ret	 0
$LN3@JGAnsMapSv:

; 724  : 	}
; 725  : 	else
; 726  : 	{
; 727  : 		PMSG_NOTICE pNotice;
; 728  : 
; 729  : 		TNotice::MakeNoticeMsgEx(&pNotice, 0, lMsg.Get(MSGGET(6, 77)));

  001c5	68 4d 06 00 00	 push	 1613			; 0000064dH
  001ca	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  001cf	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001d4	50		 push	 eax
  001d5	8d 85 c4 fe ff
	ff		 lea	 eax, DWORD PTR _pNotice$157147[ebp]
  001db	6a 00		 push	 0
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 ?MakeNoticeMsgEx@TNotice@@SAXPAXEPADZZ ; TNotice::MakeNoticeMsgEx

; 730  : 		DataSend(lpObj->m_Index, (LPBYTE)&pNotice, pNotice.h.size);

  001e3	0f b6 8d c5 fe
	ff ff		 movzx	 ecx, BYTE PTR _pNotice$157147[ebp+1]
  001ea	8b 06		 mov	 eax, DWORD PTR [esi]
  001ec	51		 push	 ecx
  001ed	8d 95 c4 fe ff
	ff		 lea	 edx, DWORD PTR _pNotice$157147[ebp]
  001f3	52		 push	 edx
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?DataSend@@YAHHPAEK@Z	; DataSend

; 731  : 
; 732  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error JG [0x7A] - Failed to Authorize User [%s][%s] Result:%d",
; 733  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);

  001fa	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  001fd	8b 95 c0 fe ff
	ff		 mov	 edx, DWORD PTR tv231[ebp]
  00203	51		 push	 ecx
  00204	53		 push	 ebx
  00205	52		 push	 edx
  00206	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@PEPNAIIC@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  0020b	6a 01		 push	 1
  0020d	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00212	83 c4 2c	 add	 esp, 44			; 0000002cH
  00215	5e		 pop	 esi
  00216	5b		 pop	 ebx
  00217	5f		 pop	 edi

; 734  : 	}
; 735  : }

  00218	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0021b	33 cd		 xor	 ecx, ebp
  0021d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c3		 ret	 0
$LN20@JGAnsMapSv:

; 731  : 
; 732  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error JG [0x7A] - Failed to Authorize User [%s][%s] Result:%d",
; 733  : 			lpObj->AccountID, lpObj->Name, lpMsg->iResult);

  00226	8b 9d bc fe ff
	ff		 mov	 ebx, DWORD PTR tv230[ebp]
$LN4@JGAnsMapSv:

; 690  : 	{
; 691  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error JG [0x7A] - User Info Mismatch [%s][%s]-[%s][%s] (%d)", lpMsg->szAccountID, lpMsg->szCharName, lpObj->AccountID, lpObj->Name, lpObj->m_Index);

  0022c	8b 06		 mov	 eax, DWORD PTR [esi]
  0022e	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR tv231[ebp]
  00234	50		 push	 eax
  00235	83 c6 6f	 add	 esi, 111		; 0000006fH
  00238	56		 push	 esi
  00239	51		 push	 ecx
  0023a	83 c7 13	 add	 edi, 19			; 00000013H
  0023d	57		 push	 edi
  0023e	53		 push	 ebx
  0023f	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@JANLFHPE@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  00244	6a 01		 push	 1
  00246	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 734  : 	}
; 735  : }

  0024b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00251	5e		 pop	 esi
  00252	5b		 pop	 ebx
  00253	33 cd		 xor	 ecx, ebp
  00255	5f		 pop	 edi
  00256	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0025b	8b e5		 mov	 esp, ebp
  0025d	5d		 pop	 ebp
  0025e	c3		 ret	 0
?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z ENDP	; JGAnsMapSvrMove
_TEXT	ENDS
PUBLIC	??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z		; GJReqMapSvrAuth
;	COMDAT ??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
CONST	SEGMENT
??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error GJ [0x7B] - Index out of bound : %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z
_TEXT	SEGMENT
_pMsg$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_iIndex$ = 8						; size = 4
_lpszAccountID$ = 12					; size = 4
_lpszCharName$ = 16					; size = 4
_iJA1$ = 20						; size = 4
_iJA2$ = 24						; size = 4
_iJA3$ = 28						; size = 4
_iJA4$ = 32						; size = 4
?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z PROC			; GJReqMapSvrAuth, COMDAT

; 760  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 10	 mov	 ebx, DWORD PTR _lpszCharName$[ebp]
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _iIndex$[ebp]
  00018	57		 push	 edi
  00019	8b 7d 0c	 mov	 edi, DWORD PTR _lpszAccountID$[ebp]

; 761  : 	if ( !OBJMAX_RANGE(iIndex))

  0001c	85 f6		 test	 esi, esi
  0001e	78 0f		 js	 SHORT $LN6@GJReqMapSv@2
  00020	33 c0		 xor	 eax, eax
  00022	81 fe e7 1c 00
	00		 cmp	 esi, 7399		; 00001ce7H
  00028	0f 9e c0	 setle	 al
  0002b	85 c0		 test	 eax, eax
  0002d	75 21		 jne	 SHORT $LN1@GJReqMapSv@2
$LN6@GJReqMapSv@2:

; 762  : 	{
; 763  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error GJ [0x7B] - Index out of bound : %d", iIndex);

  0002f	56		 push	 esi
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@NPBAMLEI@?$FLMapServerMng?$FN?5Packet?5Error?5GJ?5?$FL@
  00035	6a 01		 push	 1
  00037	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx

; 782  : }

  00042	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00045	33 cd		 xor	 ecx, ebp
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN1@GJReqMapSv@2:

; 764  : 		return;
; 765  : 	}
; 766  : 
; 767  : 	PMSG_REQ_MAPSVRAUTH pMsg;
; 768  : 
; 769  : 	PHeadSetB((LPBYTE)&pMsg, 0x7B, sizeof(pMsg));

  00050	6a 30		 push	 48			; 00000030H
  00052	8d 45 cc	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00055	6a 7b		 push	 123			; 0000007bH
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 770  : 	pMsg.iIndex = iIndex;
; 771  : 	memcpy(pMsg.szAccountID, lpszAccountID, MAX_ACCOUNT_LEN);

  0005d	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]
  00061	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00063	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00066	66 89 45 dc	 mov	 WORD PTR _pMsg$[ebp+16], ax

; 772  : 	memcpy(pMsg.szCharName, lpszCharName, MAX_ACCOUNT_LEN);

  0006a	0f b7 43 08	 movzx	 eax, WORD PTR [ebx+8]
  0006e	89 4d d4	 mov	 DWORD PTR _pMsg$[ebp+8], ecx
  00071	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00073	89 4d df	 mov	 DWORD PTR _pMsg$[ebp+19], ecx

; 773  : 	pMsg.wDstMapSvrCode = gGameServerCode;

  00076	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode
  0007d	66 89 45 e7	 mov	 WORD PTR _pMsg$[ebp+27], ax

; 774  : 	pMsg.iJoinAuthCode1 = iJA1;
; 775  : 	pMsg.iJoinAuthCode2 = iJA2;

  00081	8b 45 18	 mov	 eax, DWORD PTR _iJA2$[ebp]
  00084	89 55 d8	 mov	 DWORD PTR _pMsg$[ebp+12], edx
  00087	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]
  0008a	66 89 4d ea	 mov	 WORD PTR _pMsg$[ebp+30], cx

; 776  : 	pMsg.iJoinAuthCode3 = iJA3;

  0008e	8b 4d 1c	 mov	 ecx, DWORD PTR _iJA3$[ebp]
  00091	89 45 f0	 mov	 DWORD PTR _pMsg$[ebp+36], eax

; 777  : 	pMsg.iJoinAuthCode4 = iJA4;
; 778  : 
; 779  : 	wsJServerCli.DataSend((PCHAR)&pMsg, pMsg.h.size);

  00094	0f b6 45 cd	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	89 55 e3	 mov	 DWORD PTR _pMsg$[ebp+23], edx
  0009e	8b 55 14	 mov	 edx, DWORD PTR _iJA1$[ebp]
  000a1	89 4d f4	 mov	 DWORD PTR _pMsg$[ebp+40], ecx
  000a4	50		 push	 eax
  000a5	8d 4d cc	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  000a8	89 55 ec	 mov	 DWORD PTR _pMsg$[ebp+32], edx
  000ab	8b 55 20	 mov	 edx, DWORD PTR _iJA4$[ebp]
  000ae	51		 push	 ecx
  000af	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  000b4	89 75 d0	 mov	 DWORD PTR _pMsg$[ebp+4], esi
  000b7	89 55 f8	 mov	 DWORD PTR _pMsg$[ebp+44], edx
  000ba	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 780  : 
; 781  : 	gObj[iIndex].m_bMapSvrMoveReq = true;

  000bf	69 f6 64 15 00
	00		 imul	 esi, 5476		; 00001564H

; 782  : }

  000c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c8	5f		 pop	 edi
  000c9	c6 86 c5 14 00
	00 01		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[esi+5317], 1
  000d0	5e		 pop	 esi
  000d1	33 cd		 xor	 ecx, ebp
  000d3	5b		 pop	 ebx
  000d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
?GJReqMapSvrAuth@@YAXHPAD0HHHH@Z ENDP			; GJReqMapSvrAuth
_TEXT	ENDS
PUBLIC	??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ ; `string'
PUBLIC	??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ ; `string'
PUBLIC	??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@ ; `string'
PUBLIC	??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z	; JGAnsMapSvrAuth
EXTRN	?Send@DBSockMng@@QAEHPADH@Z:PROC		; DBSockMng::Send
EXTRN	?cDBSMng@@3VDBSockMng@@A:BYTE			; cDBSMng
EXTRN	?BuxConvert@@YAXPADH@Z:PROC			; BuxConvert
EXTRN	?GCAnsMapSvrAuth@@YAXHH@Z:PROC			; GCAnsMapSvrAuth
EXTRN	?gObjSetAccountLogin@@YAHHPADHH0@Z:PROC		; gObjSetAccountLogin
EXTRN	?gObjDel@@YAFH@Z:PROC				; gObjDel
;	COMDAT ??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
CONST	SEGMENT
??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7B] - Join Result OK : RST:%d, B'
	DB	'LK:%c', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
CONST	SEGMENT
??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@ DB '['
	DB	'MapServerMng] [%s][%s] JG [0x7B] - Join Result Failed : RST:%'
	DB	'd, BLK:%c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@
CONST	SEGMENT
??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@ DB '[MapSer'
	DB	'verMng] MapSvr MoveReq Error JG [0x7B] - No Request [%s] (%d)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
CONST	SEGMENT
??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@ DB '[Ma'
	DB	'pServerMng] Packet Error JG [0x7B] - Index out of bound : %d', 00H ; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z
_TEXT	SEGMENT
_lpObj$ = -88						; size = 4
tv296 = -84						; size = 4
_bAuthOK$ = -80						; size = 4
_iSendResult$ = -76					; size = 4
_pMsg$ = -72						; size = 28
_szJN$ = -44						; size = 14
_szName$ = -28						; size = 11
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z PROC	; JGAnsMapSvrAuth, COMDAT

; 790  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 791  : 	if ( !OBJMAX_RANGE(lpMsg->iIndex))

  00014	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00017	33 c0		 xor	 eax, eax
  00019	3b c8		 cmp	 ecx, eax
  0001b	7c 0f		 jl	 SHORT $LN20@JGAnsMapSv@2
  0001d	33 d2		 xor	 edx, edx
  0001f	81 f9 e7 1c 00
	00		 cmp	 ecx, 7399		; 00001ce7H
  00025	0f 9e c2	 setle	 dl
  00028	3b d0		 cmp	 edx, eax
  0002a	75 1f		 jne	 SHORT $LN13@JGAnsMapSv@2
$LN20@JGAnsMapSv@2:

; 792  : 	{
; 793  : 		LogAdd(LOG_RED,  "[MapServerMng] Packet Error JG [0x7B] - Index out of bound : %d",
; 794  : 			lpMsg->iIndex);

  0002c	51		 push	 ecx
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@IPNBBDAL@?$FLMapServerMng?$FN?5Packet?5Error?5JG?5?$FL@
  00032	6a 01		 push	 1
  00034	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	5e		 pop	 esi

; 890  : 
; 891  : }

  0003d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00040	33 cd		 xor	 ecx, ebp
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
$LN13@JGAnsMapSv@2:

; 795  : 		
; 796  : 		return;
; 797  : 	}
; 798  : 
; 799  : 	LPOBJ lpObj = &gObj[lpMsg->iIndex];

  0004b	69 c9 64 15 00
	00		 imul	 ecx, 5476		; 00001564H

; 800  : 	memcpy(lpObj->Name, lpMsg->szCharName, MAX_ACCOUNT_LEN);

  00051	8d 56 13	 lea	 edx, DWORD PTR [esi+19]
  00054	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  0005a	57		 push	 edi
  0005b	8b 3a		 mov	 edi, DWORD PTR [edx]
  0005d	89 79 6f	 mov	 DWORD PTR [ecx+111], edi
  00060	8b 7a 04	 mov	 edi, DWORD PTR [edx+4]
  00063	89 79 73	 mov	 DWORD PTR [ecx+115], edi
  00066	89 55 ac	 mov	 DWORD PTR tv296[ebp], edx
  00069	66 8b 52 08	 mov	 dx, WORD PTR [edx+8]
  0006d	89 4d a8	 mov	 DWORD PTR _lpObj$[ebp], ecx
  00070	66 89 51 77	 mov	 WORD PTR [ecx+119], dx

; 801  : 
; 802  : 
; 803  : 	if ( lpObj->m_bMapSvrMoveReq == false )

  00074	38 81 c5 14 00
	00		 cmp	 BYTE PTR [ecx+5317], al
  0007a	75 2f		 jne	 SHORT $LN12@JGAnsMapSv@2

; 804  : 	{
; 805  : 		LogAdd(LOG_RED,  "[MapServerMng] MapSvr MoveReq Error JG [0x7B] - No Request [%s] (%d)",
; 806  : 			lpObj->AccountID, lpObj->m_Index);

  0007c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007e	50		 push	 eax
  0007f	83 c1 64	 add	 ecx, 100		; 00000064H
  00082	51		 push	 ecx
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@OOAPAFHL@?$FLMapServerMng?$FN?5MapSvr?5MoveReq?5Er@
  00088	6a 01		 push	 1
  0008a	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 807  : 
; 808  : 		gObjDel(lpMsg->iIndex);

  0008f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00092	51		 push	 ecx
  00093	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  00098	83 c4 14	 add	 esp, 20			; 00000014H
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi

; 890  : 
; 891  : }

  0009d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a0	33 cd		 xor	 ecx, ebp
  000a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
$LN12@JGAnsMapSv@2:

; 809  : 		return;
; 810  : 	}
; 811  : 
; 812  : 	BOOL bAuthOK = FALSE;
; 813  : 	int iSendResult = 0;
; 814  : 	char szId[11];
; 815  : 	char szJN[14] = "";
; 816  : 	int iIndex = lpMsg->iIndex;
; 817  : 	SDHP_DBCHARINFOREQUEST pMsg;
; 818  : 	char szName[11];
; 819  : 
; 820  : 	memset(szId, 0, sizeof(szId));
; 821  : 	memcpy(szId, lpMsg->szAccountID, MAX_ACCOUNT_LEN);

  000ab	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  000ae	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000b1	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  000b4	53		 push	 ebx
  000b5	8d 5e 08	 lea	 ebx, DWORD PTR [esi+8]
  000b8	89 45 f0	 mov	 DWORD PTR _szId$[ebp], eax
  000bb	89 55 f0	 mov	 DWORD PTR _szId$[ebp], edx
  000be	66 8b 53 08	 mov	 dx, WORD PTR [ebx+8]
  000c2	89 45 f4	 mov	 DWORD PTR _szId$[ebp+4], eax
  000c5	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
  000c9	89 4d f4	 mov	 DWORD PTR _szId$[ebp+4], ecx

; 822  : 	memcpy(szJN, lpMsg->cJoominNumber, sizeof(lpMsg->cJoominNumber));

  000cc	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  000cf	66 89 55 f8	 mov	 WORD PTR _szId$[ebp+8], dx
  000d3	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
  000d6	89 45 d5	 mov	 DWORD PTR _szJN$[ebp+1], eax
  000d9	89 45 d9	 mov	 DWORD PTR _szJN$[ebp+5], eax
  000dc	89 4d d4	 mov	 DWORD PTR _szJN$[ebp], ecx
  000df	8b 4e 38	 mov	 ecx, DWORD PTR [esi+56]
  000e2	89 55 d8	 mov	 DWORD PTR _szJN$[ebp+4], edx
  000e5	8a 56 3c	 mov	 dl, BYTE PTR [esi+60]
  000e8	89 45 dd	 mov	 DWORD PTR _szJN$[ebp+9], eax
  000eb	88 45 e1	 mov	 BYTE PTR _szJN$[ebp+13], al
  000ee	88 45 fa	 mov	 BYTE PTR _szId$[ebp+10], al
  000f1	89 4d dc	 mov	 DWORD PTR _szJN$[ebp+8], ecx
  000f4	88 55 e0	 mov	 BYTE PTR _szJN$[ebp+12], dl

; 851  : 					break;
; 852  : 			}
; 853  : 			break;
; 854  : 
; 855  : 		default:
; 856  : 			iSendResult = 0;

  000f7	89 45 b4	 mov	 DWORD PTR _iSendResult$[ebp], eax

; 857  : 			bAuthOK = FALSE;

  000fa	89 45 b0	 mov	 DWORD PTR _bAuthOK$[ebp], eax
  000fd	39 46 24	 cmp	 DWORD PTR [esi+36], eax

; 858  : 			break;

  00100	0f 85 bb 00 00
	00		 jne	 $LN21@JGAnsMapSv@2

; 823  : 	
; 824  : 	switch ( lpMsg->iResult )
; 825  : 	{
; 826  : 		case 0:
; 827  : 			iSendResult = 0;
; 828  : 			bAuthOK = FALSE;
; 829  : 
; 830  : 			if ( !gObjSetAccountLogin(iIndex, szId, lpMsg->iUserNumber, lpMsg->iDBNumber, szJN))

  00106	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00109	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  0010c	8d 45 d4	 lea	 eax, DWORD PTR _szJN$[ebp]
  0010f	50		 push	 eax
  00110	51		 push	 ecx
  00111	52		 push	 edx
  00112	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00115	50		 push	 eax
  00116	57		 push	 edi
  00117	e8 00 00 00 00	 call	 ?gObjSetAccountLogin@@YAHHPADHH0@Z ; gObjSetAccountLogin
  0011c	83 c4 14	 add	 esp, 20			; 00000014H
  0011f	85 c0		 test	 eax, eax

; 831  : 			{
; 832  : 				GJPAccountFail(iIndex, szId, lpMsg->iDBNumber, lpMsg->iUserNumber);

  00121	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00124	75 1b		 jne	 SHORT $LN8@JGAnsMapSv@2
  00126	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00129	8b 56 2c	 mov	 edx, DWORD PTR [esi+44]
  0012c	51		 push	 ecx
  0012d	52		 push	 edx
  0012e	50		 push	 eax
  0012f	57		 push	 edi
  00130	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  00135	83 c4 10	 add	 esp, 16			; 00000010H

; 833  : 				lpMsg->iResult = 4;

  00138	c7 46 24 04 00
	00 00		 mov	 DWORD PTR [esi+36], 4

; 834  : 			}
; 835  : 			else

  0013f	eb 3d		 jmp	 SHORT $LN7@JGAnsMapSv@2
$LN8@JGAnsMapSv@2:

; 836  : 			{
; 837  : 				LogAdd(LOG_BLACK, lMsg.Get(MSGGET(1, 211)), gObj[iIndex].Ip_addr, szId, lpMsg->iUserNumber, lpMsg->iDBNumber);

  00141	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00144	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  00147	51		 push	 ecx
  00148	8b cf		 mov	 ecx, edi
  0014a	69 c9 64 15 00
	00		 imul	 ecx, 5476		; 00001564H
  00150	52		 push	 edx
  00151	50		 push	 eax
  00152	81 c1 14 00 00
	00		 add	 ecx, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+20
  00158	51		 push	 ecx
  00159	68 d3 01 00 00	 push	 467			; 000001d3H
  0015e	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  00163	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00168	50		 push	 eax
  00169	6a 00		 push	 0
  0016b	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 838  : 				iSendResult = 1;

  00170	b8 01 00 00 00	 mov	 eax, 1
  00175	83 c4 18	 add	 esp, 24			; 00000018H
  00178	89 45 b4	 mov	 DWORD PTR _iSendResult$[ebp], eax

; 839  : 				bAuthOK = TRUE;

  0017b	89 45 b0	 mov	 DWORD PTR _bAuthOK$[ebp], eax
$LN7@JGAnsMapSv@2:

; 840  : 			}
; 841  : 
; 842  : 			if ( lpMsg->iUserNumber == 0 && lpMsg->iDBNumber == 0 )

  0017e	83 7e 28 00	 cmp	 DWORD PTR [esi+40], 0
  00182	75 28		 jne	 SHORT $LN6@JGAnsMapSv@2
  00184	83 7e 2c 00	 cmp	 DWORD PTR [esi+44], 0
  00188	75 22		 jne	 SHORT $LN6@JGAnsMapSv@2

; 843  : 			{
; 844  : 				LogAdd(LOG_BLACK, lMsg.Get(MSGGET(1, 212)), szId, lpMsg->iUserNumber, lpMsg->iDBNumber);

  0018a	6a 00		 push	 0
  0018c	6a 00		 push	 0
  0018e	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  00191	52		 push	 edx
  00192	68 d4 01 00 00	 push	 468			; 000001d4H
  00197	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0019c	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  001a1	50		 push	 eax
  001a2	6a 00		 push	 0
  001a4	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  001a9	83 c4 14	 add	 esp, 20			; 00000014H
$LN6@JGAnsMapSv@2:

; 845  : 			}
; 846  : 
; 847  : 			switch ( lpMsg->btBlockCode )

  001ac	80 7e 3d 46	 cmp	 BYTE PTR [esi+61], 70	; 00000046H
  001b0	75 0f		 jne	 SHORT $LN21@JGAnsMapSv@2

; 848  : 			{
; 849  : 				case 70:	// 0x46
; 850  : 					gObj[iIndex].m_cAccountItemBlock = 1;

  001b2	8b c7		 mov	 eax, edi
  001b4	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  001ba	c6 80 b0 01 00
	00 01		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+432], 1
$LN21@JGAnsMapSv@2:

; 859  : 	}
; 860  : 
; 861  : 	GCAnsMapSvrAuth(iIndex, iSendResult);

  001c1	8b 4d b4	 mov	 ecx, DWORD PTR _iSendResult$[ebp]
  001c4	51		 push	 ecx
  001c5	57		 push	 edi
  001c6	e8 00 00 00 00	 call	 ?GCAnsMapSvrAuth@@YAXHH@Z ; GCAnsMapSvrAuth
  001cb	83 c4 08	 add	 esp, 8

; 862  : 
; 863  : 	if ( bAuthOK == FALSE )

  001ce	83 7d b0 00	 cmp	 DWORD PTR _bAuthOK$[ebp], 0
  001d2	75 3a		 jne	 SHORT $LN1@JGAnsMapSv@2

; 864  : 	{
; 865  : 		LogAdd(LOG_RED,  "[MapServerMng] [%s][%s] JG [0x7B] - Join Result Failed : RST:%d, BLK:%c",
; 866  : 			szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);

  001d4	0f b6 56 3d	 movzx	 edx, BYTE PTR [esi+61]
  001d8	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  001db	8b 4d ac	 mov	 ecx, DWORD PTR tv296[ebp]
  001de	52		 push	 edx
  001df	50		 push	 eax
  001e0	51		 push	 ecx
  001e1	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  001e4	52		 push	 edx
  001e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@PFOEEAH@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
  001ea	6a 01		 push	 1
  001ec	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 867  : 		gObjDel(lpMsg->iIndex);

  001f1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?gObjDel@@YAFH@Z	; gObjDel
  001fa	83 c4 1c	 add	 esp, 28			; 0000001cH
  001fd	5b		 pop	 ebx
  001fe	5f		 pop	 edi
  001ff	5e		 pop	 esi

; 890  : 
; 891  : }

  00200	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00203	33 cd		 xor	 ecx, ebp
  00205	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020a	8b e5		 mov	 esp, ebp
  0020c	5d		 pop	 ebp
  0020d	c3		 ret	 0
$LN1@JGAnsMapSv@2:

; 868  : 
; 869  : 		return;
; 870  : 	}
; 871  : 	
; 872  : 	gObj[iIndex].m_sPrevMapSvrCode = lpMsg->wPrevMapSvrCode;

  0020e	0f b7 4e 1e	 movzx	 ecx, WORD PTR [esi+30]
  00212	8b c7		 mov	 eax, edi
  00214	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  0021a	66 89 88 cc 14
	00 00		 mov	 WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+5324], cx

; 873  : 	gObj[iIndex].m_sDestMapNumber  = lpMsg->wMapNumber;

  00221	66 8b 56 20	 mov	 dx, WORD PTR [esi+32]
  00225	66 89 90 ce 14
	00 00		 mov	 WORD PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+5326], dx

; 874  : 	gObj[iIndex].m_btDestX = lpMsg->btX;

  0022c	8a 4e 22	 mov	 cl, BYTE PTR [esi+34]
  0022f	88 88 d0 14 00
	00		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+5328], cl

; 875  : 	gObj[iIndex].m_btDestY = lpMsg->btY;

  00235	8a 56 23	 mov	 dl, BYTE PTR [esi+35]

; 876  : 	gObj[iIndex].bEnableDelCharacter = FALSE;
; 877  : 
; 878  : 	PHeadSetB((LPBYTE)&pMsg, 0x06, sizeof(pMsg));

  00238	6a 1c		 push	 28			; 0000001cH
  0023a	88 90 d1 14 00
	00		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+5329], dl
  00240	c6 80 09 00 00
	00 00		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+9], 0
  00247	8d 45 b8	 lea	 eax, DWORD PTR _pMsg$[ebp]
  0024a	6a 06		 push	 6
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 879  : 	memset(szName, 0, sizeof(szName));
; 880  : 	memcpy(szName, lpMsg->szCharName, MAX_ACCOUNT_LEN);

  00252	8b 7d ac	 mov	 edi, DWORD PTR tv296[ebp]
  00255	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00257	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0025a	33 c0		 xor	 eax, eax
  0025c	89 45 e4	 mov	 DWORD PTR _szName$[ebp], eax
  0025f	89 45 e8	 mov	 DWORD PTR _szName$[ebp+4], eax
  00262	66 89 45 ec	 mov	 WORD PTR _szName$[ebp+8], ax
  00266	89 4d e4	 mov	 DWORD PTR _szName$[ebp], ecx
  00269	88 45 ee	 mov	 BYTE PTR _szName$[ebp+10], al
  0026c	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]

; 881  : 	BuxConvert(szName, MAX_ACCOUNT_LEN);

  00270	8d 4d e4	 lea	 ecx, DWORD PTR _szName$[ebp]
  00273	6a 0a		 push	 10			; 0000000aH
  00275	51		 push	 ecx
  00276	89 55 e8	 mov	 DWORD PTR _szName$[ebp+4], edx
  00279	66 89 45 ec	 mov	 WORD PTR _szName$[ebp+8], ax
  0027d	e8 00 00 00 00	 call	 ?BuxConvert@@YAXPADH@Z	; BuxConvert

; 882  : 	memcpy(pMsg.Name, szName, MAX_ACCOUNT_LEN);

  00282	8b 55 e4	 mov	 edx, DWORD PTR _szName$[ebp]
  00285	8b 45 e8	 mov	 eax, DWORD PTR _szName$[ebp+4]
  00288	0f b7 4d ec	 movzx	 ecx, WORD PTR _szName$[ebp+8]
  0028c	89 55 c6	 mov	 DWORD PTR _pMsg$[ebp+14], edx

; 883  : 	strcpy(pMsg.AccountID, lpMsg->szAccountID);

  0028f	8d 55 bb	 lea	 edx, DWORD PTR _pMsg$[ebp+3]
  00292	83 c4 14	 add	 esp, 20			; 00000014H
  00295	89 45 ca	 mov	 DWORD PTR _pMsg$[ebp+18], eax
  00298	66 89 4d ce	 mov	 WORD PTR _pMsg$[ebp+22], cx
  0029c	8b c3		 mov	 eax, ebx
  0029e	2b d3		 sub	 edx, ebx
$LL18@JGAnsMapSv@2:
  002a0	8a 08		 mov	 cl, BYTE PTR [eax]
  002a2	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  002a5	40		 inc	 eax
  002a6	84 c9		 test	 cl, cl
  002a8	75 f6		 jne	 SHORT $LL18@JGAnsMapSv@2

; 884  : 	pMsg.Number = lpObj->m_Index;
; 885  : 
; 886  : 	cDBSMng.Send((PCHAR)&pMsg, pMsg.h.size);

  002aa	0f b6 4d b9	 movzx	 ecx, BYTE PTR _pMsg$[ebp+1]
  002ae	8b 55 a8	 mov	 edx, DWORD PTR _lpObj$[ebp]
  002b1	66 8b 02	 mov	 ax, WORD PTR [edx]
  002b4	51		 push	 ecx
  002b5	8d 55 b8	 lea	 edx, DWORD PTR _pMsg$[ebp]
  002b8	52		 push	 edx
  002b9	b9 00 00 00 00	 mov	 ecx, OFFSET ?cDBSMng@@3VDBSockMng@@A ; cDBSMng
  002be	66 89 45 d2	 mov	 WORD PTR _pMsg$[ebp+26], ax
  002c2	e8 00 00 00 00	 call	 ?Send@DBSockMng@@QAEHPADH@Z ; DBSockMng::Send

; 887  : 
; 888  : 	LogAdd(LOG_BLACK, "[MapServerMng] [%s][%s] JG [0x7B] - Join Result OK : RST:%d, BLK:%c",
; 889  : 		szId, lpMsg->szCharName, lpMsg->iResult, lpMsg->btBlockCode);

  002c7	0f b6 46 3d	 movzx	 eax, BYTE PTR [esi+61]
  002cb	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  002ce	50		 push	 eax
  002cf	51		 push	 ecx
  002d0	57		 push	 edi
  002d1	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  002d4	52		 push	 edx
  002d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@OBJPBDGN@?$FLMapServerMng?$FN?5?$FL?$CFs?$FN?$FL?$CFs?$FN?5JG?5?$FL0x7B@
  002da	6a 00		 push	 0
  002dc	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 890  : 
; 891  : }

  002e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e4	83 c4 18	 add	 esp, 24			; 00000018H
  002e7	5b		 pop	 ebx
  002e8	5f		 pop	 edi
  002e9	33 cd		 xor	 ecx, ebp
  002eb	5e		 pop	 esi
  002ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f1	8b e5		 mov	 esp, ebp
  002f3	5d		 pop	 ebp
  002f4	c3		 ret	 0
?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z ENDP	; JGAnsMapSvrAuth
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJNotifyMaxUserCount@@YAXXZ			; GJNotifyMaxUserCount
EXTRN	?gObjTotalUser@@3HA:DWORD			; gObjTotalUser
EXTRN	?gServerMaxUser@@3HA:DWORD			; gServerMaxUser
; Function compile flags: /Ogtp
;	COMDAT ?GJNotifyMaxUserCount@@YAXXZ
_TEXT	SEGMENT
_pMsg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GJNotifyMaxUserCount@@YAXXZ PROC			; GJNotifyMaxUserCount, COMDAT

; 910  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 911  : 	PMSG_NOTIFY_MAXUSER pMsg;
; 912  : 
; 913  : 	PHeadSetB((LPBYTE)&pMsg, 0x7C, sizeof(PMSG_NOTIFY_MAXUSER));

  00010	6a 10		 push	 16			; 00000010H
  00012	8d 45 ec	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00015	6a 7c		 push	 124			; 0000007cH
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 914  : 	pMsg.iSvrCode = gGameServerCode;

  0001d	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?gGameServerCode@@3FA ; gGameServerCode

; 915  : 	pMsg.iMaxUserCount = gServerMaxUser;

  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gServerMaxUser@@3HA ; gServerMaxUser

; 916  : 	pMsg.iCurUserCount = gObjTotalUser;

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gObjTotalUser@@3HA ; gObjTotalUser
  0002f	89 4d f0	 mov	 DWORD PTR _pMsg$[ebp+4], ecx

; 917  : 	
; 918  : 	wsJServerCli.DataSend((char*)&pMsg, pMsg.h.size);

  00032	0f b6 4d ed	 movzx	 ecx, BYTE PTR _pMsg$[ebp+1]
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	89 55 f4	 mov	 DWORD PTR _pMsg$[ebp+8], edx
  0003c	51		 push	 ecx
  0003d	8d 55 ec	 lea	 edx, DWORD PTR _pMsg$[ebp]
  00040	52		 push	 edx
  00041	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00046	89 45 f8	 mov	 DWORD PTR _pMsg$[ebp+12], eax
  00049	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 919  : }

  0004e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00051	33 cd		 xor	 ecx, ebp
  00053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?GJNotifyMaxUserCount@@YAXXZ ENDP			; GJNotifyMaxUserCount
_TEXT	ENDS
PUBLIC	?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z	; JGPSendMail
EXTRN	?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z:PROC ; MngFriendMemoSend
; Function compile flags: /Ogtp
;	COMDAT ?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z PROC		; JGPSendMail, COMDAT

; 922  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 924  : }

  00003	5d		 pop	 ebp

; 923  : 	MngFriendMemoSend(lpMsg);

  00004	e9 00 00 00 00	 jmp	 ?MngFriendMemoSend@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ; MngFriendMemoSend
?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ENDP		; JGPSendMail
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z ; GJUpdateMatchDBUserCharacters
; Function compile flags: /Ogtp
;	COMDAT ?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z
_TEXT	SEGMENT
_pMsg$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_lpObj$ = 8						; size = 4
?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z PROC ; GJUpdateMatchDBUserCharacters, COMDAT

; 940  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpObj$[ebp]

; 941  : 	SDHP_REQ_UPDATE_MATCHDB_USERCHARACTERS pMsg;
; 942  : 
; 943  : 	PHeadSetB((LPBYTE)&pMsg, 0x16, sizeof(SDHP_REQ_UPDATE_MATCHDB_USERCHARACTERS));

  00014	6a 1c		 push	 28			; 0000001cH
  00016	8d 45 e0	 lea	 eax, DWORD PTR _pMsg$[ebp]
  00019	6a 16		 push	 22			; 00000016H
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?PHeadSetB@@YAXPAEEH@Z	; PHeadSetB

; 944  : 	pMsg.DbClass = lpObj->DbClass;
; 945  : 	pMsg.Level = lpObj->Level;

  00021	0f b7 96 9c 00
	00 00		 movzx	 edx, WORD PTR [esi+156]

; 946  : 	memcpy(pMsg.szId, lpObj->AccountID, sizeof(pMsg.szId));

  00028	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  0002b	8a 8e 9a 00 00
	00		 mov	 cl, BYTE PTR [esi+154]
  00031	88 4d fa	 mov	 BYTE PTR _pMsg$[ebp+26], cl
  00034	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  00037	89 45 e3	 mov	 DWORD PTR _pMsg$[ebp+3], eax

; 947  : 	memcpy(pMsg.szName, lpObj->BackName, sizeof(pMsg.szName));

  0003a	8b 86 15 0f 00
	00		 mov	 eax, DWORD PTR [esi+3861]
  00040	66 89 55 f8	 mov	 WORD PTR _pMsg$[ebp+24], dx
  00044	0f b7 56 6c	 movzx	 edx, WORD PTR [esi+108]
  00048	89 4d e7	 mov	 DWORD PTR _pMsg$[ebp+7], ecx
  0004b	8b 8e 19 0f 00
	00		 mov	 ecx, DWORD PTR [esi+3865]
  00051	89 45 ed	 mov	 DWORD PTR _pMsg$[ebp+13], eax

; 948  : 
; 949  : 	wsJServerCli.DataSend((PCHAR)&pMsg, pMsg.h.size);

  00054	0f b6 45 e1	 movzx	 eax, BYTE PTR _pMsg$[ebp+1]
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	89 4d f1	 mov	 DWORD PTR _pMsg$[ebp+17], ecx
  0005e	66 89 55 eb	 mov	 WORD PTR _pMsg$[ebp+11], dx
  00062	0f b7 96 1d 0f
	00 00		 movzx	 edx, WORD PTR [esi+3869]
  00069	50		 push	 eax
  0006a	8d 4d e0	 lea	 ecx, DWORD PTR _pMsg$[ebp]
  0006d	51		 push	 ecx
  0006e	b9 00 00 00 00	 mov	 ecx, OFFSET ?wsJServerCli@@3VwsJoinServerCli@@A ; wsJServerCli
  00073	66 89 55 f5	 mov	 WORD PTR _pMsg$[ebp+21], dx
  00077	e8 00 00 00 00	 call	 ?DataSend@wsJoinServerCli@@QAEHPADH@Z ; wsJoinServerCli::DataSend

; 950  : }

  0007c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007f	33 cd		 xor	 ecx, ebp
  00081	5e		 pop	 esi
  00082	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
?GJUpdateMatchDBUserCharacters@@YAXPAUOBJECTSTRUCT@@@Z ENDP ; GJUpdateMatchDBUserCharacters
_TEXT	ENDS
PUBLIC	?SetBill@BILL_CLASS@@QAEHEEKPAD@Z		; BILL_CLASS::SetBill
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\user.h
;	COMDAT ?SetBill@BILL_CLASS@@QAEHEEKPAD@Z
_TEXT	SEGMENT
_certify_type$ = 8					; size = 1
_pay$ = 12						; size = 1
_end_time$ = 16						; size = 4
_ends_days$ = 20					; size = 4
?SetBill@BILL_CLASS@@QAEHEEKPAD@Z PROC			; BILL_CLASS::SetBill, COMDAT
; _this$ = ecx

; 830  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 831  : 		BOOL bRet=FALSE;

  00003	33 c0		 xor	 eax, eax

; 832  : 
; 833  : 		if ( this->cCertifyType == -1 )bRet = TRUE;

  00005	80 39 ff	 cmp	 BYTE PTR [ecx], -1
  00008	75 05		 jne	 SHORT $LN1@SetBill
  0000a	b8 01 00 00 00	 mov	 eax, 1
$LN1@SetBill:

; 834  : 		cCertifyType = certify_type;

  0000f	8a 55 08	 mov	 dl, BYTE PTR _certify_type$[ebp]
  00012	88 11		 mov	 BYTE PTR [ecx], dl

; 835  : 		PayCode = pay;

  00014	8a 55 0c	 mov	 dl, BYTE PTR _pay$[ebp]
  00017	88 51 01	 mov	 BYTE PTR [ecx+1], dl

; 836  : 		EndTime = end_time;

  0001a	8b 55 10	 mov	 edx, DWORD PTR _end_time$[ebp]
  0001d	56		 push	 esi
  0001e	89 51 04	 mov	 DWORD PTR [ecx+4], edx

; 837  : 		strcpy(EndsDays, ends_days);

  00021	8b 55 14	 mov	 edx, DWORD PTR _ends_days$[ebp]
  00024	8d 71 08	 lea	 esi, DWORD PTR [ecx+8]
  00027	2b f2		 sub	 esi, edx
  00029	8d a4 24 00 00
	00 00		 npad	 7
$LL4@SetBill:
  00030	8a 0a		 mov	 cl, BYTE PTR [edx]
  00032	88 0c 16	 mov	 BYTE PTR [esi+edx], cl
  00035	42		 inc	 edx
  00036	84 c9		 test	 cl, cl
  00038	75 f6		 jne	 SHORT $LL4@SetBill
  0003a	5e		 pop	 esi

; 838  : 		return bRet;
; 839  : 	};

  0003b	5d		 pop	 ebp
  0003c	c2 10 00	 ret	 16			; 00000010H
?SetBill@BILL_CLASS@@QAEHEEKPAD@Z ENDP			; BILL_CLASS::SetBill
_TEXT	ENDS
PUBLIC	?GetState@CDragonEvent@@QAEEXZ			; CDragonEvent::GetState
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\dragonevent.h
;	COMDAT ?GetState@CDragonEvent@@QAEEXZ
_TEXT	SEGMENT
?GetState@CDragonEvent@@QAEEXZ PROC			; CDragonEvent::GetState, COMDAT
; _this$ = ecx

; 19   : 	BYTE GetState(){return this->EventState;}	// Dagon event line 30.h

  00000	8a 41 04	 mov	 al, BYTE PTR [ecx+4]
  00003	c3		 ret	 0
?GetState@CDragonEvent@@QAEEXZ ENDP			; CDragonEvent::GetState
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z	; JGPAccountRequest
EXTRN	?CloseClient@@YAXH@Z:PROC			; CloseClient
EXTRN	?GCJoinResult@@YAXEH@Z:PROC			; GCJoinResult
EXTRN	?gJoominCheck@@YAHPADH@Z:PROC			; gJoominCheck
EXTRN	?gPkLimitFree@@3HA:DWORD			; gPkLimitFree
EXTRN	?gJoomin15Check@@YAHPAD@Z:PROC			; gJoomin15Check
EXTRN	?gLanguage@@3HA:DWORD				; gLanguage
EXTRN	?gNonPK@@3HA:DWORD				; gNonPK
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\sprotocol.cpp
;	COMDAT ?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z
_TEXT	SEGMENT
_szJN$ = -32						; size = 14
_szId$ = -16						; size = 11
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z PROC	; JGPAccountRequest, COMDAT

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 170  : 	char szId[11];
; 171  : 	int aIndex;
; 172  : 	char szJN[14]="";

  00010	53		 push	 ebx

; 173  : 	
; 174  : 	memset(szId, 0, sizeof(szId));

  00011	56		 push	 esi

; 177  : 
; 178  : 	aIndex = lpMsg->Number ;
; 179  : 	
; 180  : 	if ( lpMsg->result  == 1 || lpMsg->result  == 15 )

  00012	57		 push	 edi

; 170  : 	char szId[11];
; 171  : 	int aIndex;
; 172  : 	char szJN[14]="";

  00013	33 c0		 xor	 eax, eax
  00015	89 45 e1	 mov	 DWORD PTR _szJN$[ebp+1], eax
  00018	89 45 e5	 mov	 DWORD PTR _szJN$[ebp+5], eax
  0001b	89 45 e9	 mov	 DWORD PTR _szJN$[ebp+9], eax

; 173  : 	
; 174  : 	memset(szId, 0, sizeof(szId));

  0001e	89 45 f0	 mov	 DWORD PTR _szId$[ebp], eax
  00021	89 45 f4	 mov	 DWORD PTR _szId$[ebp+4], eax
  00024	66 89 45 f8	 mov	 WORD PTR _szId$[ebp+8], ax
  00028	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 175  : 	memcpy(szId, lpMsg->Id , sizeof(lpMsg->Id));

  0002b	8b 4e 0a	 mov	 ecx, DWORD PTR [esi+10]
  0002e	66 8b 56 0e	 mov	 dx, WORD PTR [esi+14]
  00032	88 45 ed	 mov	 BYTE PTR _szJN$[ebp+13], al
  00035	88 45 fa	 mov	 BYTE PTR _szId$[ebp+10], al
  00038	8b 46 06	 mov	 eax, DWORD PTR [esi+6]
  0003b	89 45 f0	 mov	 DWORD PTR _szId$[ebp], eax

; 176  : 	memcpy(szJN, lpMsg->JoominNumber , sizeof(lpMsg->JoominNumber));

  0003e	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00041	89 45 e0	 mov	 DWORD PTR _szJN$[ebp], eax
  00044	0f b6 46 24	 movzx	 eax, BYTE PTR [esi+36]
  00048	88 45 ec	 mov	 BYTE PTR _szJN$[ebp+12], al

; 177  : 
; 178  : 	aIndex = lpMsg->Number ;
; 179  : 	
; 180  : 	if ( lpMsg->result  == 1 || lpMsg->result  == 15 )

  0004b	8a 46 03	 mov	 al, BYTE PTR [esi+3]
  0004e	89 4d f4	 mov	 DWORD PTR _szId$[ebp+4], ecx
  00051	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00054	66 89 55 f8	 mov	 WORD PTR _szId$[ebp+8], dx
  00058	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  0005b	0f bf 7e 04	 movsx	 edi, WORD PTR [esi+4]
  0005f	89 4d e4	 mov	 DWORD PTR _szJN$[ebp+4], ecx
  00062	89 55 e8	 mov	 DWORD PTR _szJN$[ebp+8], edx
  00065	3c 01		 cmp	 al, 1
  00067	74 04		 je	 SHORT $LN16@JGPAccount
  00069	3c 0f		 cmp	 al, 15			; 0000000fH
  0006b	75 78		 jne	 SHORT $LN21@JGPAccount
$LN16@JGPAccount:

; 181  : 	{
; 182  : 		if ( gNonPK == 0 && gLanguage == 0 )

  0006d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gNonPK@@3HA, 0 ; gNonPK
  00074	b3 11		 mov	 bl, 17			; 00000011H
  00076	75 31		 jne	 SHORT $LN22@JGPAccount
  00078	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gLanguage@@3HA, 0 ; gLanguage
  0007f	75 28		 jne	 SHORT $LN22@JGPAccount

; 183  : 		{
; 184  : 			if (gJoomin15Check(szJN) == 0 )

  00081	8d 4d e0	 lea	 ecx, DWORD PTR _szJN$[ebp]
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 ?gJoomin15Check@@YAHPAD@Z ; gJoomin15Check
  0008a	83 c4 04	 add	 esp, 4
  0008d	85 c0		 test	 eax, eax
  0008f	75 18		 jne	 SHORT $LN22@JGPAccount

; 185  : 			{
; 186  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber );

  00091	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00094	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00097	52		 push	 edx
  00098	50		 push	 eax
  00099	8d 4d f0	 lea	 ecx, DWORD PTR _szId$[ebp]
  0009c	51		 push	 ecx
  0009d	57		 push	 edi
  0009e	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  000a3	83 c4 10	 add	 esp, 16			; 00000010H

; 187  : 				lpMsg->result  = 17;

  000a6	88 5e 03	 mov	 BYTE PTR [esi+3], bl
$LN22@JGPAccount:

; 188  : 			}
; 189  : 		}
; 190  : 			
; 191  : 		if ( gPkLimitFree == 1 && gLanguage == 0 )

  000a9	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?gPkLimitFree@@3HA, 1 ; gPkLimitFree
  000b0	75 33		 jne	 SHORT $LN21@JGPAccount
  000b2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gLanguage@@3HA, 0 ; gLanguage
  000b9	75 2a		 jne	 SHORT $LN21@JGPAccount

; 192  : 		{
; 193  : 			if (gJoominCheck(szJN, 18) == 0 )

  000bb	8d 55 e0	 lea	 edx, DWORD PTR _szJN$[ebp]
  000be	6a 12		 push	 18			; 00000012H
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 ?gJoominCheck@@YAHPADH@Z ; gJoominCheck
  000c6	83 c4 08	 add	 esp, 8
  000c9	85 c0		 test	 eax, eax
  000cb	75 18		 jne	 SHORT $LN21@JGPAccount

; 194  : 			{
; 195  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber );

  000cd	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000d0	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  000d3	50		 push	 eax
  000d4	51		 push	 ecx
  000d5	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  000d8	52		 push	 edx
  000d9	57		 push	 edi
  000da	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  000df	83 c4 10	 add	 esp, 16			; 00000010H

; 196  : 				lpMsg->result  = 17;

  000e2	88 5e 03	 mov	 BYTE PTR [esi+3], bl
$LN21@JGPAccount:

; 197  : 			}
; 198  : 		}
; 199  : 	}
; 200  : 
; 201  : 	switch ( lpMsg->result  )

  000e5	0f b6 46 03	 movzx	 eax, BYTE PTR [esi+3]
  000e9	48		 dec	 eax
  000ea	74 09		 je	 SHORT $LN9@JGPAccount
  000ec	83 e8 0e	 sub	 eax, 14			; 0000000eH
  000ef	0f 85 98 00 00
	00		 jne	 $LN6@JGPAccount
$LN9@JGPAccount:

; 202  : 	{
; 203  : 		case 1:
; 204  : 		case 15:
; 205  : 			if (gObjSetAccountLogin(aIndex, szId, lpMsg->UserNumber , lpMsg->DBNumber, szJN ) == 0 )

  000f5	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  000f8	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  000fb	8d 45 e0	 lea	 eax, DWORD PTR _szJN$[ebp]
  000fe	50		 push	 eax
  000ff	51		 push	 ecx
  00100	52		 push	 edx
  00101	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00104	50		 push	 eax
  00105	57		 push	 edi
  00106	e8 00 00 00 00	 call	 ?gObjSetAccountLogin@@YAHHPADHH0@Z ; gObjSetAccountLogin
  0010b	83 c4 14	 add	 esp, 20			; 00000014H
  0010e	85 c0		 test	 eax, eax

; 206  : 			{
; 207  : 				GJPAccountFail(aIndex, szId, lpMsg->DBNumber , lpMsg->UserNumber  );

  00110	8d 45 f0	 lea	 eax, DWORD PTR _szId$[ebp]
  00113	75 18		 jne	 SHORT $LN8@JGPAccount
  00115	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00118	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  0011b	51		 push	 ecx
  0011c	52		 push	 edx
  0011d	50		 push	 eax
  0011e	57		 push	 edi
  0011f	e8 00 00 00 00	 call	 ?GJPAccountFail@@YAXFPADHH@Z ; GJPAccountFail
  00124	83 c4 10	 add	 esp, 16			; 00000010H

; 208  : 				lpMsg->result  = 4;

  00127	c6 46 03 04	 mov	 BYTE PTR [esi+3], 4

; 209  : 			}
; 210  : 			else

  0012b	eb 32		 jmp	 SHORT $LN7@JGPAccount
$LN8@JGPAccount:

; 211  : 			{	
; 212  : 				LogAdd(LOG_BLACK, lMsg.Get(MSGGET(1, 211)), gObj[aIndex].Ip_addr, szId, lpMsg->UserNumber , lpMsg->DBNumber );

  0012d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00130	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00133	51		 push	 ecx
  00134	8b cf		 mov	 ecx, edi
  00136	69 c9 64 15 00
	00		 imul	 ecx, 5476		; 00001564H
  0013c	52		 push	 edx
  0013d	50		 push	 eax
  0013e	81 c1 14 00 00
	00		 add	 ecx, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A+20
  00144	51		 push	 ecx
  00145	68 d3 01 00 00	 push	 467			; 000001d3H
  0014a	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0014f	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00154	50		 push	 eax
  00155	6a 00		 push	 0
  00157	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0015c	83 c4 18	 add	 esp, 24			; 00000018H
$LN7@JGPAccount:

; 213  : 			}
; 214  : 
; 215  : 			if ( lpMsg->UserNumber  == 0 && lpMsg->DBNumber  == 0)

  0015f	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00163	75 28		 jne	 SHORT $LN6@JGPAccount
  00165	83 7e 14 00	 cmp	 DWORD PTR [esi+20], 0
  00169	75 22		 jne	 SHORT $LN6@JGPAccount

; 216  : 			{
; 217  : 				LogAdd(LOG_BLACK, lMsg.Get(MSGGET(1, 212)), szId, lpMsg->UserNumber , lpMsg->DBNumber );

  0016b	6a 00		 push	 0
  0016d	6a 00		 push	 0
  0016f	8d 55 f0	 lea	 edx, DWORD PTR _szId$[ebp]
  00172	52		 push	 edx
  00173	68 d4 01 00 00	 push	 468			; 000001d4H
  00178	b9 00 00 00 00	 mov	 ecx, OFFSET ?lMsg@@3VCMsg@@A ; lMsg
  0017d	e8 00 00 00 00	 call	 ?Get@CMsg@@QAEPADH@Z	; CMsg::Get
  00182	50		 push	 eax
  00183	6a 00		 push	 0
  00185	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  0018a	83 c4 14	 add	 esp, 20			; 00000014H
$LN6@JGPAccount:

; 218  : 			}
; 219  : 	}
; 220  : 
; 221  : 	if ( lpMsg->result == 0 )

  0018d	80 7e 03 00	 cmp	 BYTE PTR [esi+3], 0
  00191	75 04		 jne	 SHORT $LN5@JGPAccount

; 222  : 		lpMsg->result = 2;

  00193	c6 46 03 02	 mov	 BYTE PTR [esi+3], 2
$LN5@JGPAccount:

; 223  : 
; 224  : 	if ( lpMsg->result  == 15 )

  00197	80 7e 03 0f	 cmp	 BYTE PTR [esi+3], 15	; 0000000fH
  0019b	75 13		 jne	 SHORT $LN4@JGPAccount

; 225  : 	{
; 226  : 		lpMsg->result  = 1;
; 227  : 		gObj[aIndex].m_cAccountItemBlock = 1;

  0019d	8b c7		 mov	 eax, edi
  0019f	69 c0 64 15 00
	00		 imul	 eax, 5476		; 00001564H
  001a5	c6 46 03 01	 mov	 BYTE PTR [esi+3], 1
  001a9	c6 80 b0 01 00
	00 01		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[eax+432], 1
$LN4@JGPAccount:

; 228  : 	}
; 229  : 	
; 230  : 	gObj[aIndex].LoginMsgSnd = 0;

  001b0	8b df		 mov	 ebx, edi
  001b2	69 db 64 15 00
	00		 imul	 ebx, 5476		; 00001564H

; 231  : 
; 232  : 	if (gObj[aIndex].LoginMsgCount >= 3 )

  001b8	80 bb 06 00 00
	00 03		 cmp	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[ebx+6], 3
  001bf	c6 83 05 00 00
	00 00		 mov	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[ebx+5], 0
  001c6	7c 04		 jl	 SHORT $LN3@JGPAccount

; 233  : 	{
; 234  : 		lpMsg->result = 8;

  001c8	c6 46 03 08	 mov	 BYTE PTR [esi+3], 8
$LN3@JGPAccount:

; 235  : 	}
; 236  : 
; 237  : 	GCJoinResult(lpMsg->result , aIndex);

  001cc	0f b6 4e 03	 movzx	 ecx, BYTE PTR [esi+3]
  001d0	57		 push	 edi
  001d1	51		 push	 ecx
  001d2	e8 00 00 00 00	 call	 ?GCJoinResult@@YAXEH@Z	; GCJoinResult
  001d7	83 c4 08	 add	 esp, 8

; 238  : 
; 239  : 	if ( lpMsg->result  != 1 )

  001da	80 7e 03 01	 cmp	 BYTE PTR [esi+3], 1
  001de	74 12		 je	 SHORT $LN1@JGPAccount

; 240  : 	{
; 241  : 		if ( gObj[aIndex].LoginMsgCount > 3 )

  001e0	80 bb 06 00 00
	00 03		 cmp	 BYTE PTR ?gObj@@3PAUOBJECTSTRUCT@@A[ebx+6], 3
  001e7	7e 09		 jle	 SHORT $LN1@JGPAccount

; 242  : 		{
; 243  : 			CloseClient(aIndex);

  001e9	57		 push	 edi
  001ea	e8 00 00 00 00	 call	 ?CloseClient@@YAXH@Z	; CloseClient
  001ef	83 c4 04	 add	 esp, 4
$LN1@JGPAccount:

; 244  : 		}
; 245  : 	}
; 246  : }

  001f2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f5	5f		 pop	 edi
  001f6	5e		 pop	 esi
  001f7	33 cd		 xor	 ecx, ebp
  001f9	5b		 pop	 ebx
  001fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c3		 ret	 0
?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z ENDP	; JGPAccountRequest
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ; GJPBillCeckRecv
EXTRN	?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z:PROC ; gObjAddMsgSendDelay
EXTRN	?m_ObjBill@@3PAVBILL_CLASS@@A:BYTE		; m_ObjBill
; Function compile flags: /Ogtp
;	COMDAT ?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z
_TEXT	SEGMENT
_szId$ = -32						; size = 11
_EndsDays$ = -20					; size = 13
__$ArrayPad$ = -4					; size = 4
_lpMsg$ = 8						; size = 4
?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z PROC	; GJPBillCeckRecv, COMDAT

; 294  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _lpMsg$[ebp]

; 295  : 	int aIndex = lpMsg->Number ;
; 296  : 	char szId[11];
; 297  : 	char EndsDays[13];
; 298  : 
; 299  : 	szId[10] = 0;
; 300  : 
; 301  : 	memcpy(szId, lpMsg->Id, sizeof(lpMsg->Id));

  00014	8b 46 03	 mov	 eax, DWORD PTR [esi+3]
  00017	8b 4e 07	 mov	 ecx, DWORD PTR [esi+7]
  0001a	66 8b 56 0b	 mov	 dx, WORD PTR [esi+11]
  0001e	57		 push	 edi
  0001f	0f bf 7e 0e	 movsx	 edi, WORD PTR [esi+14]
  00023	89 45 e0	 mov	 DWORD PTR _szId$[ebp], eax

; 302  : 
; 303  : 	if (gObjIsAccontConnect(aIndex, szId) == 0 )

  00026	8d 45 e0	 lea	 eax, DWORD PTR _szId$[ebp]
  00029	50		 push	 eax
  0002a	57		 push	 edi
  0002b	c6 45 ea 00	 mov	 BYTE PTR _szId$[ebp+10], 0
  0002f	89 4d e4	 mov	 DWORD PTR _szId$[ebp+4], ecx
  00032	66 89 55 e8	 mov	 WORD PTR _szId$[ebp+8], dx
  00036	e8 00 00 00 00	 call	 ?gObjIsAccontConnect@@YAHHPAD@Z ; gObjIsAccontConnect
  0003b	83 c4 08	 add	 esp, 8
  0003e	85 c0		 test	 eax, eax
  00040	0f 84 88 00 00
	00		 je	 $LN1@GJPBillCec

; 304  : 	{
; 305  : 		return ;
; 306  : 	}
; 307  : 
; 308  : 	memset(EndsDays, 0, sizeof(EndsDays));
; 309  : 	memcpy(EndsDays, lpMsg->EndsDays, sizeof(lpMsg->EndsDays));

  00046	8b 4e 12	 mov	 ecx, DWORD PTR [esi+18]
  00049	8b 56 16	 mov	 edx, DWORD PTR [esi+22]
  0004c	33 c0		 xor	 eax, eax
  0004e	89 45 ec	 mov	 DWORD PTR _EndsDays$[ebp], eax
  00051	89 45 f0	 mov	 DWORD PTR _EndsDays$[ebp+4], eax
  00054	89 45 f4	 mov	 DWORD PTR _EndsDays$[ebp+8], eax
  00057	88 45 f8	 mov	 BYTE PTR _EndsDays$[ebp+12], al
  0005a	8b 46 1a	 mov	 eax, DWORD PTR [esi+26]
  0005d	89 45 f4	 mov	 DWORD PTR _EndsDays$[ebp+8], eax

; 310  : 
; 311  : 	if ( m_ObjBill[aIndex].SetBill( lpMsg->cCertifyType , lpMsg->PayCode, lpMsg->EndTime , EndsDays) == TRUE )

  00060	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  00063	53		 push	 ebx
  00064	8a 5e 10	 mov	 bl, BYTE PTR [esi+16]
  00067	89 4d ec	 mov	 DWORD PTR _EndsDays$[ebp], ecx
  0006a	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0006d	89 55 f0	 mov	 DWORD PTR _EndsDays$[ebp+4], edx
  00070	8a 56 11	 mov	 dl, BYTE PTR [esi+17]
  00073	8d 04 c5 00 00
	00 00		 lea	 eax, DWORD PTR ?m_ObjBill@@3PAVBILL_CLASS@@A[eax*8]
  0007a	33 f6		 xor	 esi, esi
  0007c	80 38 ff	 cmp	 BYTE PTR [eax], -1
  0007f	75 05		 jne	 SHORT $LN5@GJPBillCec
  00081	be 01 00 00 00	 mov	 esi, 1
$LN5@GJPBillCec:
  00086	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00089	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0008c	88 18		 mov	 BYTE PTR [eax], bl
  0008e	8d 4d ec	 lea	 ecx, DWORD PTR _EndsDays$[ebp]
  00091	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
  00094	8b c1		 mov	 eax, ecx
  00096	2b d0		 sub	 edx, eax
  00098	5b		 pop	 ebx
  00099	8d a4 24 00 00
	00 00		 npad	 7
$LL8@GJPBillCec:
  000a0	8a 01		 mov	 al, BYTE PTR [ecx]
  000a2	88 04 0a	 mov	 BYTE PTR [edx+ecx], al
  000a5	41		 inc	 ecx
  000a6	84 c0		 test	 al, al
  000a8	75 f6		 jne	 SHORT $LL8@GJPBillCec
  000aa	83 fe 01	 cmp	 esi, 1
  000ad	75 1f		 jne	 SHORT $LN1@GJPBillCec

; 312  : 	{
; 313  : 		gObjAddMsgSendDelay(&gObj[aIndex], 1000, aIndex, 100, 0);

  000af	6a 00		 push	 0
  000b1	6a 64		 push	 100			; 00000064H
  000b3	57		 push	 edi
  000b4	69 ff 64 15 00
	00		 imul	 edi, 5476		; 00001564H
  000ba	68 e8 03 00 00	 push	 1000			; 000003e8H
  000bf	81 c7 00 00 00
	00		 add	 edi, OFFSET ?gObj@@3PAUOBJECTSTRUCT@@A ; gObj
  000c5	57		 push	 edi
  000c6	e8 00 00 00 00	 call	 ?gObjAddMsgSendDelay@@YAXPAUOBJECTSTRUCT@@HHHH@Z ; gObjAddMsgSendDelay
  000cb	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@GJPBillCec:

; 314  : 	}
; 315  : }

  000ce	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d1	5f		 pop	 edi
  000d2	33 cd		 xor	 ecx, ebp
  000d4	5e		 pop	 esi
  000d5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c3		 ret	 0
?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ENDP	; GJPBillCeckRecv
_TEXT	ENDS
PUBLIC	?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z	; JGPEventStart
EXTRN	?Start@CDragonEvent@@QAEXXZ:PROC		; CDragonEvent::Start
EXTRN	?End@CDragonEvent@@QAEXXZ:PROC			; CDragonEvent::End
EXTRN	?DragonEvent@@3PAVCDragonEvent@@A:DWORD		; DragonEvent
; Function compile flags: /Ogtp
;	COMDAT ?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z PROC		; JGPEventStart, COMDAT

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 400  : 	if ( lpMsg->Event == 1 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	80 78 03 01	 cmp	 BYTE PTR [eax+3], 1
  0000a	75 18		 jne	 SHORT $LN1@JGPEventSt

; 401  : 	{
; 402  : 		if (DragonEvent->GetState() != 0 )

  0000c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00012	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00016	74 06		 je	 SHORT $LN2@JGPEventSt

; 409  : 		}
; 410  : 	}
; 411  : }

  00018	5d		 pop	 ebp

; 403  : 		{
; 404  : 			DragonEvent->End();

  00019	e9 00 00 00 00	 jmp	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
$LN2@JGPEventSt:

; 409  : 		}
; 410  : 	}
; 411  : }

  0001e	5d		 pop	 ebp

; 405  : 		}
; 406  : 		else
; 407  : 		{
; 408  : 			DragonEvent->Start();

  0001f	e9 00 00 00 00	 jmp	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
$LN1@JGPEventSt:

; 409  : 		}
; 410  : 	}
; 411  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z ENDP		; JGPEventStart
_TEXT	ENDS
PUBLIC	?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z	; JGPEventControl
EXTRN	?gMedalEvent@@3HA:DWORD				; gMedalEvent
EXTRN	?gHeartOfLoveEvent@@3HA:DWORD			; gHeartOfLoveEvent
EXTRN	?gFireCrackerEvent@@3HA:DWORD			; gFireCrackerEvent
EXTRN	?gXMasEvent@@3HA:DWORD				; gXMasEvent
; Function compile flags: /Ogtp
;	COMDAT ?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z
_TEXT	SEGMENT
_lpMsg$ = 8						; size = 4
?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z PROC	; JGPEventControl, COMDAT

; 417  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 418  : 	switch ( lpMsg->Event  )

  00003	8b 45 08	 mov	 eax, DWORD PTR _lpMsg$[ebp]
  00006	0f b6 48 03	 movzx	 ecx, BYTE PTR [eax+3]
  0000a	83 f9 04	 cmp	 ecx, 4
  0000d	77 51		 ja	 SHORT $LN9@JGPEventCo
  0000f	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN17@JGPEventCo[ecx*4]
$LN8@JGPEventCo:

; 419  : 	{
; 420  : 		case DRAGON_EVENT:
; 421  : 			if ( lpMsg->Stat != 0 )

  00016	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0

; 422  : 			{
; 423  : 				if (DragonEvent->GetState() == 0 )

  0001a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DragonEvent@@3PAVCDragonEvent@@A ; DragonEvent
  00020	74 0c		 je	 SHORT $LN7@JGPEventCo
  00022	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  00026	75 38		 jne	 SHORT $LN9@JGPEventCo

; 448  : 			break;
; 449  : 	}
; 450  : }

  00028	5d		 pop	 ebp

; 424  : 				{
; 425  : 					DragonEvent->Start();

  00029	e9 00 00 00 00	 jmp	 ?Start@CDragonEvent@@QAEXXZ ; CDragonEvent::Start
$LN7@JGPEventCo:

; 448  : 			break;
; 449  : 	}
; 450  : }

  0002e	5d		 pop	 ebp

; 426  : 				}
; 427  : 			}
; 428  : 			else
; 429  : 			{
; 430  : 				DragonEvent->End();

  0002f	e9 00 00 00 00	 jmp	 ?End@CDragonEvent@@QAEXXZ ; CDragonEvent::End
$LN4@JGPEventCo:

; 431  : 			}
; 432  : 			break;
; 433  : 
; 434  : 		case XMAS_EVENT:
; 435  : 			gXMasEvent = lpMsg->Stat  ;

  00034	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00038	a3 00 00 00 00	 mov	 DWORD PTR ?gXMasEvent@@3HA, eax ; gXMasEvent

; 448  : 			break;
; 449  : 	}
; 450  : }

  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
$LN3@JGPEventCo:

; 436  : 			break;
; 437  : 
; 438  : 		case FIRECRACKER_EVENT:
; 439  : 			gFireCrackerEvent = lpMsg->Stat  ;

  0003f	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00043	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gFireCrackerEvent@@3HA, ecx ; gFireCrackerEvent

; 448  : 			break;
; 449  : 	}
; 450  : }

  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
$LN2@JGPEventCo:

; 440  : 			break;
; 441  : 
; 442  : 		case HEARTOFLOVE_EVENT:
; 443  : 			gHeartOfLoveEvent = lpMsg->Stat  ;

  0004b	0f b6 50 04	 movzx	 edx, BYTE PTR [eax+4]
  0004f	89 15 00 00 00
	00		 mov	 DWORD PTR ?gHeartOfLoveEvent@@3HA, edx ; gHeartOfLoveEvent

; 448  : 			break;
; 449  : 	}
; 450  : }

  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN1@JGPEventCo:

; 444  : 			break;
; 445  : 
; 446  : 		case MEDAL_EVENT:
; 447  : 			gMedalEvent = lpMsg->Stat  ;

  00057	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  0005b	a3 00 00 00 00	 mov	 DWORD PTR ?gMedalEvent@@3HA, eax ; gMedalEvent
$LN9@JGPEventCo:

; 448  : 			break;
; 449  : 	}
; 450  : }

  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
  00062	8b ff		 npad	 2
$LN17@JGPEventCo:
  00064	00 00 00 00	 DD	 $LN8@JGPEventCo
  00068	00 00 00 00	 DD	 $LN4@JGPEventCo
  0006c	00 00 00 00	 DD	 $LN3@JGPEventCo
  00070	00 00 00 00	 DD	 $LN2@JGPEventCo
  00074	00 00 00 00	 DD	 $LN1@JGPEventCo
?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z ENDP	; JGPEventControl
_TEXT	ENDS
PUBLIC	?SProtocolCore@@YAXEPAEH@Z			; SProtocolCore
; Function compile flags: /Ogtp
;	COMDAT ?SProtocolCore@@YAXEPAEH@Z
_TEXT	SEGMENT
_protoNum$ = 8						; size = 1
_aRecv$ = 12						; size = 4
_aLen$ = 16						; size = 4
?SProtocolCore@@YAXEPAEH@Z PROC				; SProtocolCore, COMDAT

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 
; 29   : 	#ifdef TRACE_PROTOCOL
; 30   : 		LogAddHeadHex("JOIN_SERVER", aRecv, aLen);
; 31   : 	#endif
; 32   : 
; 33   : 
; 34   : 	switch ( protoNum )

  00003	0f b6 45 08	 movzx	 eax, BYTE PTR _protoNum$[ebp]
  00007	83 f8 7b	 cmp	 eax, 123		; 0000007bH
  0000a	0f 87 ec 00 00
	00		 ja	 $LN17@SProtocolC
  00010	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN21@SProtocolC[eax]
  00017	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN23@SProtocolC[eax*4]
$LN16@SProtocolC:

; 35   : 	{
; 36   : 		case 0x00:
; 37   : 			JGServerLoginResult((SDHP_RESULT *)aRecv);

  0001e	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  00021	51		 push	 ecx
  00022	e8 00 00 00 00	 call	 ?JGServerLoginResult@@YAXPAUSDHP_RESULT@@@Z ; JGServerLoginResult

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00027	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN15@SProtocolC:

; 38   : 			break;
; 39   : 
; 40   : 		case 0x01:
; 41   : 			JGPAccountRequest((SDHP_IDPASSRESULT *)aRecv);

  0002c	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?JGPAccountRequest@@YAXPAUSDHP_IDPASSRESULT@@@Z ; JGPAccountRequest

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00035	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
$LN14@SProtocolC:

; 42   : 			break;
; 43   : 
; 44   : 		case 0x06:
; 45   : 			GJPBillCeckRecv((SDHP_BILLSEARCH_RESULT *)aRecv);

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?GJPBillCeckRecv@@YAXPAUSDHP_BILLSEARCH_RESULT@@@Z ; GJPBillCeckRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00043	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN13@SProtocolC:

; 46   : 			break;
; 47   : 
; 48   : 		case 0x07:
; 49   : 			GJPUserKillRecv((SDHP_BILLKILLUSER *)aRecv);

  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?GJPUserKillRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserKillRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00051	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN12@SProtocolC:

; 50   : 			break;
; 51   : 
; 52   : 		case 0x08:
; 53   : 			JGOtherJoin((SDHP_OTHERJOINMSG *)aRecv);

  00056	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  00059	52		 push	 edx
  0005a	e8 00 00 00 00	 call	 ?JGOtherJoin@@YAXPAUSDHP_OTHERJOINMSG@@@Z ; JGOtherJoin

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  0005f	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN11@SProtocolC:

; 54   : 			break;
; 55   : 
; 56   : 		case 0x09:
; 57   : 			GJPUserDisconnectRecv((SDHP_BILLKILLUSER *)aRecv);

  00064	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?GJPUserDisconnectRecv@@YAXPAUSDHP_BILLKILLUSER@@@Z ; GJPUserDisconnectRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  0006d	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
$LN10@SProtocolC:

; 58   : 			break;
; 59   : 
; 60   : 		case 0x20:
; 61   : 			JGPExitCodeRecv((SDHP_EXITMSG *)aRecv);

  00072	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 ?JGPExitCodeRecv@@YAXPAUSDHP_EXITMSG@@@Z ; JGPExitCodeRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  0007b	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN9@SProtocolC:

; 62   : 			break;
; 63   : 
; 64   : 		case 0x60:
; 65   : 			JGPEventStart((SDHP_EVENTSTART *)aRecv);

  00080	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 ?JGPEventStart@@YAXPAUSDHP_EVENTSTART@@@Z ; JGPEventStart

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00089	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
$LN8@SProtocolC:

; 66   : 			break;
; 67   : 
; 68   : 		case 0x61:
; 69   : 			JGPEventControl((SDHP_EVENTCONTROL *)aRecv);

  0008e	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?JGPEventControl@@YAXPAUSDHP_EVENTCONTROL@@@Z ; JGPEventControl

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  00097	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
$LN7@SProtocolC:

; 70   : 			break;
; 71   : 
; 72   : 		case 0x62:
; 73   : 			JGPOptionControl((SDHP_OPTIONCONTROL *)aRecv);

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  0009f	51		 push	 ecx
  000a0	e8 00 00 00 00	 call	 ?JGPOptionControl@@YAXPAUSDHP_OPTIONCONTROL@@@Z ; JGPOptionControl

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000a5	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
$LN6@SProtocolC:

; 74   : 			break;
; 75   : 
; 76   : 		case 0x63:
; 77   : 			JGPSendMail((PMSG_JG_MEMO_SEND *)aRecv);

  000aa	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ?JGPSendMail@@YAXPAUPMSG_JG_MEMO_SEND@@@Z ; JGPSendMail

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000b3	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
$LN5@SProtocolC:

; 78   : 			break;
; 79   : 
; 80   : 		case 0x30:
; 81   : 			LoveHeartEventRecv((SDHP_LOVEHEARTEVENT_RESULT *)aRecv);

  000b8	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ?LoveHeartEventRecv@@YAXPAUSDHP_LOVEHEARTEVENT_RESULT@@@Z ; LoveHeartEventRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000c1	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
$LN4@SProtocolC:

; 82   : 			break;
; 83   : 
; 84   : 		case 0x40:
; 85   : 			AllNoticeRecv((SDHP_NOTICE *)aRecv);

  000c6	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  000c9	51		 push	 ecx
  000ca	e8 00 00 00 00	 call	 ?AllNoticeRecv@@YAXPAUSDHP_NOTICE@@@Z ; AllNoticeRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000cf	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  000d2	5d		 pop	 ebp
  000d3	c3		 ret	 0
$LN3@SProtocolC:

; 86   : 			break;
; 87   : 
; 88   : 		case 0x41:
; 89   : 			UserNoticeRecv((SDHP_USER_NOTICE *)aRecv);

  000d4	8b 55 0c	 mov	 edx, DWORD PTR _aRecv$[ebp]
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 ?UserNoticeRecv@@YAXPAUSDHP_USER_NOTICE@@@Z ; UserNoticeRecv

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000dd	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
$LN2@SProtocolC:

; 90   : 			break;
; 91   : 
; 92   : 		case 0x7A:
; 93   : 			JGAnsMapSvrMove((PMSG_ANS_MAPSVRMOVE *)aRecv);

  000e2	8b 45 0c	 mov	 eax, DWORD PTR _aRecv$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?JGAnsMapSvrMove@@YAXPAUPMSG_ANS_MAPSVRMOVE@@@Z ; JGAnsMapSvrMove

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000eb	83 c4 04	 add	 esp, 4

; 98   : 			break;
; 99   : 	}
; 100  : }

  000ee	5d		 pop	 ebp
  000ef	c3		 ret	 0
$LN1@SProtocolC:

; 94   : 			break;
; 95   : 
; 96   : 		case 0x7B:
; 97   : 			JGAnsMapSvrAuth((PMSG_ANS_MAPSVRAUTH *)aRecv);

  000f0	8b 4d 0c	 mov	 ecx, DWORD PTR _aRecv$[ebp]
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ?JGAnsMapSvrAuth@@YAXPAUPMSG_ANS_MAPSVRAUTH@@@Z ; JGAnsMapSvrAuth
  000f9	83 c4 04	 add	 esp, 4
$LN17@SProtocolC:

; 98   : 			break;
; 99   : 	}
; 100  : }

  000fc	5d		 pop	 ebp
  000fd	c3		 ret	 0
  000fe	8b ff		 npad	 2
$LN23@SProtocolC:
  00100	00 00 00 00	 DD	 $LN16@SProtocolC
  00104	00 00 00 00	 DD	 $LN15@SProtocolC
  00108	00 00 00 00	 DD	 $LN14@SProtocolC
  0010c	00 00 00 00	 DD	 $LN13@SProtocolC
  00110	00 00 00 00	 DD	 $LN12@SProtocolC
  00114	00 00 00 00	 DD	 $LN11@SProtocolC
  00118	00 00 00 00	 DD	 $LN10@SProtocolC
  0011c	00 00 00 00	 DD	 $LN5@SProtocolC
  00120	00 00 00 00	 DD	 $LN4@SProtocolC
  00124	00 00 00 00	 DD	 $LN3@SProtocolC
  00128	00 00 00 00	 DD	 $LN9@SProtocolC
  0012c	00 00 00 00	 DD	 $LN8@SProtocolC
  00130	00 00 00 00	 DD	 $LN7@SProtocolC
  00134	00 00 00 00	 DD	 $LN6@SProtocolC
  00138	00 00 00 00	 DD	 $LN2@SProtocolC
  0013c	00 00 00 00	 DD	 $LN1@SProtocolC
  00140	00 00 00 00	 DD	 $LN17@SProtocolC
$LN21@SProtocolC:
  00144	00		 DB	 0
  00145	01		 DB	 1
  00146	10		 DB	 16			; 00000010H
  00147	10		 DB	 16			; 00000010H
  00148	10		 DB	 16			; 00000010H
  00149	10		 DB	 16			; 00000010H
  0014a	02		 DB	 2
  0014b	03		 DB	 3
  0014c	04		 DB	 4
  0014d	05		 DB	 5
  0014e	10		 DB	 16			; 00000010H
  0014f	10		 DB	 16			; 00000010H
  00150	10		 DB	 16			; 00000010H
  00151	10		 DB	 16			; 00000010H
  00152	10		 DB	 16			; 00000010H
  00153	10		 DB	 16			; 00000010H
  00154	10		 DB	 16			; 00000010H
  00155	10		 DB	 16			; 00000010H
  00156	10		 DB	 16			; 00000010H
  00157	10		 DB	 16			; 00000010H
  00158	10		 DB	 16			; 00000010H
  00159	10		 DB	 16			; 00000010H
  0015a	10		 DB	 16			; 00000010H
  0015b	10		 DB	 16			; 00000010H
  0015c	10		 DB	 16			; 00000010H
  0015d	10		 DB	 16			; 00000010H
  0015e	10		 DB	 16			; 00000010H
  0015f	10		 DB	 16			; 00000010H
  00160	10		 DB	 16			; 00000010H
  00161	10		 DB	 16			; 00000010H
  00162	10		 DB	 16			; 00000010H
  00163	10		 DB	 16			; 00000010H
  00164	06		 DB	 6
  00165	10		 DB	 16			; 00000010H
  00166	10		 DB	 16			; 00000010H
  00167	10		 DB	 16			; 00000010H
  00168	10		 DB	 16			; 00000010H
  00169	10		 DB	 16			; 00000010H
  0016a	10		 DB	 16			; 00000010H
  0016b	10		 DB	 16			; 00000010H
  0016c	10		 DB	 16			; 00000010H
  0016d	10		 DB	 16			; 00000010H
  0016e	10		 DB	 16			; 00000010H
  0016f	10		 DB	 16			; 00000010H
  00170	10		 DB	 16			; 00000010H
  00171	10		 DB	 16			; 00000010H
  00172	10		 DB	 16			; 00000010H
  00173	10		 DB	 16			; 00000010H
  00174	07		 DB	 7
  00175	10		 DB	 16			; 00000010H
  00176	10		 DB	 16			; 00000010H
  00177	10		 DB	 16			; 00000010H
  00178	10		 DB	 16			; 00000010H
  00179	10		 DB	 16			; 00000010H
  0017a	10		 DB	 16			; 00000010H
  0017b	10		 DB	 16			; 00000010H
  0017c	10		 DB	 16			; 00000010H
  0017d	10		 DB	 16			; 00000010H
  0017e	10		 DB	 16			; 00000010H
  0017f	10		 DB	 16			; 00000010H
  00180	10		 DB	 16			; 00000010H
  00181	10		 DB	 16			; 00000010H
  00182	10		 DB	 16			; 00000010H
  00183	10		 DB	 16			; 00000010H
  00184	08		 DB	 8
  00185	09		 DB	 9
  00186	10		 DB	 16			; 00000010H
  00187	10		 DB	 16			; 00000010H
  00188	10		 DB	 16			; 00000010H
  00189	10		 DB	 16			; 00000010H
  0018a	10		 DB	 16			; 00000010H
  0018b	10		 DB	 16			; 00000010H
  0018c	10		 DB	 16			; 00000010H
  0018d	10		 DB	 16			; 00000010H
  0018e	10		 DB	 16			; 00000010H
  0018f	10		 DB	 16			; 00000010H
  00190	10		 DB	 16			; 00000010H
  00191	10		 DB	 16			; 00000010H
  00192	10		 DB	 16			; 00000010H
  00193	10		 DB	 16			; 00000010H
  00194	10		 DB	 16			; 00000010H
  00195	10		 DB	 16			; 00000010H
  00196	10		 DB	 16			; 00000010H
  00197	10		 DB	 16			; 00000010H
  00198	10		 DB	 16			; 00000010H
  00199	10		 DB	 16			; 00000010H
  0019a	10		 DB	 16			; 00000010H
  0019b	10		 DB	 16			; 00000010H
  0019c	10		 DB	 16			; 00000010H
  0019d	10		 DB	 16			; 00000010H
  0019e	10		 DB	 16			; 00000010H
  0019f	10		 DB	 16			; 00000010H
  001a0	10		 DB	 16			; 00000010H
  001a1	10		 DB	 16			; 00000010H
  001a2	10		 DB	 16			; 00000010H
  001a3	10		 DB	 16			; 00000010H
  001a4	0a		 DB	 10			; 0000000aH
  001a5	0b		 DB	 11			; 0000000bH
  001a6	0c		 DB	 12			; 0000000cH
  001a7	0d		 DB	 13			; 0000000dH
  001a8	10		 DB	 16			; 00000010H
  001a9	10		 DB	 16			; 00000010H
  001aa	10		 DB	 16			; 00000010H
  001ab	10		 DB	 16			; 00000010H
  001ac	10		 DB	 16			; 00000010H
  001ad	10		 DB	 16			; 00000010H
  001ae	10		 DB	 16			; 00000010H
  001af	10		 DB	 16			; 00000010H
  001b0	10		 DB	 16			; 00000010H
  001b1	10		 DB	 16			; 00000010H
  001b2	10		 DB	 16			; 00000010H
  001b3	10		 DB	 16			; 00000010H
  001b4	10		 DB	 16			; 00000010H
  001b5	10		 DB	 16			; 00000010H
  001b6	10		 DB	 16			; 00000010H
  001b7	10		 DB	 16			; 00000010H
  001b8	10		 DB	 16			; 00000010H
  001b9	10		 DB	 16			; 00000010H
  001ba	10		 DB	 16			; 00000010H
  001bb	10		 DB	 16			; 00000010H
  001bc	10		 DB	 16			; 00000010H
  001bd	10		 DB	 16			; 00000010H
  001be	0e		 DB	 14			; 0000000eH
  001bf	0f		 DB	 15			; 0000000fH
?SProtocolCore@@YAXEPAEH@Z ENDP				; SProtocolCore
_TEXT	ENDS
END
