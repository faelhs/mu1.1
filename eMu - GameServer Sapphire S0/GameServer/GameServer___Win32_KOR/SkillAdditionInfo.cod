; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\SkillAdditionInfo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CSkillAdditionInfo@@6B@			; CSkillAdditionInfo::`vftable'
PUBLIC	??1CSkillAdditionInfo@@UAE@XZ			; CSkillAdditionInfo::~CSkillAdditionInfo
PUBLIC	??_R4CSkillAdditionInfo@@6B@			; CSkillAdditionInfo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSkillAdditionInfo@@@8			; CSkillAdditionInfo `RTTI Type Descriptor'
PUBLIC	??_R3CSkillAdditionInfo@@8			; CSkillAdditionInfo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSkillAdditionInfo@@8			; CSkillAdditionInfo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSkillAdditionInfo@@8		; CSkillAdditionInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECSkillAdditionInfo@@UAEPAXI@Z:PROC		; CSkillAdditionInfo::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CSkillAdditionInfo@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\skilladditioninfo.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CSkillAdditionInfo@@8 DD FLAT:??_R0?AVCSkillAdditionInfo@@@8 ; CSkillAdditionInfo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSkillAdditionInfo@@8
rdata$r	ENDS
;	COMDAT ??_R2CSkillAdditionInfo@@8
rdata$r	SEGMENT
??_R2CSkillAdditionInfo@@8 DD FLAT:??_R1A@?0A@EA@CSkillAdditionInfo@@8 ; CSkillAdditionInfo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSkillAdditionInfo@@8
rdata$r	SEGMENT
??_R3CSkillAdditionInfo@@8 DD 00H			; CSkillAdditionInfo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSkillAdditionInfo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSkillAdditionInfo@@@8
_DATA	SEGMENT
??_R0?AVCSkillAdditionInfo@@@8 DD FLAT:??_7type_info@@6B@ ; CSkillAdditionInfo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSkillAdditionInfo@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CSkillAdditionInfo@@6B@
rdata$r	SEGMENT
??_R4CSkillAdditionInfo@@6B@ DD 00H			; CSkillAdditionInfo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSkillAdditionInfo@@@8
	DD	FLAT:??_R3CSkillAdditionInfo@@8
rdata$r	ENDS
;	COMDAT ??_7CSkillAdditionInfo@@6B@
CONST	SEGMENT
??_7CSkillAdditionInfo@@6B@ DD FLAT:??_R4CSkillAdditionInfo@@6B@ ; CSkillAdditionInfo::`vftable'
	DD	FLAT:??_ECSkillAdditionInfo@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CSkillAdditionInfo@@UAE@XZ
_TEXT	SEGMENT
??1CSkillAdditionInfo@@UAE@XZ PROC			; CSkillAdditionInfo::~CSkillAdditionInfo, COMDAT
; _this$ = ecx

; 23   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSkillAdditionInfo@@6B@

; 24   : 	return;
; 25   : }

  00006	c3		 ret	 0
??1CSkillAdditionInfo@@UAE@XZ ENDP			; CSkillAdditionInfo::~CSkillAdditionInfo
_TEXT	ENDS
PUBLIC	?Init@CSkillAdditionInfo@@QAEXXZ		; CSkillAdditionInfo::Init
; Function compile flags: /Ogtp
;	COMDAT ?Init@CSkillAdditionInfo@@QAEXXZ
_TEXT	SEGMENT
?Init@CSkillAdditionInfo@@QAEXXZ PROC			; CSkillAdditionInfo::Init, COMDAT
; _this$ = ecx

; 31   : 	this->m_iInfinityArrowSkillTime = 0;

  00000	33 c0		 xor	 eax, eax
  00002	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 32   : 	this->m_iInfinityArrowUseLevel = 0;

  00005	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 33   : 	this->m_iInfinityArrowMPConsumptionPlus0 = 0;

  00008	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 34   : 	this->m_iInfinityArrowMPConsumptionPlus1 = 0;

  0000b	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 35   : 	this->m_iInfinityArrowMPConsumptionPlus2 = 0;

  0000e	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 36   : }

  00011	c3		 ret	 0
?Init@CSkillAdditionInfo@@QAEXXZ ENDP			; CSkillAdditionInfo::Init
_TEXT	ENDS
PUBLIC	??_C@_0DK@MKBKHGKF@?$FLSkill?5Addition?5Info?$FN?5?9?5File?5loa@ ; `string'
PUBLIC	??_C@_0JB@FKMAEBOB@?$FLSkill?5Addition?5Info?$FN?5?$FLFire?5Scre@ ; `string'
PUBLIC	??_C@_0BG@PJAAPPCH@CheckFireScreamSerial?$AA@	; `string'
PUBLIC	??_C@_0BK@KNFOPFKG@FireScreamSerialInitCount?$AA@ ; `string'
PUBLIC	??_C@_0CD@IEHCMBMN@FireScreamMaxAttackCountSameSeri@ ; `string'
PUBLIC	??_C@_0BI@BFNBGAPD@FireScreamExplosionRate?$AA@	; `string'
PUBLIC	??_C@_0CC@CACJLIIP@FireScreamExplosionAttackDistanc@ ; `string'
PUBLIC	??_C@_0BA@HINCJBHF@FireScreamSkill?$AA@		; `string'
PUBLIC	??_C@_0GP@EPLMPGME@?$FLSkill?5Addition?5Info?$FN?5?$FLInfinity?5@ ; `string'
PUBLIC	??_C@_0CB@LGDOBBEK@InfinityArraowMPConsumptionPlus2@ ; `string'
PUBLIC	??_C@_0CB@JNBDECIJ@InfinityArraowMPConsumptionPlus1@ ; `string'
PUBLIC	??_C@_0CB@IEAIHDMI@InfinityArraowMPConsumptionPlus0@ ; `string'
PUBLIC	??_C@_0BG@DADLDHMB@InfinityArrowUseLevel?$AA@	; `string'
PUBLIC	??_C@_09EMMBJNGJ@SkillInfo?$AA@			; `string'
PUBLIC	??_C@_0BH@KBNHBCCN@InfinityArrowSkillTime?$AA@	; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?Load@CSkillAdditionInfo@@QAEHPAD@Z		; CSkillAdditionInfo::Load
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	?GetNewPath@CDirPath@@QAEPADPAD@Z:PROC		; CDirPath::GetNewPath
EXTRN	?gDirPath@@3VCDirPath@@A:BYTE			; gDirPath
;	COMDAT ??_C@_0DK@MKBKHGKF@?$FLSkill?5Addition?5Info?$FN?5?9?5File?5loa@
CONST	SEGMENT
??_C@_0DK@MKBKHGKF@?$FLSkill?5Addition?5Info?$FN?5?9?5File?5loa@ DB '[Ski'
	DB	'll Addition Info] - File load error : File Name Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JB@FKMAEBOB@?$FLSkill?5Addition?5Info?$FN?5?$FLFire?5Scre@
CONST	SEGMENT
??_C@_0JB@FKMAEBOB@?$FLSkill?5Addition?5Info?$FN?5?$FLFire?5Scre@ DB '[Sk'
	DB	'ill Addition Info] [Fire Scream] Use(%d) : Explosion Distance'
	DB	'(%d) - Rate(%d), MaxAttack_SameSerial(%d), SerialInitCount(%d'
	DB	'), Check Serial(%d)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PJAAPPCH@CheckFireScreamSerial?$AA@
CONST	SEGMENT
??_C@_0BG@PJAAPPCH@CheckFireScreamSerial?$AA@ DB 'CheckFireScreamSerial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KNFOPFKG@FireScreamSerialInitCount?$AA@
CONST	SEGMENT
??_C@_0BK@KNFOPFKG@FireScreamSerialInitCount?$AA@ DB 'FireScreamSerialIni'
	DB	'tCount', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IEHCMBMN@FireScreamMaxAttackCountSameSeri@
CONST	SEGMENT
??_C@_0CD@IEHCMBMN@FireScreamMaxAttackCountSameSeri@ DB 'FireScreamMaxAtt'
	DB	'ackCountSameSerial', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BFNBGAPD@FireScreamExplosionRate?$AA@
CONST	SEGMENT
??_C@_0BI@BFNBGAPD@FireScreamExplosionRate?$AA@ DB 'FireScreamExplosionRa'
	DB	'te', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CACJLIIP@FireScreamExplosionAttackDistanc@
CONST	SEGMENT
??_C@_0CC@CACJLIIP@FireScreamExplosionAttackDistanc@ DB 'FireScreamExplos'
	DB	'ionAttackDistance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HINCJBHF@FireScreamSkill?$AA@
CONST	SEGMENT
??_C@_0BA@HINCJBHF@FireScreamSkill?$AA@ DB 'FireScreamSkill', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GP@EPLMPGME@?$FLSkill?5Addition?5Info?$FN?5?$FLInfinity?5@
CONST	SEGMENT
??_C@_0GP@EPLMPGME@?$FLSkill?5Addition?5Info?$FN?5?$FLInfinity?5@ DB '[Sk'
	DB	'ill Addition Info] [Infinity Arrow] Skill Time[%d], UseLevel['
	DB	'%d], Arrow MP Consumption +0[%d] +1[%d] +2[%d]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LGDOBBEK@InfinityArraowMPConsumptionPlus2@
CONST	SEGMENT
??_C@_0CB@LGDOBBEK@InfinityArraowMPConsumptionPlus2@ DB 'InfinityArraowMP'
	DB	'ConsumptionPlus2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JNBDECIJ@InfinityArraowMPConsumptionPlus1@
CONST	SEGMENT
??_C@_0CB@JNBDECIJ@InfinityArraowMPConsumptionPlus1@ DB 'InfinityArraowMP'
	DB	'ConsumptionPlus1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IEAIHDMI@InfinityArraowMPConsumptionPlus0@
CONST	SEGMENT
??_C@_0CB@IEAIHDMI@InfinityArraowMPConsumptionPlus0@ DB 'InfinityArraowMP'
	DB	'ConsumptionPlus0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DADLDHMB@InfinityArrowUseLevel?$AA@
CONST	SEGMENT
??_C@_0BG@DADLDHMB@InfinityArrowUseLevel?$AA@ DB 'InfinityArrowUseLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EMMBJNGJ@SkillInfo?$AA@
CONST	SEGMENT
??_C@_09EMMBJNGJ@SkillInfo?$AA@ DB 'SkillInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KBNHBCCN@InfinityArrowSkillTime?$AA@
CONST	SEGMENT
??_C@_0BH@KBNHBCCN@InfinityArrowSkillTime?$AA@ DB 'InfinityArrowSkillTime'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@CSkillAdditionInfo@@QAEHPAD@Z
_TEXT	SEGMENT
_lpszFileName$ = 8					; size = 4
?Load@CSkillAdditionInfo@@QAEHPAD@Z PROC		; CSkillAdditionInfo::Load, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 42   : 	if ( lpszFileName == NULL || strcmp(lpszFileName, "") == 0 )

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _lpszFileName$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	85 db		 test	 ebx, ebx
  0000d	0f 84 d8 01 00
	00		 je	 $LN1@Load
  00013	bf 00 00 00 00	 mov	 edi, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00018	8b c3		 mov	 eax, ebx
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL5@Load:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	3a 0f		 cmp	 cl, BYTE PTR [edi]
  00024	75 1a		 jne	 SHORT $LN6@Load
  00026	84 c9		 test	 cl, cl
  00028	74 12		 je	 SHORT $LN7@Load
  0002a	8a 48 01	 mov	 cl, BYTE PTR [eax+1]
  0002d	3a 4f 01	 cmp	 cl, BYTE PTR [edi+1]
  00030	75 0e		 jne	 SHORT $LN6@Load
  00032	83 c0 02	 add	 eax, 2
  00035	83 c7 02	 add	 edi, 2
  00038	84 c9		 test	 cl, cl
  0003a	75 e4		 jne	 SHORT $LL5@Load
$LN7@Load:
  0003c	33 c0		 xor	 eax, eax
  0003e	eb 05		 jmp	 SHORT $LN8@Load
$LN6@Load:
  00040	1b c0		 sbb	 eax, eax
  00042	83 d8 ff	 sbb	 eax, -1
$LN8@Load:
  00045	85 c0		 test	 eax, eax
  00047	0f 84 9e 01 00
	00		 je	 $LN1@Load

; 46   : 	}
; 47   : 
; 48   : 	this->m_iInfinityArrowSkillTime = GetPrivateProfileInt("SkillInfo", "InfinityArrowSkillTime", 600, gDirPath.GetNewPath(lpszFileName)); 

  0004d	53		 push	 ebx
  0004e	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00053	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00058	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  0005e	50		 push	 eax
  0005f	68 58 02 00 00	 push	 600			; 00000258H
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KBNHBCCN@InfinityArrowSkillTime?$AA@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  0006e	ff d7		 call	 edi

; 49   : 	this->m_iInfinityArrowUseLevel = GetPrivateProfileInt("SkillInfo", "InfinityArrowUseLevel", 220, gDirPath.GetNewPath(lpszFileName)); 

  00070	53		 push	 ebx
  00071	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00076	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00079	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0007e	50		 push	 eax
  0007f	68 dc 00 00 00	 push	 220			; 000000dcH
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DADLDHMB@InfinityArrowUseLevel?$AA@
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  0008e	ff d7		 call	 edi

; 50   : 	this->m_iInfinityArrowMPConsumptionPlus0 = GetPrivateProfileInt("SkillInfo", "InfinityArraowMPConsumptionPlus0", 0, gDirPath.GetNewPath(lpszFileName));

  00090	53		 push	 ebx
  00091	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00096	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00099	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0009e	50		 push	 eax
  0009f	6a 00		 push	 0
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@IEAIHDMI@InfinityArraowMPConsumptionPlus0@
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  000ab	ff d7		 call	 edi

; 51   : 	this->m_iInfinityArrowMPConsumptionPlus1 = GetPrivateProfileInt("SkillInfo", "InfinityArraowMPConsumptionPlus1", 0, gDirPath.GetNewPath(lpszFileName));

  000ad	53		 push	 ebx
  000ae	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  000b3	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  000b6	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000bb	50		 push	 eax
  000bc	6a 00		 push	 0
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@JNBDECIJ@InfinityArraowMPConsumptionPlus1@
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  000c8	ff d7		 call	 edi

; 52   : 	this->m_iInfinityArrowMPConsumptionPlus2 = GetPrivateProfileInt("SkillInfo", "InfinityArraowMPConsumptionPlus2", 0, gDirPath.GetNewPath(lpszFileName));

  000ca	53		 push	 ebx
  000cb	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  000d0	89 46 10	 mov	 DWORD PTR [esi+16], eax
  000d3	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  000d8	50		 push	 eax
  000d9	6a 00		 push	 0
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LGDOBBEK@InfinityArraowMPConsumptionPlus2@
  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  000e5	ff d7		 call	 edi

; 53   : 
; 54   : 
; 55   : 	LogAdd(LOG_BLACK, "[Skill Addition Info] [Infinity Arrow] Skill Time[%d], UseLevel[%d], Arrow MP Consumption +0[%d] +1[%d] +2[%d]",
; 56   : 		this->m_iInfinityArrowSkillTime, this->m_iInfinityArrowUseLevel,
; 57   : 		this->m_iInfinityArrowMPConsumptionPlus0, this->m_iInfinityArrowMPConsumptionPlus1,
; 58   : 		this->m_iInfinityArrowMPConsumptionPlus2);

  000e7	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000ea	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  000ed	50		 push	 eax
  000ee	89 46 14	 mov	 DWORD PTR [esi+20], eax
  000f1	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000f4	50		 push	 eax
  000f5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f8	51		 push	 ecx
  000f9	52		 push	 edx
  000fa	50		 push	 eax
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0GP@EPLMPGME@?$FLSkill?5Addition?5Info?$FN?5?$FLInfinity?5@
  00100	6a 00		 push	 0
  00102	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  00107	83 c4 1c	 add	 esp, 28			; 0000001cH

; 59   : 
; 60   : 	this->m_bFireScreamSkill = GetPrivateProfileInt("SkillInfo", "FireScreamSkill", 1, gDirPath.GetNewPath(lpszFileName));

  0010a	53		 push	 ebx
  0010b	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00110	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00115	50		 push	 eax
  00116	6a 01		 push	 1
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HINCJBHF@FireScreamSkill?$AA@
  0011d	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  00122	ff d7		 call	 edi

; 61   : 	this->m_iFireScreamExplosionAttackDistance = GetPrivateProfileInt("SkillInfo", "FireScreamExplosionAttackDistance", 1, gDirPath.GetNewPath(lpszFileName));

  00124	53		 push	 ebx
  00125	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  0012a	89 46 18	 mov	 DWORD PTR [esi+24], eax
  0012d	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  00132	50		 push	 eax
  00133	6a 01		 push	 1
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@CACJLIIP@FireScreamExplosionAttackDistanc@
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  0013f	ff d7		 call	 edi

; 62   : 	this->m_iFireScreamExplosionRate = GetPrivateProfileInt("SkillInfo", "FireScreamExplosionRate", 300, gDirPath.GetNewPath(lpszFileName));

  00141	53		 push	 ebx
  00142	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00147	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  0014a	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0014f	50		 push	 eax
  00150	68 2c 01 00 00	 push	 300			; 0000012cH
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BFNBGAPD@FireScreamExplosionRate?$AA@
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  0015f	ff d7		 call	 edi

; 63   : 	this->m_iFireScreamMaxAttackCountSameSerial = GetPrivateProfileInt("SkillInfo", "FireScreamMaxAttackCountSameSerial", 3, gDirPath.GetNewPath(lpszFileName));

  00161	53		 push	 ebx
  00162	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00167	89 46 20	 mov	 DWORD PTR [esi+32], eax
  0016a	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0016f	50		 push	 eax
  00170	6a 03		 push	 3
  00172	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@IEHCMBMN@FireScreamMaxAttackCountSameSeri@
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  0017c	ff d7		 call	 edi

; 64   : 	this->m_iFireScreamSerialInitCount = GetPrivateProfileInt("SkillInfo", "FireScreamSerialInitCount", 100, gDirPath.GetNewPath(lpszFileName));

  0017e	53		 push	 ebx
  0017f	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  00184	89 46 24	 mov	 DWORD PTR [esi+36], eax
  00187	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  0018c	50		 push	 eax
  0018d	6a 64		 push	 100			; 00000064H
  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KNFOPFKG@FireScreamSerialInitCount?$AA@
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  00199	ff d7		 call	 edi

; 65   : 	this->m_bCheckFireScreamSerial = GetPrivateProfileInt("SkillInfo", "CheckFireScreamSerial", 1, gDirPath.GetNewPath(lpszFileName));

  0019b	53		 push	 ebx
  0019c	b9 00 00 00 00	 mov	 ecx, OFFSET ?gDirPath@@3VCDirPath@@A ; gDirPath
  001a1	89 46 28	 mov	 DWORD PTR [esi+40], eax
  001a4	e8 00 00 00 00	 call	 ?GetNewPath@CDirPath@@QAEPADPAD@Z ; CDirPath::GetNewPath
  001a9	50		 push	 eax
  001aa	6a 01		 push	 1
  001ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PJAAPPCH@CheckFireScreamSerial?$AA@
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_09EMMBJNGJ@SkillInfo?$AA@
  001b6	ff d7		 call	 edi

; 66   : 
; 67   : 
; 68   : 	LogAdd(LOG_BLACK, "[Skill Addition Info] [Fire Scream] Use(%d) : Explosion Distance(%d) - Rate(%d), MaxAttack_SameSerial(%d), SerialInitCount(%d), Check Serial(%d)",
; 69   : 		this->m_bFireScreamSkill, this->m_iFireScreamExplosionAttackDistance,
; 70   : 		this->m_iFireScreamExplosionRate, this->m_iFireScreamMaxAttackCountSameSerial,
; 71   : 		this->m_iFireScreamSerialInitCount, this->m_bCheckFireScreamSerial);

  001b8	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  001bb	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  001be	50		 push	 eax
  001bf	51		 push	 ecx
  001c0	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  001c3	52		 push	 edx
  001c4	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  001c7	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  001ca	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  001cd	50		 push	 eax
  001ce	51		 push	 ecx
  001cf	52		 push	 edx
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0JB@FKMAEBOB@?$FLSkill?5Addition?5Info?$FN?5?$FLFire?5Scre@
  001d5	6a 00		 push	 0
  001d7	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  001dc	83 c4 20	 add	 esp, 32			; 00000020H
  001df	5f		 pop	 edi
  001e0	5e		 pop	 esi

; 72   : 
; 73   : 	return TRUE;

  001e1	b8 01 00 00 00	 mov	 eax, 1
  001e6	5b		 pop	 ebx

; 74   : }

  001e7	5d		 pop	 ebp
  001e8	c2 04 00	 ret	 4
$LN1@Load:

; 43   : 	{
; 44   : 		LogAdd(LOG_BLACK, "[Skill Addition Info] - File load error : File Name Error");

  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MKBKHGKF@?$FLSkill?5Addition?5Info?$FN?5?9?5File?5loa@
  001f0	6a 00		 push	 0
  001f2	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd
  001f7	83 c4 08	 add	 esp, 8
  001fa	5f		 pop	 edi
  001fb	5e		 pop	 esi

; 45   : 		return FALSE;

  001fc	33 c0		 xor	 eax, eax
  001fe	5b		 pop	 ebx

; 74   : }

  001ff	5d		 pop	 ebp
  00200	c2 04 00	 ret	 4
?Load@CSkillAdditionInfo@@QAEHPAD@Z ENDP		; CSkillAdditionInfo::Load
_TEXT	ENDS
PUBLIC	??0CSkillAdditionInfo@@QAE@XZ			; CSkillAdditionInfo::CSkillAdditionInfo
; Function compile flags: /Ogtp
;	COMDAT ??0CSkillAdditionInfo@@QAE@XZ
_TEXT	SEGMENT
??0CSkillAdditionInfo@@QAE@XZ PROC			; CSkillAdditionInfo::CSkillAdditionInfo, COMDAT
; _this$ = ecx

; 18   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CSkillAdditionInfo@@6B@

; 19   : 	this->Init();

  00006	e8 00 00 00 00	 call	 ?Init@CSkillAdditionInfo@@QAEXXZ ; CSkillAdditionInfo::Init

; 20   : }

  0000b	8b c1		 mov	 eax, ecx
  0000d	c3		 ret	 0
??0CSkillAdditionInfo@@QAE@XZ ENDP			; CSkillAdditionInfo::CSkillAdditionInfo
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCSkillAdditionInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSkillAdditionInfo@@UAEPAXI@Z PROC			; CSkillAdditionInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CSkillAdditionInfo@@UAE@XZ ; CSkillAdditionInfo::~CSkillAdditionInfo
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCSkillAdditionInfo@@UAEPAXI@Z ENDP			; CSkillAdditionInfo::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Ogtp
;	COMDAT ??__Eg_SkillAdditionInfo@@YAXXZ
text$yc	SEGMENT
??__Eg_SkillAdditionInfo@@YAXXZ PROC			; `dynamic initializer for 'g_SkillAdditionInfo'', COMDAT

; 11   : CSkillAdditionInfo g_SkillAdditionInfo;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A ; g_SkillAdditionInfo
  00005	e8 00 00 00 00	 call	 ??0CSkillAdditionInfo@@QAE@XZ ; CSkillAdditionInfo::CSkillAdditionInfo
  0000a	68 00 00 00 00	 push	 OFFSET ??__Fg_SkillAdditionInfo@@YAXXZ ; `dynamic atexit destructor for 'g_SkillAdditionInfo''
  0000f	e8 00 00 00 00	 call	 _atexit
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
??__Eg_SkillAdditionInfo@@YAXXZ ENDP			; `dynamic initializer for 'g_SkillAdditionInfo''
; Function compile flags: /Ogtp
text$yc	ENDS
;	COMDAT ??__Fg_SkillAdditionInfo@@YAXXZ
text$yd	SEGMENT
??__Fg_SkillAdditionInfo@@YAXXZ PROC			; `dynamic atexit destructor for 'g_SkillAdditionInfo'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A ; g_SkillAdditionInfo
  00005	e9 00 00 00 00	 jmp	 ??1CSkillAdditionInfo@@UAE@XZ ; CSkillAdditionInfo::~CSkillAdditionInfo
??__Fg_SkillAdditionInfo@@YAXXZ ENDP			; `dynamic atexit destructor for 'g_SkillAdditionInfo''
text$yd	ENDS
PUBLIC	?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A	; g_SkillAdditionInfo
_BSS	SEGMENT
?g_SkillAdditionInfo@@3VCSkillAdditionInfo@@A DB 030H DUP (?) ; g_SkillAdditionInfo
_BSS	ENDS
CRT$XCU	SEGMENT
_g_SkillAdditionInfo$initializer$ DD FLAT:??__Eg_SkillAdditionInfo@@YAXXZ
CRT$XCU	ENDS
END
