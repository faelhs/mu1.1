; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\MapItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7CMapItem@@6B@				; CMapItem::`vftable'
PUBLIC	??1CMapItem@@UAE@XZ				; CMapItem::~CMapItem
PUBLIC	??_R4CMapItem@@6B@				; CMapItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMapItem@@@8				; CMapItem `RTTI Type Descriptor'
PUBLIC	??_R3CMapItem@@8				; CMapItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMapItem@@8				; CMapItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMapItem@@8			; CMapItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@CItem@@8				; CItem::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCItem@@@8				; CItem `RTTI Type Descriptor'
PUBLIC	??_R3CItem@@8					; CItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItem@@8					; CItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItem@@8				; CItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECMapItem@@UAEPAXI@Z:PROC			; CMapItem::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CItem@@8
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\mapitem.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CItem@@8 DD FLAT:??_R0?AVCItem@@@8	; CItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CItem@@8
rdata$r	SEGMENT
??_R2CItem@@8 DD FLAT:??_R1A@?0A@EA@CItem@@8		; CItem::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CItem@@8
rdata$r	SEGMENT
??_R3CItem@@8 DD 00H					; CItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItem@@@8
_DATA	SEGMENT
??_R0?AVCItem@@@8 DD FLAT:??_7type_info@@6B@		; CItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CItem@@8
rdata$r	SEGMENT
??_R13?0A@EA@CItem@@8 DD FLAT:??_R0?AVCItem@@@8		; CItem::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItem@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMapItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMapItem@@8 DD FLAT:??_R0?AVCMapItem@@@8	; CMapItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CMapItem@@8
rdata$r	SEGMENT
??_R2CMapItem@@8 DD FLAT:??_R1A@?0A@EA@CMapItem@@8	; CMapItem::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@CItem@@8
rdata$r	ENDS
;	COMDAT ??_R3CMapItem@@8
rdata$r	SEGMENT
??_R3CMapItem@@8 DD 00H					; CMapItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMapItem@@@8
_DATA	SEGMENT
??_R0?AVCMapItem@@@8 DD FLAT:??_7type_info@@6B@		; CMapItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMapItem@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CMapItem@@6B@
rdata$r	SEGMENT
??_R4CMapItem@@6B@ DD 00H				; CMapItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMapItem@@@8
	DD	FLAT:??_R3CMapItem@@8
rdata$r	ENDS
;	COMDAT ??_7CMapItem@@6B@
CONST	SEGMENT
??_7CMapItem@@6B@ DD FLAT:??_R4CMapItem@@6B@		; CMapItem::`vftable'
	DD	FLAT:??_ECMapItem@@UAEPAXI@Z
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ??1CMapItem@@UAE@XZ
_TEXT	SEGMENT
??1CMapItem@@UAE@XZ PROC				; CMapItem::~CMapItem, COMDAT
; _this$ = ecx

; 19   : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CMapItem@@6B@

; 20   : 	return;
; 21   : }

  00006	c3		 ret	 0
??1CMapItem@@UAE@XZ ENDP				; CMapItem::~CMapItem
_TEXT	ENDS
PUBLIC	?Init@CMapItem@@QAEXXZ				; CMapItem::Init
EXTRN	_memset:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Init@CMapItem@@QAEXXZ
_TEXT	SEGMENT
?Init@CMapItem@@QAEXXZ PROC				; CMapItem::Init, COMDAT
; _this$ = ecx

; 25   : 	this->VPCount = 0;

  00000	33 d2		 xor	 edx, edx

; 26   : 	this->m_State = 0;
; 27   : 
; 28   : 	for ( int n=0;n<MAX_VIEWPORT;n++ )
; 29   : 	{
; 30   : 		memset(&this->VpPlayer[n], 0, sizeof(VIEWPORT_PLAYER_STRUCT));

  00002	68 84 03 00 00	 push	 900			; 00000384H
  00007	8d 81 c0 00 00
	00		 lea	 eax, DWORD PTR [ecx+192]
  0000d	52		 push	 edx
  0000e	50		 push	 eax
  0000f	89 91 44 04 00
	00		 mov	 DWORD PTR [ecx+1092], edx
  00015	89 91 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], edx
  0001b	e8 00 00 00 00	 call	 _memset
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH

; 31   : 	}
; 32   : }

  00023	c3		 ret	 0
?Init@CMapItem@@QAEXXZ ENDP				; CMapItem::Init
_TEXT	ENDS
PUBLIC	?CreateItem@CMapItem@@QAEXHHHHMEEEEEKE@Z	; CMapItem::CreateItem
EXTRN	?gLootingTime@@3HA:DWORD			; gLootingTime
EXTRN	?gServerInfo@@3VCServerInfo@@A:BYTE		; gServerInfo
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?Convert@CItem@@QAEXHEEEEEEE@Z:PROC		; CItem::Convert
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtp
;	COMDAT ?CreateItem@CMapItem@@QAEXHHHHMEEEEEKE@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
_level$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_dur$ = 24						; size = 4
_Option1$ = 28						; size = 1
_Option2$ = 32						; size = 1
_Option3$ = 36						; size = 1
_NOption$ = 40						; size = 1
_SOption$ = 44						; size = 1
_number$ = 48						; size = 4
_ItemEffectEx$ = 52					; size = 1
?CreateItem@CMapItem@@QAEXHHHHMEEEEEKE@Z PROC		; CMapItem::CreateItem, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 36   : 	this->Init();

  00008	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 37   : 
; 38   : 	this->m_Level = level;
; 39   : 	this->m_Durability = dur;

  0000d	d9 45 18	 fld	 DWORD PTR _dur$[ebp]

; 40   : 	this->Convert(type, Option1, Option2, Option3, NOption, SOption, ItemEffectEx, CURRENT_DB_VERSION);

  00010	8b 4d 34	 mov	 ecx, DWORD PTR _ItemEffectEx$[ebp]
  00013	d9 5e 28	 fstp	 DWORD PTR [esi+40]
  00016	66 8b 45 0c	 mov	 ax, WORD PTR _level$[ebp]
  0001a	8b 55 2c	 mov	 edx, DWORD PTR _SOption$[ebp]
  0001d	6a 03		 push	 3
  0001f	51		 push	 ecx
  00020	8b 4d 24	 mov	 ecx, DWORD PTR _Option3$[ebp]
  00023	52		 push	 edx
  00024	8b 55 20	 mov	 edx, DWORD PTR _Option2$[ebp]
  00027	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
  0002b	8b 45 28	 mov	 eax, DWORD PTR _NOption$[ebp]
  0002e	50		 push	 eax
  0002f	8b 45 1c	 mov	 eax, DWORD PTR _Option1$[ebp]
  00032	51		 push	 ecx
  00033	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  00036	52		 push	 edx
  00037	50		 push	 eax
  00038	51		 push	 ecx
  00039	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003c	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEE@Z ; CItem::Convert

; 41   : 	this->px = x;
; 42   : 	this->py= y;
; 43   : 	this->live = true;
; 44   : 	this->Give = false;
; 45   : 	this->m_State = 1;
; 46   : 
; 47   : 	if ( this->m_QuestItem != false )

  00041	80 be 95 00 00
	00 00		 cmp	 BYTE PTR [esi+149], 0
  00048	8a 45 14	 mov	 al, BYTE PTR _y$[ebp]
  0004b	8a 55 10	 mov	 dl, BYTE PTR _x$[ebp]

; 48   : 	{
; 49   : 		this->m_Time = GetTickCount() + 60000;

  0004e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetTickCount@0
  00054	88 86 ad 00 00
	00		 mov	 BYTE PTR [esi+173], al
  0005a	b8 01 00 00 00	 mov	 eax, 1
  0005f	88 96 ac 00 00
	00		 mov	 BYTE PTR [esi+172], dl
  00065	66 89 86 ae 00
	00 00		 mov	 WORD PTR [esi+174], ax
  0006c	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  00072	74 27		 je	 SHORT $LN2@CreateItem
  00074	ff d3		 call	 ebx
  00076	05 60 ea 00 00	 add	 eax, 60000		; 0000ea60H
  0007b	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax

; 50   : 		this->m_LootTime = GetTickCount() + 600000;

  00081	ff d3		 call	 ebx

; 51   : 		this->m_Number = number;

  00083	8b 4d 30	 mov	 ecx, DWORD PTR _number$[ebp]
  00086	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H
  0008b	5f		 pop	 edi
  0008c	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 56   : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  0008f	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx

; 58   : 	}
; 59   : 
; 60   : }

  00097	5d		 pop	 ebp
  00098	c2 30 00	 ret	 48			; 00000030H
$LN2@CreateItem:

; 52   : 	}
; 53   : 	else
; 54   : 	{
; 55   : 		this->m_Time = GetTickCount() + (gServerInfo.m_Data.iItemDropTime * 1000);

  0009b	ff d3		 call	 ebx
  0009d	8b 15 78 00 00
	00		 mov	 edx, DWORD PTR ?gServerInfo@@3VCServerInfo@@A+120
  000a3	69 d2 e8 03 00
	00		 imul	 edx, 1000		; 000003e8H
  000a9	03 c2		 add	 eax, edx
  000ab	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax

; 56   : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  000b1	ff d3		 call	 ebx
  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gLootingTime@@3HA ; gLootingTime

; 57   : 		this->m_Number = number;

  000b9	8b 55 30	 mov	 edx, DWORD PTR _number$[ebp]
  000bc	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  000c2	03 c1		 add	 eax, ecx
  000c4	5f		 pop	 edi
  000c5	89 56 04	 mov	 DWORD PTR [esi+4], edx
  000c8	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 58   : 	}
; 59   : 
; 60   : }

  000d0	5d		 pop	 ebp
  000d1	c2 30 00	 ret	 48			; 00000030H
?CreateItem@CMapItem@@QAEXHHHHMEEEEEKE@Z ENDP		; CMapItem::CreateItem
_TEXT	ENDS
PUBLIC	?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHE@Z	; CMapItem::DropCreateItem
EXTRN	?SetPetItemInfo@CItem@@QAEXHH@Z:PROC		; CItem::SetPetItemInfo
; Function compile flags: /Ogtp
;	COMDAT ?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHE@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
_level$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_dur$ = 24						; size = 4
_Option1$ = 28						; size = 1
_Option2$ = 32						; size = 1
_Option3$ = 36						; size = 1
_NOption$ = 40						; size = 1
_SOption$ = 44						; size = 1
_number$ = 48						; size = 4
_PetLevel$ = 52						; size = 4
_PetExp$ = 56						; size = 4
_ItemEffectEx$ = 60					; size = 1
?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHE@Z PROC	; CMapItem::DropCreateItem, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f1		 mov	 esi, ecx

; 64   : 	this->Init();

  00008	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 65   : 
; 66   : 	this->m_Level = level;
; 67   : 	this->m_Durability = dur;

  0000d	d9 45 18	 fld	 DWORD PTR _dur$[ebp]

; 68   : 	this->Convert(type, Option1, Option2, Option3, NOption, SOption, ItemEffectEx, CURRENT_DB_VERSION);

  00010	8b 4d 3c	 mov	 ecx, DWORD PTR _ItemEffectEx$[ebp]
  00013	d9 5e 28	 fstp	 DWORD PTR [esi+40]
  00016	66 8b 45 0c	 mov	 ax, WORD PTR _level$[ebp]
  0001a	8b 55 2c	 mov	 edx, DWORD PTR _SOption$[ebp]
  0001d	8b 5d 08	 mov	 ebx, DWORD PTR _type$[ebp]
  00020	6a 03		 push	 3
  00022	51		 push	 ecx
  00023	8b 4d 24	 mov	 ecx, DWORD PTR _Option3$[ebp]
  00026	52		 push	 edx
  00027	8b 55 20	 mov	 edx, DWORD PTR _Option2$[ebp]
  0002a	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
  0002e	8b 45 28	 mov	 eax, DWORD PTR _NOption$[ebp]
  00031	50		 push	 eax
  00032	8b 45 1c	 mov	 eax, DWORD PTR _Option1$[ebp]
  00035	51		 push	 ecx
  00036	52		 push	 edx
  00037	50		 push	 eax
  00038	53		 push	 ebx
  00039	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003c	e8 00 00 00 00	 call	 ?Convert@CItem@@QAEXHEEEEEEE@Z ; CItem::Convert

; 69   : 	this->SetPetItemInfo(PetLevel, PetExp);

  00041	8b 4d 38	 mov	 ecx, DWORD PTR _PetExp$[ebp]
  00044	8b 55 34	 mov	 edx, DWORD PTR _PetLevel$[ebp]
  00047	51		 push	 ecx
  00048	52		 push	 edx
  00049	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0004c	e8 00 00 00 00	 call	 ?SetPetItemInfo@CItem@@QAEXHH@Z ; CItem::SetPetItemInfo

; 70   : 	this->px = x;
; 71   : 	this->py= y;
; 72   : 	this->live = true;
; 73   : 	this->Give = false;
; 74   : 	this->m_State = 1;
; 75   : 
; 76   : 	if ( this->m_QuestItem != false )

  00051	80 be 95 00 00
	00 00		 cmp	 BYTE PTR [esi+149], 0
  00058	8a 45 10	 mov	 al, BYTE PTR _x$[ebp]
  0005b	8a 4d 14	 mov	 cl, BYTE PTR _y$[ebp]
  0005e	88 86 ac 00 00
	00		 mov	 BYTE PTR [esi+172], al
  00064	b8 01 00 00 00	 mov	 eax, 1
  00069	88 8e ad 00 00
	00		 mov	 BYTE PTR [esi+173], cl
  0006f	66 89 86 ae 00
	00 00		 mov	 WORD PTR [esi+174], ax
  00076	89 86 b0 00 00
	00		 mov	 DWORD PTR [esi+176], eax
  0007c	74 3a		 je	 SHORT $LN8@DropCreate

; 77   : 	{
; 78   : 		if ( type == ITEMGET(14,11) )	// Box Of luck

  0007e	81 fb 0b 1c 00
	00		 cmp	 ebx, 7179		; 00001c0bH

; 79   : 		{
; 80   : 			this->m_Time = GetTickCount() + 1000;

  00084	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetTickCount@0
  0008a	75 16		 jne	 SHORT $LN7@DropCreate
  0008c	ff d3		 call	 ebx
  0008e	05 e8 03 00 00	 add	 eax, 1000		; 000003e8H

; 81   : 		}
; 82   : 		else
; 83   : 		{
; 84   : 			this->m_Time = GetTickCount() + 60000;

  00093	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax

; 85   : 		}
; 86   : 
; 87   : 		this->m_LootTime = GetTickCount() + 600000;

  00099	ff d3		 call	 ebx
  0009b	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H

; 88   : 		this->m_Number = number;
; 89   : 	}
; 90   : 	else 

  000a0	eb 4a		 jmp	 SHORT $LN14@DropCreate
$LN7@DropCreate:

; 81   : 		}
; 82   : 		else
; 83   : 		{
; 84   : 			this->m_Time = GetTickCount() + 60000;

  000a2	ff d3		 call	 ebx
  000a4	05 60 ea 00 00	 add	 eax, 60000		; 0000ea60H
  000a9	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax

; 85   : 		}
; 86   : 
; 87   : 		this->m_LootTime = GetTickCount() + 600000;

  000af	ff d3		 call	 ebx
  000b1	05 c0 27 09 00	 add	 eax, 600000		; 000927c0H

; 88   : 		this->m_Number = number;
; 89   : 	}
; 90   : 	else 

  000b6	eb 34		 jmp	 SHORT $LN14@DropCreate
$LN8@DropCreate:

; 91   : 	{
; 92   : 		if ( type == ITEMGET(14,11) )

  000b8	81 fb 0b 1c 00
	00		 cmp	 ebx, 7179		; 00001c0bH

; 93   : 		{
; 94   : 			this->m_Time = GetTickCount() + 1000;

  000be	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__GetTickCount@0
  000c4	75 09		 jne	 SHORT $LN4@DropCreate
  000c6	ff d3		 call	 ebx
  000c8	05 e8 03 00 00	 add	 eax, 1000		; 000003e8H

; 95   : 		}
; 96   : 		else

  000cd	eb 07		 jmp	 SHORT $LN15@DropCreate
$LN4@DropCreate:

; 97   : 		{
; 98   : 			this->m_Time = GetTickCount() + 120000;

  000cf	ff d3		 call	 ebx
  000d1	05 c0 d4 01 00	 add	 eax, 120000		; 0001d4c0H
$LN15@DropCreate:
  000d6	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax

; 99   : 		}
; 100  : 
; 101  : 		this->m_LootTime = GetTickCount() + gLootingTime*1000;

  000dc	ff d3		 call	 ebx
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gLootingTime@@3HA ; gLootingTime
  000e4	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  000ea	03 c1		 add	 eax, ecx
$LN14@DropCreate:

; 102  : 		this->m_Number = number;
; 103  : 	}
; 104  : 
; 105  : 	if ( type == ITEMGET(13,19) ) // Absolute Weapon of Archangel

  000ec	81 7d 08 13 1a
	00 00		 cmp	 DWORD PTR _type$[ebp], 6675 ; 00001a13H
  000f3	8b 55 30	 mov	 edx, DWORD PTR _number$[ebp]
  000f6	89 56 04	 mov	 DWORD PTR [esi+4], edx
  000f9	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax
  000ff	75 2a		 jne	 SHORT $LN1@DropCreate

; 106  : 	{
; 107  : 		if ( ( level  < 0)?FALSE:(level>2)?FALSE:TRUE)

  00101	8b 45 0c	 mov	 eax, DWORD PTR _level$[ebp]
  00104	85 c0		 test	 eax, eax
  00106	78 23		 js	 SHORT $LN1@DropCreate
  00108	33 c9		 xor	 ecx, ecx
  0010a	83 f8 02	 cmp	 eax, 2
  0010d	0f 9e c1	 setle	 cl
  00110	8b c1		 mov	 eax, ecx
  00112	85 c0		 test	 eax, eax
  00114	74 15		 je	 SHORT $LN1@DropCreate

; 108  : 		{
; 109  : 			this->m_Time = GetTickCount() + 900000;

  00116	ff d3		 call	 ebx
  00118	05 a0 bb 0d 00	 add	 eax, 900000		; 000dbba0H
  0011d	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax

; 110  : 			this->m_LootTime = GetTickCount();

  00123	ff d3		 call	 ebx
  00125	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax
$LN1@DropCreate:
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx

; 111  : 		}
; 112  : 	}
; 113  : }

  0012e	5d		 pop	 ebp
  0012f	c2 38 00	 ret	 56			; 00000038H
?DropCreateItem@CMapItem@@QAEXHHHHMEEEEEKHHE@Z ENDP	; CMapItem::DropCreateItem
_TEXT	ENDS
PUBLIC	??0CMapItem@@QAE@XZ				; CMapItem::CMapItem
EXTRN	??0CItem@@QAE@XZ:PROC				; CItem::CItem
; Function compile flags: /Ogtp
;	COMDAT ??0CMapItem@@QAE@XZ
_TEXT	SEGMENT
??0CMapItem@@QAE@XZ PROC				; CMapItem::CMapItem, COMDAT
; _this$ = ecx

; 14   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ??0CItem@@QAE@XZ	; CItem::CItem

; 15   : 	this->Init();

  0000b	8b ce		 mov	 ecx, esi
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CMapItem@@6B@
  00013	e8 00 00 00 00	 call	 ?Init@CMapItem@@QAEXXZ	; CMapItem::Init

; 16   : }

  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c3		 ret	 0
??0CMapItem@@QAE@XZ ENDP				; CMapItem::CMapItem
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtp
;	COMDAT ??_GCMapItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCMapItem@@UAEPAXI@Z PROC				; CMapItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CMapItem@@UAE@XZ	; CMapItem::~CMapItem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 09		 je	 SHORT $LN4@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	83 c4 04	 add	 esp, 4
$LN4@scalar:
  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
??_GCMapItem@@UAEPAXI@Z ENDP				; CMapItem::`scalar deleting destructor'
_TEXT	ENDS
END
