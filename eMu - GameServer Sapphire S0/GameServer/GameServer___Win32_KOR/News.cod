; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\faelhs\mu-1.1\eMu - GameServer Sapphire S0\GameServer\News.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gNews@@3VCNews@@A				; gNews
_BSS	SEGMENT
?gNews@@3VCNews@@A DB 057f0H DUP (?)			; gNews
_BSS	ENDS
PUBLIC	?CheckProcent@CNews@@QAEXPAD@Z			; CNews::CheckProcent
; Function compile flags: /Ogtp
; File c:\users\faelhs\mu-1.1\emu - gameserver sapphire s0\gameserver\news.cpp
;	COMDAT ?CheckProcent@CNews@@QAEXPAD@Z
_TEXT	SEGMENT
_szMsg$ = 8						; size = 4
?CheckProcent@CNews@@QAEXPAD@Z PROC			; CNews::CheckProcent, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 36   : 	for(int i = 0; i <= strlen(szMsg); i++)

  00005	8b 7d 08	 mov	 edi, DWORD PTR _szMsg$[ebp]
  00008	33 d2		 xor	 edx, edx
  0000a	8d 9b 00 00 00
	00		 npad	 6
$LL7@CheckProce:

; 37   : 	{                          						   
; 38   : 		if(szMsg[i] == '%')		  

  00010	80 3c 3a 25	 cmp	 BYTE PTR [edx+edi], 37	; 00000025H
  00014	75 2a		 jne	 SHORT $LN6@CheckProce

; 39   : 		{
; 40   : 			for(int x = strlen(szMsg); x >= i; x--)	

  00016	8b c7		 mov	 eax, edi
  00018	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0001b	eb 03 8d 49 00	 npad	 5
$LL14@CheckProce:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $LL14@CheckProce
  00027	2b c6		 sub	 eax, esi
  00029	3b c2		 cmp	 eax, edx
  0002b	7c 12		 jl	 SHORT $LN1@CheckProce
  0002d	8d 4c 38 01	 lea	 ecx, DWORD PTR [eax+edi+1]
  00031	2b c2		 sub	 eax, edx
  00033	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL3@CheckProce:

; 41   : 			{
; 42   : 				szMsg[x + 1] = szMsg[x];

  00036	8a 41 ff	 mov	 al, BYTE PTR [ecx-1]
  00039	88 01		 mov	 BYTE PTR [ecx], al
  0003b	49		 dec	 ecx
  0003c	4e		 dec	 esi
  0003d	75 f7		 jne	 SHORT $LL3@CheckProce
$LN1@CheckProce:

; 43   : 			}
; 44   : 			// ---
; 45   : 			i++;

  0003f	42		 inc	 edx
$LN6@CheckProce:

; 36   : 	for(int i = 0; i <= strlen(szMsg); i++)

  00040	8b c7		 mov	 eax, edi
  00042	42		 inc	 edx
  00043	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL15@CheckProce:
  00046	8a 08		 mov	 cl, BYTE PTR [eax]
  00048	40		 inc	 eax
  00049	84 c9		 test	 cl, cl
  0004b	75 f9		 jne	 SHORT $LL15@CheckProce
  0004d	2b c6		 sub	 eax, esi
  0004f	3b d0		 cmp	 edx, eax
  00051	76 bd		 jbe	 SHORT $LL7@CheckProce
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi

; 46   : 		}
; 47   : 	}
; 48   : }

  00055	5d		 pop	 ebp
  00056	c2 04 00	 ret	 4
?CheckProcent@CNews@@QAEXPAD@Z ENDP			; CNews::CheckProcent
_TEXT	ENDS
PUBLIC	?Init@CNews@@SAXPAX@Z				; CNews::Init
EXTRN	__endthread:PROC
EXTRN	?MsgAllUser@@YAXHPADZZ:PROC			; MsgAllUser
EXTRN	__imp__Sleep@4:PROC
; Function compile flags: /Ogtp
;	COMDAT ?Init@CNews@@SAXPAX@Z
_TEXT	SEGMENT
_lpParam$ = 8						; size = 4
?Init@CNews@@SAXPAX@Z PROC				; CNews::Init, COMDAT

; 51   : 	while(gNews.iEnabled)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gNews@@3VCNews@@A, 0
  00007	74 5d		 je	 SHORT $LN7@Init
  00009	a1 04 00 00 00	 mov	 eax, DWORD PTR ?gNews@@3VCNews@@A+4
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
$LL8@Init:

; 52   :     {
; 53   :         for(int i = 1; i <= gNews.iSections; i++)

  00011	bb 01 00 00 00	 mov	 ebx, 1
  00016	3b c3		 cmp	 eax, ebx
  00018	7c 40		 jl	 SHORT $LN4@Init
  0001a	be ce 01 00 00	 mov	 esi, OFFSET ?gNews@@3VCNews@@A+462
  0001f	90		 npad	 1
$LL6@Init:

; 54   :         {
; 55   : 			Sleep(gNews.iInterval);

  00020	a1 08 00 00 00	 mov	 eax, DWORD PTR ?gNews@@3VCNews@@A+8
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
  0002c	bf 03 00 00 00	 mov	 edi, 3
$LL3@Init:

; 56   : 			// ---
; 57   :             for(int n = 0; n < 3; n++)
; 58   :             {
; 59   : 				gNews.CheckProcent(gNews.m_Data[i].szMessage[n]);

  00031	56		 push	 esi
  00032	b9 00 00 00 00	 mov	 ecx, OFFSET ?gNews@@3VCNews@@A ; gNews
  00037	e8 00 00 00 00	 call	 ?CheckProcent@CNews@@QAEXPAD@Z ; CNews::CheckProcent

; 60   : 				// ---
; 61   : 				MsgAllUser(0, gNews.m_Data[i].szMessage[n]);

  0003c	56		 push	 esi
  0003d	6a 00		 push	 0
  0003f	e8 00 00 00 00	 call	 ?MsgAllUser@@YAXHPADZZ	; MsgAllUser
  00044	83 c4 08	 add	 esp, 8
  00047	81 c6 96 00 00
	00		 add	 esi, 150		; 00000096H
  0004d	4f		 dec	 edi
  0004e	75 e1		 jne	 SHORT $LL3@Init

; 52   :     {
; 53   :         for(int i = 1; i <= gNews.iSections; i++)

  00050	a1 04 00 00 00	 mov	 eax, DWORD PTR ?gNews@@3VCNews@@A+4
  00055	43		 inc	 ebx
  00056	3b d8		 cmp	 ebx, eax
  00058	7e c6		 jle	 SHORT $LL6@Init
$LN4@Init:

; 51   : 	while(gNews.iEnabled)

  0005a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gNews@@3VCNews@@A, 0
  00061	75 ae		 jne	 SHORT $LL8@Init
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
$LN7@Init:

; 62   :             }
; 63   :         }
; 64   :     }
; 65   : 	// ---
; 66   :     _endthread();

  00066	e9 00 00 00 00	 jmp	 __endthread
?Init@CNews@@SAXPAX@Z ENDP				; CNews::Init
_TEXT	ENDS
PUBLIC	??_C@_0BI@ODGCPKKH@?$FLNEWS?5FILE?$FN?5Carregado?5?$CB?$AA@ ; `string'
PUBLIC	??_C@_06CDPBKJEJ@News?$CFd?$AA@			; `string'
PUBLIC	??_C@_09MOJGCJNP@Section?$CFd?$AA@		; `string'
PUBLIC	??_C@_0L@JOFGPDLF@IsInterval?$AA@		; `string'
PUBLIC	??_C@_0L@GMAGKDFH@IsSections?$AA@		; `string'
PUBLIC	_this$GSCopy$
PUBLIC	??_C@_04IHEKLNBL@News?$AA@			; `string'
PUBLIC	??_C@_09BDCHKIMD@IsEnabled?$AA@			; `string'
PUBLIC	??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Load@CNews@@QAEXXZ				; CNews::Load
EXTRN	?LogAdd@@YAXW4eLogColor@@PADZZ:PROC		; LogAdd
EXTRN	__beginthread:PROC
EXTRN	__imp__GetPrivateProfileStringA@24:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__GetPrivateProfileIntA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BI@ODGCPKKH@?$FLNEWS?5FILE?$FN?5Carregado?5?$CB?$AA@
CONST	SEGMENT
??_C@_0BI@ODGCPKKH@?$FLNEWS?5FILE?$FN?5Carregado?5?$CB?$AA@ DB '[NEWS FIL'
	DB	'E] Carregado !', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06CDPBKJEJ@News?$CFd?$AA@
CONST	SEGMENT
??_C@_06CDPBKJEJ@News?$CFd?$AA@ DB 'News%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MOJGCJNP@Section?$CFd?$AA@
CONST	SEGMENT
??_C@_09MOJGCJNP@Section?$CFd?$AA@ DB 'Section%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JOFGPDLF@IsInterval?$AA@
CONST	SEGMENT
??_C@_0L@JOFGPDLF@IsInterval?$AA@ DB 'IsInterval', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GMAGKDFH@IsSections?$AA@
CONST	SEGMENT
??_C@_0L@GMAGKDFH@IsSections?$AA@ DB 'IsSections', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHEKLNBL@News?$AA@
CONST	SEGMENT
??_C@_04IHEKLNBL@News?$AA@ DB 'News', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BDCHKIMD@IsEnabled?$AA@
CONST	SEGMENT
??_C@_09BDCHKIMD@IsEnabled?$AA@ DB 'IsEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@
CONST	SEGMENT
??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@ DB '.\Customs'
	DB	'\Systems\Hgt_News.ini', 00H			; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT ?Load@CNews@@QAEXXZ
_TEXT	SEGMENT
_this$GSCopy$ = -116					; size = 4
_i$153500 = -112					; size = 4
_szBuffer$ = -108					; size = 50
_szTemp$ = -56						; size = 50
__$ArrayPad$ = -4					; size = 4
?Load@CNews@@QAEXXZ PROC				; CNews::Load, COMDAT
; _this$ = ecx

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi

; 8    : 	this->iEnabled	= GetPrivateProfileInt("News", "IsEnabled", NULL, NEWS_FILE);

  00012	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetPrivateProfileIntA@16
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@
  0001d	6a 00		 push	 0
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_09BDCHKIMD@IsEnabled?$AA@
  00024	8b f1		 mov	 esi, ecx
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_04IHEKLNBL@News?$AA@

; 9    : 	this->iSections = GetPrivateProfileInt("News", "IsSections", NULL, NEWS_FILE);
; 10   : 	this->iInterval = GetPrivateProfileInt("News", "IsInterval", NULL, NEWS_FILE) * 60000;
; 11   : 	// ---
; 12   : 	char szBuffer[50] = {0};
; 13   : 	char szTemp[50] = {0};
; 14   : 	// ---
; 15   : 	ZeroMemory(this->m_Data, sizeof(this->m_Data));
; 16   : 	// ---
; 17   : 	for(int i = 1; i <= this->iSections; i++)

  0002b	89 75 8c	 mov	 DWORD PTR _this$GSCopy$[ebp], esi
  0002e	ff d7		 call	 edi
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@
  00035	6a 00		 push	 0
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GMAGKDFH@IsSections?$AA@
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_04IHEKLNBL@News?$AA@
  00041	89 06		 mov	 DWORD PTR [esi], eax
  00043	ff d7		 call	 edi
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@
  0004a	6a 00		 push	 0
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JOFGPDLF@IsInterval?$AA@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_04IHEKLNBL@News?$AA@
  00056	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00059	ff d7		 call	 edi
  0005b	69 c0 60 ea 00
	00		 imul	 eax, 60000		; 0000ea60H
  00061	6a 31		 push	 49			; 00000031H
  00063	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00066	8d 45 95	 lea	 eax, DWORD PTR _szBuffer$[ebp+1]
  00069	6a 00		 push	 0
  0006b	50		 push	 eax
  0006c	c6 45 94 00	 mov	 BYTE PTR _szBuffer$[ebp], 0
  00070	e8 00 00 00 00	 call	 _memset
  00075	6a 31		 push	 49			; 00000031H
  00077	8d 4d c9	 lea	 ecx, DWORD PTR _szTemp$[ebp+1]
  0007a	6a 00		 push	 0
  0007c	51		 push	 ecx
  0007d	c6 45 c8 00	 mov	 BYTE PTR _szTemp$[ebp], 0
  00081	e8 00 00 00 00	 call	 _memset
  00086	68 e4 57 00 00	 push	 22500			; 000057e4H
  0008b	8d 56 0c	 lea	 edx, DWORD PTR [esi+12]
  0008e	6a 00		 push	 0
  00090	52		 push	 edx
  00091	e8 00 00 00 00	 call	 _memset
  00096	b8 01 00 00 00	 mov	 eax, 1
  0009b	83 c4 24	 add	 esp, 36			; 00000024H
  0009e	89 45 90	 mov	 DWORD PTR _i$153500[ebp], eax
  000a1	39 46 04	 cmp	 DWORD PTR [esi+4], eax
  000a4	7c 6b		 jl	 SHORT $LN4@Load

; 18   :     {
; 19   :         wsprintf(szBuffer, "Section%d", i);

  000a6	53		 push	 ebx
  000a7	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__wsprintfA
  000ad	8d be ce 01 00
	00		 lea	 edi, DWORD PTR [esi+462]
$LL13@Load:
  000b3	8b 45 90	 mov	 eax, DWORD PTR _i$153500[ebp]
  000b6	50		 push	 eax
  000b7	8d 4d 94	 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_09MOJGCJNP@Section?$CFd?$AA@
  000bf	51		 push	 ecx
  000c0	ff d3		 call	 ebx
  000c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 20   : 		// ---
; 21   :         for(int n = 0; n < 3; n++)

  000c5	33 c0		 xor	 eax, eax
$LL3@Load:

; 22   :         { 
; 23   :             wsprintf(szTemp, "News%d", n+1);

  000c7	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  000ca	56		 push	 esi
  000cb	8d 55 c8	 lea	 edx, DWORD PTR _szTemp$[ebp]
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_06CDPBKJEJ@News?$CFd?$AA@
  000d3	52		 push	 edx
  000d4	ff d3		 call	 ebx
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 24   : 			// ---
; 25   :             GetPrivateProfileString(szBuffer, szTemp, NULL, this->m_Data[i].szMessage[n], 150, NEWS_FILE);

  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@COPMHGDO@?4?2Customs?2Systems?2Hgt_News?4ini?$AA@
  000de	68 96 00 00 00	 push	 150			; 00000096H
  000e3	57		 push	 edi
  000e4	6a 00		 push	 0
  000e6	8d 45 c8	 lea	 eax, DWORD PTR _szTemp$[ebp]
  000e9	50		 push	 eax
  000ea	8d 4d 94	 lea	 ecx, DWORD PTR _szBuffer$[ebp]
  000ed	51		 push	 ecx
  000ee	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetPrivateProfileStringA@24
  000f4	8b c6		 mov	 eax, esi
  000f6	81 c7 96 00 00
	00		 add	 edi, 150		; 00000096H
  000fc	83 f8 03	 cmp	 eax, 3
  000ff	7c c6		 jl	 SHORT $LL3@Load

; 9    : 	this->iSections = GetPrivateProfileInt("News", "IsSections", NULL, NEWS_FILE);
; 10   : 	this->iInterval = GetPrivateProfileInt("News", "IsInterval", NULL, NEWS_FILE) * 60000;
; 11   : 	// ---
; 12   : 	char szBuffer[50] = {0};
; 13   : 	char szTemp[50] = {0};
; 14   : 	// ---
; 15   : 	ZeroMemory(this->m_Data, sizeof(this->m_Data));
; 16   : 	// ---
; 17   : 	for(int i = 1; i <= this->iSections; i++)

  00101	8b 45 90	 mov	 eax, DWORD PTR _i$153500[ebp]
  00104	8b 55 8c	 mov	 edx, DWORD PTR _this$GSCopy$[ebp]
  00107	40		 inc	 eax
  00108	89 45 90	 mov	 DWORD PTR _i$153500[ebp], eax
  0010b	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  0010e	7e a3		 jle	 SHORT $LL13@Load
  00110	5b		 pop	 ebx
$LN4@Load:

; 26   :         }
; 27   :     }
; 28   : 	// ---
; 29   : 	_beginthread(this->Init, NULL, NULL);

  00111	6a 00		 push	 0
  00113	6a 00		 push	 0
  00115	68 00 00 00 00	 push	 OFFSET ?Init@CNews@@SAXPAX@Z ; CNews::Init
  0011a	e8 00 00 00 00	 call	 __beginthread

; 30   : 	// ---
; 31   : 	LogAdd(LOG_GOLD, "[NEWS FILE] Carregado !");

  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@ODGCPKKH@?$FLNEWS?5FILE?$FN?5Carregado?5?$CB?$AA@
  00124	6a 05		 push	 5
  00126	e8 00 00 00 00	 call	 ?LogAdd@@YAXW4eLogColor@@PADZZ ; LogAdd

; 32   : }

  0012b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012e	83 c4 14	 add	 esp, 20			; 00000014H
  00131	5f		 pop	 edi
  00132	33 cd		 xor	 ecx, ebp
  00134	5e		 pop	 esi
  00135	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013a	8b e5		 mov	 esp, ebp
  0013c	5d		 pop	 ebp
  0013d	c3		 ret	 0
?Load@CNews@@QAEXXZ ENDP				; CNews::Load
_TEXT	ENDS
END
